%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: TechnologyReview.dvi
%%CreationDate: Tue Nov 14 00:15:55 2017
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold URWPalladioL-Ital
%%+ NimbusSanL-Bold NimbusSanL-Regu CMSY7
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter TechnologyReview.dvi -o
%+ TechnologyReview.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.11.14:0015
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE064BC47635CCA71
AA72328472FF6822BD62A82B7765A73CA0239A9E28179AE7740477196602ABF4
2EE916B80AAFB638D00C1FB2A1EAFDC4516C7EE3EE4F5D3039E70EF3B07915B8
7C9C128C2ED3C27FE48D27D39B41E1ECEC46CD2209D760D75E743AD13AF1E761
A8B7F996ABCAEA43645546F42C87F6909258CC74419B96A39D6DA3233834894C
C60B03F867B6ADAA2C18F60040A9D8E70BAB12221217095DFC57117CDEB536FD
A09E11787D4F7B448F88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E5D9AEA26274E5D1B75C6E7C9E45C0FD932C7648
29548D1C357DF3B37E8CE69B844DEE746310B796A3533F94363EF0DD6169645C
59195904BECFAD01D0F6BECCBD655D5C222AE04B1E8658F368B7A541B0D15E44
24C26B9F11A276C1B2F46DB8AA8C2ED75C9D48DC3FBB1B774C325D27113B3B90
BA90FA7240719CF20247AFE827CA1737D52857A23FA98FAE8044179C39BE2C98
1AAFA1AE22778230E2D5EB6497E5FFC3F42F921D984C8CC4ECC5936B87BF165B
4CFF27B5C906F97AE3348C10D57DD5E2D5FE4553ADA5745AE8EE1F8ACD9BC7D9
899CD1C8BBB6BE999AC3384E76924D0A6D986695E416863CB6E924D7A865C817
F3F289BB8EE9903632A0F08DC7B007337B680C9E0CF3E5440B37DFEEFFFCE780
D288565525B144C50E93B534704E462A4F20F9AE5702DCF489B585F5190F9ABA
BC6BA8BF0A93D771B7ABDCE13D9B38CFBBDD8C63B665CA594A4AEEA94B294079
B5FB0D28629CBE7AA6D4B2ACCEDD68D066777739FC42EE3624CA9754C4B6A8B3
3BC05A3C77E9B31E73863967A4FF7FCCCD04CFD61476B4495F975B8BF9D7A269
F9B3891E13DA0344397713B6E0A5C6195FAB5F94FF12D08902EE97B8CAB0F872
DDEF7201B82CFDF159D52FD8455FE6FB031B48D904C5120D46D685568423E145
C6B2DD38630FF688B69F4881D91B2D369D2455765BFFD8239D0EB37A83045EA6
86214CC93365FB98BB757ACE99FBA6D4B8B364BF7694E7C6BE871D53D182CF96
05E14A6A3F7522E2E44E7C653774AF62E5C64FDA9101671DE361B756F38FD6BB
E1CAFCA8BB919552B68C4837714B24CC59475B4B502302E78C6B860F0AF60747
907FC70EAFCB4559754DB1AAA5CBA5DDF960975B17C287FEF72BC38931372D5A
92AB5F7813DE8583105A3042FC860D2A57D68E388B84B6450BDD689A10008D7B
A6340A0397F7301A12BD7CC778190DD5AEEBEF18E0B75318EE96B3B8F64318C1
B05ACF3D469528275653EF91C41FA4A5AF7A016DB1F71EE71570E655517584B4
47CA3F38B00545BA6E1F64028A1557C0EDF2654E2BB2A5C8B9C96FB604BC8C12
49D5F0DCA874F43CC67595AB96BD58D7416E39A5823F7EA6E88CBED609D09F9D
2A3EFB5FBCC6C206B6C9BD0DB67C24B6A3DF548A83B3DB6F5D53C4694B36B651
3DCE3AFE423C2DFC17C993F6031E59DD64AAF31E82B94B7671120A3BBC589223
A8983F70545B7172AE024039B37107182277EF43D683908227F49FCCBDB2D359
C73EB3C1D3DDECC35F0FD59D0CECCE29925BE5E43D9E9731AAD07B020D3CCBFC
275E719762C795AF54996144F5F186121F7B3854FE184DA1EC5B428B8AEBC502
C6D41A9C6001ED16B0E92B66D7197F323F60824D13F79652B119EE55207B3DC1
9A5BE0EDCE10A4E1CEE9AED9F9539CBC513F3E0F7A4AB3F42756E6730A8DE91A
44B3DFA2C96C256084D6DA18AF9F030772112A25AF16F68150C378455FDD227E
63F161B999C85AAF3A2346EA93FE7B04414B71D626BE66FF7C7FEC0715F84FA7
7D3B65D73DB6493FE38E02DAD245F8A3D527418B5A668DF06463201B00F833E4
FDAE7934D6F3B792A1257B9FF5EB18BB80A6425EBBCACE8B61B26018C0B94951
E2F9066CC86DCE69FBFA404AAAD46FF165FE342BBCBF05B837E703278B202608
587CAE703571A817E2A7D1FE8496B76E5248A3C9C48F8FAB1F5AE6A7B8DE3F5E
89FCED37E45A5A67950C6C17624E97F8035582667799D7B99A1DB2A7E908CDD9
E23F72E3F5010A9141AAFCE6733B371BF3603301D203C9F199C8D54B46606807
DD209828B4873037EA898A83959389D3BC3540AEC5D22675B6D90E171EABF0D4
7E802F698295CA19AD813AE552E8DCE8D6F2388ABAAC54D93F05357FA5E3B009
A41E67FAEC8A175622223CBF84A4FD63188C4075C00167E486248EF1013E1D96
1469F5DE55D0282A29E9CD17632FE3D5A1F80AEA1F88493EC9C4F0095F0AFAB2
498FE1D71992C2971BEFAEBCD6868BFE9F953BF40758AAFC81BE3E03DEFA2D97
19BE0FB94FC0D4D313DD1E567F28531F2A7D145435F5E9BDD8C3A4A8ACEA9B4A
9462F455BE7DF0156ADD49C72F044B69320A79C6A1C23A69D9F575575A8AEBF7
4BD242E37A51AA15DE66C0398F9055314D0D2E07EA36553A97394E8971511BE4
30907780A9B23E1963FFE6D17E92DA611C21F7E472FDB96994E92731E6192BEB
41DF2D9955B93F95C82ABA825B5E412D7DFAF2ADD7FADCCC82989C490BD26B64
8D4B09A501917EC6EF8001FF73600C12079900060B013F5867B3C6E2737AC62B
79A8B95C68775D97FDB18F5146692B2F42EE2D7D4D45E959CC15EBFB14F8B9EE
6E9A4A1A9E06303C51F019C0AB5D2F8D18F6BF37D27223DE27F51517C6BEFF14
69CDF573CFE58CAB90E49C4DA983157267568EA71955C3A062EFEF9E00F9C76A
48D1E382088D4E6DA42E6FE4B193833B4FAF2AA01AFC9DDFC00F3BEA56B20CEE
ADB782FFA9299A36A26AF840FA51245E68BA4485ACFB63A58300298B1516B829
C3FD6C06B67A6135F1386306A1F63E5BE6BECFA3433B1E409080AF7AF7EEB882
AAAF7DD9376A9C941A505844BF44FDB16E7AF1F71873EBF7FECD1FF96939A703
E8521F7B6FF8DB40E419CA77625C10BC2E03280A82515F664C2DD95099868CFD
5F35C1EA1817B96EDC7EFE4152E8D4C1D0C6A08CD82D594540C04C62EFDC532B
0CDF58AD19805103C96111868CD4B05507066A5EFF2920FFFABB84B896D04838
02318C52B7C24CC9AF78713A5D180673DA7434BD30D6424C17BB0AC7A9DBCD4F
4BF670E36428F54A5748ECB4D1A196028414E78C7DED728931C698676BF5E7FD
4AD8D5F07BD93BF7D3B878829E0C4DDD29F361078A9CB36CDFE0F56146DB8A86
1E46E024C95F31AE17B3A5F26C726618551ED6F3B85C5DB458F9F9B286FAC180
78C9EFE517926FCBB34E12E947B5120C2BA3FADC2A2BB6582A7BED640DB1A8DC
28B930C6040326A9D87C65D63C14BB2F49ED2D369DE7A3DF5212B46B4978717C
037E9F3651EEFBD9C759E6CBA167867721FD043464A75D9E0B6C92A50F401541
055830BA101E12DE774C78A0BAF5850C2E53334AFBF076DC7442F0C54E24B71C
82212361760FA0A3A619BAF5F2CE4A16581287CA52C91C957F37ACD579854CD1
1DE71D78CF1665E3FFD09C78FFF428AC27BCF0318D084A4005635379B9BB4962
F2613D0DD81CCEB228F0B38E5C1DF193348E8CA988354F249E77C9CC8EE4CE02
F8BDAEBB27F26A5A3389398CFAE168DE655CCB85FB2D4530EC01E9AC5C2ED25F
6290723DEDDAE294DA2DAEA6ECE52E4B3584DDBD03B345F3ABD2897BC9C6E09F
A0C47538C692108055EAC99DA91CD3B0A2B7AA4D37B907D3031D08A959102938
0209D4C769FD636A4A108CEDC522B8682FB988983C1298ED156A0881303EBF3F
3B10E1DCF7DBB4EB6DC13F61C0A90C6BD0FE3779C850233D5BEFDBE6A4F71E93
EBE89BEB89B0BE25ED3A311D58A242CD10719D1C27F71B50303BFB33BE5AD4FF
489E44C5390BA39A0DE57212027023944DD1F15D46008DA36B7D906398A8D445
139706F68286959661B128B1333C3AC8C616D3E3A0163ABA54C7A51A07E53122
58C750110A03208A81CC2FE254863CB289801A114432E0BDFABFD6926CDC1F90
71B0C0E0EEB02720EEE764D9AF9DD776179C1F610A95C6BAF7DACAD4AD16F69F
C8885EAD2CAB2644F1E25DF5F6EF5B5ED960494B6A54765B2C56A6AD522004CF
1952D55B0D5E5A7B87E3473D026CDC9CC58BD68EF4CBEA668AEEC5924DBD3DE6
6FDF01271DAF9FBB9BF6FBD49BB6F535A95A1D342A77F4C14591A8F40FA9B365
723F0A51085691FFA140FCC6C511B0DB6DBD8BCFF3D6DA9388B413825D8E1D7A
FD58FA2C942847FDE355DB3C391FE4E9B70B93DE5C2DC8696AE407019CB20384
FE08359F1A0C8E6B4BFDCACF4817DEF04078E11622C1A75BFCC45BACBB620A12
7452A5D02836CE1C74D0D6FAE856D4A614D46A8EDF61DF567D8560485C035CC7
AF85316DC375927FA18D85CA888A5A8D2FADBE8EF2ACC7E323D3F4839BD70038
2C9D6F854A2218822894CA11BDBB205BF40127A7F1D13923D475E5516CFB8928
AB65338955CE24F5BC085B385D3ADFACF082627AF91A9A96444C7DA9C643C35C
E87BE2AF933CAAD62190D61C3F336C8E68585AB5FEE1FB57C5A9F564C6E80733
25CF6C091DEE5EFECC89B9811E7D24B704DA1DC584BF3F662B3E1C1D25A06264
9C439BFF61D9A893DA0177CAB77BB183F54581052B651082CFF58110607A91F8
615190DCE9A8F87B4EE44DC26CF3F24DBA3A77260179470E8E848777A845F6E4
F586F7DCFB880F4DA4053549A93053833E4EC70B61444F8BD590627429929156
E236281118679A10464816AE987435DF2209A560A1C2900D93C7D84334DDC6B6
B7F51C9EDF9F1C56F4D928F66027A6667ED51E045924E18F07223039A46C2DD7
60E55A38A3438240D2F1D473CDB0D16250265E034FEB45E9425DBEF583887879
AD93C362A37A0654F593CD8FB5E52B587CFF44B09B25283E54F1D230A82C58A4
79B4A21449B2F252B70C4E6A2E6A34DC95A52973F8A7A25AEB6318033565C019
0A4757B6311BD322C057F71E9C4A05055899D6ABC54BB7B8EEF7DBE525FB101E
A9A15DC7802A111D96E639679CA6DA215459EFC78ADE233C854A7CE8539682A0
9B7C6820CFC12980C2EF781001B02AC1925E792B908A541D32880AC41C3C5F83
F8957DC9D71D73D954E906B2647C7FB66707443F7F8BBBA16C715F56B2AD5157
F99404607C40AD8B4B3C3CCA3DC352A9CBAB5071834CAA36B7C056F15FA37E77
6AEB6C63DD8CBC0A878608407B9267EC9FB996A19A7E800C2E39D46B6E7F3A87
6E3B269DDB1AF13E0B5C76D126DEEE77DE3068C36E1A1833C74A1F06885C9E8B
9CE810BD205FABE4465E9C757486E0E40A6B0E0170B2CC05D68A2E596C052D43
910D4B83404961B9A63283B1D4754CD791F710F607B47E290248152FE928BE7D
D0820D787DF974516EEAFF8A300B4A3D065E6FD9643F7570A53FC68652CA8DD5
0FA847541C90BAAD321FAD28525708BDBB5027CEA9AA48C6FBD32D1F3520F40D
36C8A4947C9DAFD2048CEC24861DDBB8DB69386D274AE08FAAE916D54C78009E
553136B9DEEDE1C9B65B6D152C790BA093D735051056515566CC059CF84E8E1C
205588BDD027B345E0B35831FF3172069E67F051ABBF98F8AC8A783A629D47FF
4512F4A0D5DAA3401B6A9FFFFA0D76B75C4DEDEEA346D5B5202D1754FFED1B2F
B450C509E046FB3C3E2D574BEA8386A9CB5709CD10E2C9018C7D547A1C57AACB
9058136503F0C5B61E53CAA5C5A4D4469DA8C03047175B089E488167D365CA0B
401F2EC4275FDDEA364B0E1AEB95401EC5D07F9EF6A0A1E832CF17E20103BF35
AA50D9D165FDCBDB597501E66A9F27D674913C7EA7FD7C9004BFC5B2054EC63B
36117BAE98CDC9642FE4AAA5D5FB4CA7B3F5035FEE2DFE6F66762B4E246B58B3
3B2B0D5A09818D3BC7950D029A4456A536FB9D6F8A70194D3B31D172A6C05262
471E5B0B745D4C320195D27345170E5B05546A0B5B76EA7A728E9D891DBE81F1
E56CE9FF7CAEA2CE4140757DA93FDEA7953889B10C2EC9A8328D185DC08BE33A
F1D38D7A276B595E9390E22B10ABFE327F5881C3A1C88252F364E3A2AD00FB1C
B2049502AEE6BA72AB94EFEDC674CE0936A02871B7ECD2C38105B2DC929632C0
C2F168D237A7CF0FDCCEF674464934C7B0AAB2ED51D07FDBDF93556FA7685C61
1C2AF7278597CF205683610586A8BEA497E867582A10D7F78EB8254E5379AB49
F9FD56D4D6DA3A323B4FD6AE825166A469A58C885C069419693DCFDAD036FA15
EAED88A744230F246B1132BC6AC99E7A94102B348523367C352CDFA1107C449A
63B723C877F8DD93CA5D32E77D4FA0A6E9C140BFD5B7933E87E25BEF6D3AD78F
130643CC33427956BB17E6704617B6D5D500E50F985442957E4349DC9AEDF141
6236F25B58A0E131265D478ED92DD7CC0F1D485A9CC4988BC70AF587E99157D6
1816B7BC4790434B4D8CC2B08EDF636F4A2D27743569575B1091D916DADC2514
12AD87ADF1A1A2EA23B041326892E19705B098C190E6A4A7BC5342CA95712920
506B28CE674D558D7CE3E34F336791E76ABA0449B4858DC52C5A8A943E6449FD
FC40E7D8CF7849612A61E6919C163BC03A05CFC46B92FFC334FECF04734C1CA4
5FED6A4129A84C7CE497E990FB5534ED3BF87437C534D3B2AF69A8851CE3343A
4B5CD4AFEECA25887CFE3B679FE3E0F8AC39B2EAE664142D2F0541F79FDEEA2A
A587EA947A4148D2521C81FFAD9519C39D51E80E6E5A15FF93A83CBF272326C1
4C442B047307444395130F667BD369753B77981AD11AC315AEB0294B62BAF5C7
D612F5183C062F04C5A67AE11CFF775092741D6C9653EB399CE0C86BEE448E47
D117C923B06AE1658A5516E42B79E2C23ED36E4E72D05A2A178B2C5AC35B0119
B7ABBD297300C5748CC13D30AA28C79A8A8B282DFEBCC54E675B99366EE337D0
140ADD8910AD03FD907B7A04E608098B5CD66574DB484689E80914F91C65E0B4
633CA82F1D0CB60894EF01F98AF16CD4C2BEDA141A20FF3B409F1BBF51F21AEE
8587A258D8EBC1272A21443856F4976CFA72510F5077EF740D32B9A950C773E1
13BC618D2B53E10DC4F434C0CD3122EAB7E38F0B35CFE2FFFB47BAFBF9259518
1EF0999CBDDEC9665BBFC896B46EB8011221816E7175E98FCD021775651CD24C
EA75A08182E3088B66C88A61161CBDC533AFF8D81F86DD1C5D4CA8581F81C57C
6E5CCEDF0832C35CDBD99500B569F825C63F30366B359F7AEF5980D04F9917FF
908D97D1AAE7A00C53635553EDE9CCD27DE8F0F498520529D57946B716B262DC
004DC1332B1CD60A96156A1B3A05CF55E46F34AED0B662F6608551D5A30293A6
FC6716D7333A0725E300D5AB0B7DD70743F1AEE42BF7C127BF895F1B3DD7DFEB
AF469362876EEDFEC626540E490B2C423A327E79E17763BA0690B5551C83AAD3
03EA7CB648A0DE0C3E27AA2AE80110E6D2EF543E9E0F8D8CE8501067EE28F02B
49BD934552CD5523F5829A78A86E07A25B1BBFD9589D9FB42768AF8CAFD1490D
4A0B8193481CF1B0B9B60A5055543FB599C82968CD080C14D47A363716B66C89
AAEE99FAC5C4F5BCA653174FA9433966D1E904DBFD474CB48AAD4D1DEAE65F78
F6EFFE549C8ACD820B2C4C653ECB3E87579A3E77E79AA5C24A323AAD88E35812
D45764A93AE5767070612C804D017EA2CBC5BED57DE25276CE045E739F44E94A
27DE5203B75769CAB92AFF5387767D12650410273E5F4A6DDA1CAE64FF8C3D3C
9C35BC93C88A9476D0631111033BD3BF0C257CACA30ADA1D2427F462E1B3298F
F6EEEB26B3543338D1FD197B0900FE52EEFF539E3EF0CC7EF32996FCB1CE3CF7
26D6493331DA2766CDEB5009581575C60C0420FD39AA86969ED0B41783D0B335
0DAB6FE2BF4E14343F56549C9BAA8DEB8F46EB08DDA5E53CC695E364EACD5B77
7368218822015B5E064B99B50727564D89D90447336996C1CD938A1FD30A7FC7
07D9633DEB2FAD9D9872741EA2ECB2453D74CB833C77A2DC2F4BE5780326090D
B096E5670773D8CE56985202E506F98C7FEEE6D512DB508E09DB8EFEA56A71C8
13699A632DA972C792B8B494576A09D1C99FBFBAC506E2863AC7F42D1767C2A1
5A685B936EC4624FD1A83AF7FC41F173C8E4C9B809976523324CAC3281119518
3FDFA93E8C92F734AEB9C0B6386C429C3E4C9366A0324C13AAAC5B51C4A43D53
852BA58F8BD8369D7C9BFF622CED3C27B075377B3937463F70EE645B8681A879
D5F81E727342AC5D5714AF3BF61E1B890353AE5E3739D9D9A6B69B2BA147E946
86BCB204FF85B46BC056E7B883545429EE12E07577BA6C7147BE500E70D92CDA
EC3A5CF332C7EED2E8AEFF88CB69CE964B4B91F655369668F911F059631EB706
3507E6E1FC048D47EAB0E2FAB3931DDE33F26BA19C0C793225798DE243FEADCA
175FED41854D8E7BAFB9A208FD0DFA792028968E84E511B51A5A93B71A0A6F44
EA6BD3CE8D3F778FE87CE2C2ECA811C2AF6A83A2B419B7ACA96BFE8621261244
9813E191E96140B1426CDD81CE07ADE6E6B2935B26BD94ADD389BFC649DD8F70
447C15B671D342FB4551E47E0FCE419E22848160549F4CD6E2D956531EB14667
140E5BDC9A304FA60B5A828767152D4608394B82E83877E96D5FF7F7C34ED8E7
1EE570890BE35B21F16DC109337723093A9C6CC536E921DB9D4F594DBCACC600
41E039B805BAE98B8E3A5A18EC451AFB91DC4E6728A1CA7BA4ACB868F9CC431C
92B9836E1D53BDFCD4A1FEF82C14CB57CEB27382EDC9D92DF99E71F19E6331D5
54E6829242F1E05AA1A3BA678F41029CA8676B5C1F4444F8DE79826B3F94CE2A
20F23C8AA8E7B8905961E7C6928B4A4802EE340B1BE67048A1482E752F352CA7
4B5DAFA70C389BA8798B3CB383E4249E06F6DDD758D466939A23D7A779E81365
7B78B7EED0FE6689868A864914D7D81C56574A8A37285AE9629E2F0BD2234236
F5D60D4A2BCC3285BCA27120C75242CB2E3E3EDDB7A5B18F88BC747DC2510E82
2259DDA43D30C33E90BFDC6F1E8397E0BCB164EDF10B35BAFE57C97EB0D818F1
4F08F2F02F17C0B8C688C3CCBD2BC6A26E593FD79916B5F83F74EAFFABC289CD
E655EC5D586D483DA699A1FB0454B439AF2702915B9949193F3BDE186465B796
DC3B6F550A87C7C3696AD83CA15099ECDF3A273E8CEF0CC73F1D01D1487F4031
379DB5C7666F555041C9F917700BCD54A65347488BCB948F7B43A5193CC00483
AD73DA0118E8EE9174F9B05C151F01AAEE9C44C92E7CCA6DDA37DF1353486132
8A5E4673A4B180A8AE1BEA97194F1C73F02F4EB6053600B9D729D124AE2CD603
8DB08BC0AB2394ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD1DEF3A9FA648
3A5FD23A4327D12507EAC72A7668ADC777FE84BAB090E3434034B8BF9C336D79
91B97D2C102898C34F797DD77D914D1CA90A891506E015F46C94312290EE801A
65340FCADAC222B3FD287BE72B87834E45898C8688C044D049E9EDA646051AF8
6E03D22C944CF66F36299580730B8197C423312669E4B3F5007A5C4CD14DEB3D
B24010735A44F6756D5C26BCF0BBCD7D2CD30B6D76FE0737BABC8E1328AB11B4
32CDDE1BF3F0DBE4C9F613045878A91B20D4919792C03CA93AFC986C34C0835D
A2CFF6C58F596DB80B4A8BCA33E2CA12037F3F4926F148B2CD1F6858AB0DE8DC
472DE1C044AE0C6870CE71FE4BD6048F27E64850AF042F96BFFFD3B3903C6086
9AB41C0899B0CC5EA988A2944C7FC65D53B5A106F63E9DAA01470C816ED040C9
568CC2EFE4A607C3EB4A6C06AD59EC55B977A497915342A184DA5589E192F08B
7149CBBA4F0C489933D99DC44948178F51920AC09B4478300652A9305BBE12FD
99B3697F30F86EB2BAB90905A89319B2D03FE4115E6073611BE138AEBDDA44E8
D1AA9ACBD4715E1FD031BDDE4595495A365F434AF6C6F50100F19785C46DE3E5
417D1B42DD280C1FF9A88656A37EC8F5AC958D45C7B9D8F2978F16ECCEF7850B
B961E933EAF370C4188299C8C9C5984F546EA3EADAC2A3EBC99B93533EFDA52A
E682C4F6C7A55DD17959CA190630ACFFCDE63ABD4695C55DA515B2D8AC508773
330AEB5E669D85B963F125D30FB683593A036F894A471939C3E3D1B577CDA4DD
998BCC2B9DDB5C9573DE790E9DED61C913A9FAFE2DA0DB0AD9724F462BDDAF81
F41A566026BC1529147F19D073556FE345B5E929CB01DFC6E4AE406203A42C91
FF4C747959F089E19229209F815677B78C66356B9DEF91C72C3AAC0C4EC2C862
A57F0E4F5DB217A320C42D62EF18D763512FD86B2EE22CC785D957EFCAF127A3
7F85D67CB62F2FC7701D35CF7AD04BF3CA9B036A7108AD1D765F168FD2A18582
D3204B245758ACE06B9C883C4D931CF57774E70909CBA2A8CCAA351D751828AB
1DA086A1F1FB33869A00CF375B55B8906C9A0AC65F0C3BE9CBDC74E87B613542
F58DBCA1007FF58CD1A3FF86F46D5ACE6BB9D75F9EFF928D2EBA427A287953A4
F3B2A59FDDDDB86B8F6978F44EAD1E6C3FCCB186BBE6C337F083F2A858182EFC
F99114F384B2D69C75A42B747C9BF05DC022C87C80B09AA1AB8115B82581629D
0C9CEDA6CE9F6D6BEEA9FF38C55FCDFCF9BF875507A06D717248CAB6E717BCB2
A266AC3EC9DFF61D53D182CF9605E14CD3C6D8087016FCB998B95F194BC9B6E9
5BA14850E1A582F22C94147D64BADE52709C04DC071AD33B1183645B366F831A
69254A546B6DA8EECA492D56B2F9F55B33E5B12CFF282A651B6282D3DBD1EA51
A98D63262675884094972C8E5416030D4076D4C09B167603068010326A6BE4B7
DFBB1D80CEED73812BE6558E2A468FEA4EA466656C5CA8BD8652B27231CABC6A
414CE0A13A9FB83985B96CA9D8FC86EB8FF4FEFA06E2A0115AFF0F9DB0AD7623
9B3710F286DF8660274AC3909AF16BDB62510D4E57FC1B01C979DAA9FC2309AD
095647EB850426BAC167D0ADAB1492482AE665462541A4ED43ECC6CF79DE77B9
241F2B97A927A457C3C28FD713683DEC1D2115A95B49AFE01288F14B0E5EA826
62B7417464636F2EBCDEBE0CB0CB55FD0BFD3575A255E22DF37DD9F702B57674
C429EC7A0082DC0ADA6F174CEFFBEDB202555CFF0692D2A1A59D9C3D9B3521B7
10E0A3A652FB8DA2064F1718CA235B3E6EEB73BA0220892401C0ADE44FAC4B02
883391B9CB84942768503347EA1A4534C9AA63F7B6545F89F03C0B81BAC1EF8F
C4C3E1232772D805A83535115200C6D6D24E437BB0E5E328FA018AB1C2BFD00F
84454D4434D909C332666E5F5A99C95E4A76FA833786DE997659C2247A0B2522
22EF78D9CDC86867B0DC30136967F2A004DC95DDBD1FA5C60D1FB549966CA2E0
0321E3409D6096A846D151F0FF22826EC83CC42DCA484A981C6DB6CF97066AF9
A7C2356C0CE52E81E11CA795321F046D365CFFF083740C18191FA29964B86022
3FEA117FDBF886AF5C731BF9F8D13F8E96FD0E553C975CB12FABEFDB6D421943
FD84B1FE313B56C52135435BBF2ED683CD1F9FA087F96A56479EADF79B738153
C4916D8D4F42FF3E8CD9B79132E34219E6587FBB3C5D95A69158AD7F9398EF84
F1B623DCE6E49780FF130DFBD6BC7ECCEDE0AB5488F5E41489BD869C45B934A7
BF0E59CE0C13581691AD54984598F2ADF841CFD58C5CB50AF9A47DEF0C27FA62
042FE22B81F1DECEBC47C3061DF4432EA77404E69F34CA4363C190FC07A606B7
F643C65AC65E728F7ED87EA4841EF56DD1CBE7A3A4D5D01048A6BDE567E76DD3
214D74335D5E1F96097E75A43C3E94ABCC2230AC4E79263FC34467649A5C9E09
196F0307A199C9BFA67CC7831CF20E85669B774A69A51A0952D625B3D707E42B
224F90A25C11DC128310D2599F0F9B9337D11D7DA73DD0E342B392C4366767B2
FDED7FCE17DBCC86A40ADB6C14DDC354D50BB7C8ACE26BF49F8B18DC5108E34E
40900D139D5296A5AB361C8F4616DFA092FE8B268155870C6B9819E51506B34D
9B46658210DC414A6C26156F4B90CE862B1682777DDA9DC6806E9B953A85B9CA
D1483BB52181988A90A36F33EE9456607983BEFE682BAFC3B0048647DD809D82
342BD4C9A197C589D5E49A32DCC9B67F3B47DD01DF703BB76A768B8E1BF2157C
5A8F0A3858D06647F604566D83E70802D76161C138495A64E27008DFF4C24FBC
81E6E4818B5EAEF0550973255CF7543ACEF6CA5D3414823E854DFC4CEE3BF6E8
67F4A29E5A81E9DEA0B180ECA5291C1D48FEBC3E8F509B3AE8560CCEFC3AAB75
95BCCC7496BB00434F7C53F7C1AB4C8E27250224699B9028C7BBED09EFA07B21
6EEE657DA2E9A5BA0530C73B833BE517D1E0A766185082D8716F329E7C8C9AEC
AE45459D016FCC9AF2AD19FA7DB3D750195A5A4A08773AF799CF55043E98E658
F4F0BF91473BBCE339911EFF13B0FB766EB21A730EA667AC2677C124E010BD7F
B09AC6B8E142EBDFED19F141679E93AC3BB1E0DBE05C543AE7CE17F61A6BAADB
11B7F61C9E5C725CB0ED974FD456B1DAC1255BB4BDB67D8F03518E5EA3C50146
778E8A6E917C9A5DEF430887AA9D0B9C36BEC82EB113EE9C24187315A91099AE
A66B131E14252AEFF798471EC51D4889A39031B71135A3BFA44A4386FCCAAC03
A35DBCCF8FEF33BD925ABDD40355D70F45694EF5F68453112C8DA2232BE05FB5
47197AD65BCE334146CCC65D9E6597416598BF85B6E9A90911CDB91ADBC261B7
552673FF855FE49B1BAA7A550651227BA9AD31DA57534F16BC20AF0C9DE52246
5525012A6EA10D9C8D749422577F54FD3663FAE733DA39CB2B045EFB61D38602
DB7C43A79C44B4F843BBB82F02E740410691FDC12CB617226F3D7F05E909E026
8D72507F05CCF90D32A09FE4F38A21AC4B148838FCB7B5CE5F30B61809F80313
23E8E23C990E3F1E4500D795563D2CE3856E39E301ECE8F7C8617C784DBCAD13
550D9DE2DE8522D8E94BEA8FA056E3C05F64D4F5AEE38EA8A1BB700C270762C3
DF14DCA98BC4F7A1514EDF32F05401C4C78D33E9705BFADE633D95A8941AA9D0
AC6E8E4ED7BDDF0B63521A6A8D405AE9E0E9412525D7517BDAF62DCEFE46048F
1028E3AC551533D6988A4A1745011BD76FF84899643805ECCC2ABD6604B4E516
8ADCFDF765BE64B188DA926928524A9FA3EF41B331F751FF946E9375EE762A65
D38F5BD4BDDB718E36C2DFE057392B1202E416168BF665F990C264BB3A593EA3
C514A1BFC794E18BBC787B07F3A54C99C3B24235E4AE2B6F653B1E6C7866FF22
62BEE5FC4B4973592ED9BFF9AD8F8A00E390D5F63EDD0C3CECB4C0D0E62746BD
8DB39416F72B314FEDD116BF3D4C25E6997A3581A6C9C8871EB5FE84E2B36A29
C2572FE1D28360C51E65FCCAF723AA9959131631BBB60180D038BB24BD1A2647
E4E9B66DBBB0F1393FCA9A3C6D6B1147955C8DD30C0CADF1A34793E17A3AB624
3C164EEC3DCC2D5621C1F7AFED6CBE69EBAAEEA0C2CDB35D93AB9429278FB03F
EBCDA3D88B9B026AB93AB6B3B0384ABC0945D7D6395FC1B6AAB3632851D2CB75
D1102B102E8CBFC62360F69CA3632FDFC30F27B72E0389E7A82F6FDADECC07CE
AD387960D9829852FE0B69BEF4FDC72E57E6D0986B1FF590D0F1F4C7CA39AFE5
145A693A7682A9814369C1B0EE0DF629CC61AC6B3E91E6273D2778817C89DE77
F9E8381F314530186BF3F70DD8CFA2C836450CCF9D7F3100D08E2D0300D53026
84EA6E42392725938E5C5B2532FC88DA7363C39F1EA511ECC5C4896ACC4A3997
68ADC1F33F092612A6311A66B32C183D65434AAE5FED8D914E10894517B6BC3A
9C4405F26E95CF8A208C33822D36FD9D8443FBB0ADBC272D56C60D8E8DB1303C
96CDB5864BAA743851BCB80E1EB026F644691BCFE7007292F69FDCA6438472A8
8088BBB8BB9923BCF07CDF4796A22D3C84B74F5422B04CF511D451BB33AC35C9
C6F65FB2A4E9851B827A5C08D65052E38277BCCD1B568CB0C34B47C990734010
9F30FA19C34873016047268E9A30EB41F7C7E0546912809AC92CBE7C6DB5697B
411BA4815F2C46A5D740E13BDC608CE3E6E772137E18BC915AC8C8C91D5650CC
0FDB85A61341C6F27C64D725429726919FDB4A8C390BE6A3A68017BDD8A2689B
8E8A7360A4B1A4C959F789DDAC40A3B040B71DA99BC0FAC994FEF3004B0F5AA1
D4E4B6EF6378B15755969BBE4AF528D2CE004FFDF1D30998A40C649BD6B5AF4A
983DB8282C1D066E165BF330666DA058FCBB516A8CE6DBBBD5A1A78F8292DC3C
9EF240E7EA45CF9CE1197A20A475517004BBE9B9282A6552B10D29CEE0B7F1B4
3881D40DD3291DFCEC470BE0FED4AA683ACE3C661F4C62570CFB6D2A8848A54A
2F1736A0EE2D655ACC1E2C5940C75953422D20C2CAC648BB202F27B49DC62FDA
7073A15FDDC1D16170E36459ACECD8C2413B39D9EDA83F0C992A6223D59C6F64
F671D4335E9F0FC69F7E2C9F05E75A3DB1B05B67E26BF789437B61196DBAEB2B
AAA7F1257260D56FF1D81372EF4E123BD02496E7CFE182229F4B3B23BA88DBAF
9D9A4D2B4287FFAA6D5AFEF316F84CF664E3772DE2DAA494D6D0101F93FE92FD
1E5632E29CFCDE4ED34DF4EED035B12B0161AF90C74A0A9BB5301984C71EEDA4
784234C4A5046B3F83BD6136EA0962D0221E55DCBB56104B78AE5EC6E49A01E0
BEBC733AB4A44AA00C85D3B2A38E88AC0C1B7773EF80D7DD6959AA240537BD60
506D83AA9BC41826C942038F3BD0BAB6116BED3B12239A082D466BBB775A0A5B
2FC950FC96FC459D1CE674080D69A4168A14109B87D8B9A63BA3470EA6617E1A
6B123E245A6C05B22B4199D69CA998A1184E0A866B8F60DDAA171EC33301F7ED
DA28D8FDBA46A4814A956BB2A880F5B89EDE6389953B235F160396A91D4004A4
758A14559233812E423FD0005D57AF9414FB5A86DD3E84EC012E014373B531C9
8CEE9752F0791AE9B4D41487AD6AAAA608885C9F49416933227F1E84DE2861F3
7788236E29159F1E1661F7EB7D749B78E7CE94F958E8671B34D6CD3F2519E988
E0F5799E2274E4A02930CB9CCAB28790EB5D583A9CA46FF7763746E5643C7FB3
0BC13805554A36FEB5226388558DC060C00F984D7B3C2C58697C3416AE985211
3FAB0C309A0CAE1DC50A1C4A2AECE7AEC7E74C7F1F4234593F06D4A576484F14
185554EFE393904A72A20A1F7CD4ED2507229BF6E9C94CFD361C810B865B3DF2
5118722FD963EAD10A569644CC8238FA1D3C2571A2E0DC909989871878D517AE
5FCAC094CFD0E527F6E0F8EC63FC8E0E5C0CBB7D3A612E1A23367F9878146732
9C35B7B9E526B64E8F9D57FE095540CA2486AFEE364CCFF44867DEE445C8C1A0
59265D63981E13FF3DA22E5C335D300A475AA9F5F7FA8BFE509CC0DE795B45D4
1DED1F7DE49B1146FCD30C96787967B5AC312F59308BBE44DA9F861F7CBF9553
3CDD7517AE273BABD69292C42F2EB4E33FDBABFC75A2EEC6B35FA008E242A05D
015A9AAA423F0E02C2C4F95AE4E57001C29729BE8841FC106B7642F6AD875027
C20CC0477C9F366B16D39E9B743611B5ECBE15292E1C8CAD6C49AA65BD1A2860
49322217F73022C8430A0CE764638E6A4B1CE2B84BFC2170377C6ADFC82292C8
577AC6AA449DA817C37FF5840A36BF999B74B8FB17C974069B9B254BB9397FDE
4F8B15C01CD754856C9E8698F788DE141820BDC48B8BD261E4B629BF32BBA4C6
C7F6F8CBD52E12FB5A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C3284ADD469
2AC17DF0F50CE04DB21BB8B276691749E2E6F9BB3074DA40AFF782CB25E02AC3
566126F3605C5D91AC7F8E69FF15FE9F998D6BDCCF481FA69BB6B02740E8E674
BBF93E87F057BC472913D788E66AD436C8C5EB667A9E200B11C78F1226D5941E
BF08A7D237E81E39B47A6F25B2EC9290B2883555ED7DC703B3EB5C0F679227B6
E811F2C38700DC5D6EEC5223F0FDBF80711A377649E17BE3301FB1AB1AE47128
7800936B812CBED8EC4E0A114FF329C5D7372EF249FA82D2745ED89D47EB2E62
91A6066F1FE1971379E043F280BC4E314A0EDBBCCEB0029773C9574297BF4E64
D19DE34E73FE10D63BED7FDE25317440E34D4258502F4F01C52AFEA66570BE7C
7BA8361C07E06C4962417A31D0EF695F8C92EB33721D2363555F9F5034CD2955
B664FE75192F33BB8359030780CCE9A99B4C2FEDD3E39F711F63E15A82F4D4AC
55BFB5357D5AEE55D7062DD9A9AF99461B1F89B3CCB0149CE5F85208AA40009D
0682CAF5DB0821AA0F1378369902C813DEFB1A46426E7E895A9862CA1C8E10A4
8D3BA9DCE374762E175D3F06009092F23B871D14D3A3FA6A803B2DEE2684523C
FDDBC23B89F2A60DB25A27CDFAEFA66D2F0B1E5CA6EC76D9F6DDAD37B32EE662
AF7460953FC0A9A530058532E346F581AA85779C962E6F13E571E159A42E429F
A897523203F60ED4A87309FF8BCAF803D7FAD72A7AF7BDBED08049B0A868E226
23CD452F23ED427E439F0BFB8E51935CDAB083DD0F237B28825580C2306494BE
4FB721E4FB04F7B5D6B669502D0EF1B69371902CE4CF8AD84A8282A03C237DA5
78C6008FF67D6ED281BE7B396928F948E31B89CEA0D44B1E9FD3E9E8CFBC339B
8622C5288E99872B907D5A35C31A9064C3E522C63FCC1C69DEA3873E2A39B27A
9B7920B10E6C7E03FEA1BCF17D34264BC6DFB07D15896EB030D2ED4C12111379
7CC3D98833B67E38262680EB4AB9A4D92F1BA39865285CFF7DCBFC096FF9F878
5CFDBAE4B752D854D86A959AB5CE42952C956BAD194A222B76E5C01FD5C08F27
B2244E1A7579BC8B321BBF4E89CEE48E539E691F9563A45FF67FE0970DA66609
24EB00426703B781A4692BF21909880CFD73B51A92E3E71ECE7A5A78D48AD4A1
03B97A4AD2883802EA9123BBFC76EAE353656AE61C931C27705BADFB258D56DD
54397BC47A4FA41BBCE36197BD8EC41D02C86D0A246F40D007715DAAC213B3E5
ECC8E4815EA573573B64BFF8B6251FFE5B2B7E39C1EE2023EA55F8870E7AB26F
14CAC642917E47027D2FFF3622B08C61085C4C58A91BBFC23E9BFB77430B8E5D
C464877BA684728D00ADFBC1468216B87B7A86AA4110030E18F7DDF321AF4A93
69AC60D04886D106B7365E7E1622968858D0D7D1F81A5758FF302C10135DDE74
E372502F535B2564F43A689D9DA1043D288DEAA0061901488C87D0064DF99B96
25EAB93115FE5106981F87662E3180E51F1800FFB0CE77176E348715DABCCFE4
A1BA3732D46BBDB1B9A5AAFB7FB9483184C8E7FC7E2B72320948A93683B55DFF
EF1A246FE9E198553C18DB4B3F6B3C575BCCCC55AAADEB397E6727F9367D0AEA
C3F2C9BBC7FDE177F8F7E7478790F27A0E3FFEFC4576A763849C3605BFCF09E5
33CF65B356A8D902BE94A449C5EB8BEBF9E90B484FC8C8D637F6F6C0136E0E1F
0FB0A3B19F1D1FD416B08001738F1EC47C32C0BAD8BA9527D8B3B18A51C229D3
0911AC083F9C9E240E0ADCD0DF9E50486F11AAD8AC0D8E99B3B8DC3E0B3F614E
2273E5C54A42192110A8FFDA67CFF84B6896EA3FC508207E7773429765255E0F
A56B578BAB4EF15593442E0EAB4396872F925598158F2E622588B3F477531712
C9A0E520FB83F50F647650E90E3AB137912FB38808F8A9D920CA5BDF2CC4DEF4
6FD4A183EB07660D60FE41F1629645D517324A5E6FF113DD9B68D08956D25C57
78BA67794178FC7C017AACF28BA8ECAD68F99F8E35E5A867273170F9EE302958
96B8AC9D697675DF8E5CBC866E8F0F746D504AA5ECDF272826AA85212DF02108
9FED1B87752564280287749C122EBDC73E408DF460EDDE3C871DAFCACF3DBECC
C8B65FC68BA40AEFB65FAD931AADA4A4CE1ED48EC6719BE51EA4DED86D7A328A
37A513891663AA24A7159D29CBEDFC7B8E03A6E695B17EE9422065E2A9E247C4
473078ADED403362547258D6F893A4B5B3E6332A2183160B474C2169B357BB05
5732981690109ACEE8E189A7F960811AD252051C60ADE1CA0BEE592438BE954C
86D3D17590E767B917CCD62DE60A026C343AE4A284DE5B86A6A07526144FEFCD
DD18D9573497D3911A59C87DAD55FC6BCF596A5CD4FD1071EBD5C999572F9E80
FBA3B3EFB7C7868BA8C2224C728326ACE6F0E951615EDBD8F12E703C6291D66A
BED70CF63CDD5FE23BB308188BDFDA900480BD689CA4F326D85EEE2E3F8AB26E
8171A2820119CC673B84AC595B4E3A2CB97055371BD3F69A70793D051FFF5B94
C59304876FAEF6388E7EF2198C005568E9DB85B2A0D87AA2DC2639310C17F760
93F44A497312DDE006B19569C83F1DF93841D29386419D4CE4AA05D1B9F05530
4FDE0541624F843E37CC6630F796F8CE5ACC4F49566EDF37EE388FF3B23C07ED
E4EA5BEC2AA85224F7C29A671F03219181B0429586DB6610FC1E7C2FF53F1906
0E6B43DFB0DB2A57657BE4BADBA11C52E735C2C981DD1A51008D5998FD2B4B36
2D9DDB163B01F60CFB6D04978EF48EE3C7C95D376D2C48FFEA0D825AA3CE8FF2
CDEAA9250867C8D256AF1251E4AE08AD0131529FA451899329B95AF1D3FB30ED
711AA6107DA6D75D3FD98C3FF60A8C9D26CE8AB93BDD14B98D4805CAA7AF81D3
D96C744B7347B51A358F333C66303CE6A12A7E1D62297A5B0DBDDD0AC8AA678A
0334FC2677AD00B56310990442ADD49640B0F51039D579E0671C4E22CDA2B70C
EC21FD054E895299785FF6190EF689DDCB6281B498105AF5A71FA99398860E1C
2553F22E897A03AFAC9770B6DDA0431B215489EF9AE9237D33C05AF2DF8DDA9A
47EA0E54F6908687246CB307C3732B3799C2D9518B84F39D6771B61D1EB095E4
E1774B16E8373A373FFC760FC43AF0BF3005D82B82E8F7673744DC30CF18A250
951F7592800593099A30B8E27D3DE5CF8A4E8EF7FB3988C92AE73E4139D9E15D
DB191A0720E853FF0603877722871CDEA1DB2820BC87B93D76EDF6D0CA24D36D
578A8786980F7B2F5F3347936311CA44A7392D8E791DA1576D46EBF87AC138E4
8417C65C768D28FCE6BBEF83B050024624917E378761B58690E355E7F967777B
4B9647750D509668227FDD83EACE90DE3AF89E9CE9528166683F53939DF5BEBB
2761094057D5B11AFA2A657159E0EE4C3EBD8C1B07D5342DF98CA4470487A6DD
9D12F1833E18FEFEBB797F528D5B8F65887EA1B5547CB1A2007CA581759DB99F
2ACC95F901CD7DA38FAA447B31A65DB3DE45991C86548FEF7810BA119B058D79
0E06E5FDEFABC0A2359009E15CB4DF774A63C6E75A7426A7632B8B4797A6BD33
126AC26EA984A4660F22D390595911A900FEDC80B57A334A41156A070819E98D
7384DCF20A308399A6E3BAB42C1B0A34361A1DDB23585CB941530493A6E189F3
986E99374770DF61DF6C8619889CAA3A54D08597496C8F8956A8603E807F7981
564074548D7F63CE8897CD2798239CC4C944051D37130180B89DC4F46FF9D1FA
30FD1E8B8FAEF9D6A9D3774B973AEC1ED6DCADA4B1A461462F841C697C959508
FB83EFF046B6B707F63902C6C250EFD1F774F2F20C367827D409119E5ACD18F9
686828C9B1E77555525B8397801B16E287FF23312C790377A634F660116AA034
C9A1AD845676304574790E646CBAC9536AE7262378625F77B7493CAA62381959
6B23560D772C14FED32A9A217BB762157347C4E446C0DE5D53452B094FE44DB5
AAC4EBE4BED656E61520861EA19B325D467C90DB059D2447B889ACA9E997AC46
AF8BCC0ACABF35A682CA1EEBAA5C23FB5206F49C0594D1CD925DDCC29366B5B4
CE205BDA314A7254CFE5CE8635747583A7838452A6F18475E6046B626701A930
476B878C35886AD371892FB80C8BB782CF7F792A43351D98D924CE139C10009E
0F6868A709DD610902AAB0AFCEA975601B13993762650ADE83A2A8D32DDA40E3
0B315523867C136557DDB50EC74C20E497DF8C5D90DF2EB6F0AC1527A97670B8
27AF2D8FEFC29FE8E0F649D381BF62D6182DF347097493916FF8631ACAF481B5
7FB5847AB1053F4DCD1319FAE9DA4417508CEB10B3A9D824CE570B02C359E478
2DECA5A8A171A4A4193F4B0F051F4CAEE7DAA01C8DAA5F5DCA23F5EDAADFEAF2
9D576787EF58961F195209A126B988F6448491506D628C26936D069DE601C6BB
93F2A2C4BF4868A488139153F2D5EB3D6436CAD69CFC010DEE90675712C3F3E0
2AAE932D2CDF44BE37A427CD9EC20F7C7768A67B861D204EA4D6842207898B50
34198507447C49802FAD4D27665BF4CF6EA5956E4737A5E8357A7EE7E75B3B19
8844CE23CD1BA7E3EF30E04CFFD09D7B8106E1BB8FF64B19444DBEF2A3B34133
C841E1E4F9DA5C7B5CDD9E986C64A6F8981F77612861C48BFDD306686E740468
445311C16FF381D437D7D3B1BF8C55A4D297BA332AA588A0EB97690E5AF5EC99
122C829FB252B088AFB95C6CF6544C9FF4E4BC02DF9FB24ADEB587312EEC8AC0
D98D851C9629B978FA10CE2AC0425C7839991EB7CAF755919054DC900685CE73
A8D5738C2BC3A5CAAD61D68479DC6FFE385A29283A51CB59325DCB40BD420A74
FDC22F27D4D17370D21834532EAE0F29410CA46516D6C3004B6B17D3A41E07AA
DFA493C3E9E6347031C30C2682F5D105310C5D5EDE6DC06EE5FF0726BC1055D6
EFB24D7DB43DE0AE0C2EB879DF682AC54E1C416D6D6DB45F1BC88F0595D6BE89
E4108C651245E86BEB4CBB5C3ED5E77DCFD1149930D168D60FD35AC9E2711235
11ECA7833E0E3E958BE9663454BDAB3CC14B558BD973A962A1979869C4EA0E10
0650E23BA3665973F69E95272F7F130CED69B3C11932B97933842A14BDCC2DF9
E205E81661A8D1A476FC17B4A0DABA109BACD0B9C79FEEEE1DB28D45C0E65739
E920FCBAADFE1AF8359B46B86B7D4FF04EE79E2E24D99DA63B88644D0399B8BB
58B26726944FC4BB7D3DE8419BBF4B36C1225E3B5733E58C0AEBAF222316ACBF
51BF7F10B7721B918EB4B9F54FD6F36E40A047806B34C259E731AAA4CAEE1301
430A39EC155772240ADA692386F263A75C1F6ED625B99CC9C3E03F133F0F99E5
465BFA656C08344C43DAE47ECC664BCF70081FB9E741ECC847467858898AD528
633F477B739EAAF078FB0D6D0E2BC4321030752BF6E2D970D1D6002D80C54F9E
439BFF61D9A893DA0177CAB77BB183F54581052B65127F98241577CDBF8AA7BB
7B1925AC2931C2D35985FF8B88C0AC818C4D8691E084B841E6A856A4DCCE2297
945B21A4509288ECDB56336D01D8DB3FACE4484A4988FB9CBDD1A16E9E60C079
09D06D055FA464D3C8B1E6588DFB8F65D9ED512D024828F35A805DC0E555CAA4
9C4FAE18ED64B357AA3AE9D82F4D14AF09432E7EB23DE8F34CABC7DE69211DA0
5FF14547300FFAB1FD3940917542682C6061F5487D1FEC7799AF34ECA15F5969
7206D7CEC99A1EFFA052985DAA45786E411F8AC6D254E74DC1322EE81AA03253
9003FB6CE65D5869B121E206A42DC2A165BADA62956026E47C9D4559791220CA
98E7F4D6E5435B0A02819059875DA5939BFA435FE5E0B0DDA8D93BFD022D8565
D1D1F23D65B474F4D93EEA6BE9A846DA9F3D3B8DCA73E1CAAC2A1E44EDF3C8E2
4B6CBB771AB4F509970EB37852C65BBF3C71139171CA76E010101576B49CE7F2
89F4E51FC473410F96B56B11B7BA4B3B0F935D7B9F858951615960AC334A5E3C
CB2F8DCA630494BBFED0BA285DC83E29699B9028C7BBED09471EBC899CB31392
84A91F5C73B8B17E13CCBC9CC1FDEA4350EF9A72F38FEA8DBCBBED069A130E49
C18CF4CFF96F4D57DAFB1629719E74CBCCBE8FBE932F21EE27EF2B6C1E47B021
6326BA827A4DB2D8433E743612D6589E714230D8F8C47ED334CBA7B562089EFB
ECCA2B2664527B384EB259A7B19DC098BDBC064CFEC333BCFD5A093BAB44BA86
FEBFCCBFE37FD40A49F134FD616325A383D88E27041E38FCE81A6B2616518CD3
D8330D96CD8F687E8947B12E123AC89F962A984ECBC3A71F2ABFF02BFD572B01
F17BBBBA0E10BB4A63019A0A01DFB009FB8D31F7D6F5ABD046FCD1E586868128
FF0C278E99D4E81BC6A80EA8277251A46A054E3A45175B0B156A0E9BA31F748D
236F1FB4954BBC19648D8E5ED1EB4BD5A463DCC84E2ED7D3EAB46E6243AE8587
DFB7A933234276082E17993B297043B2F75674AA08F9ABA8DC335FC4B589DB92
B21ABD5F4A1828236BBC63F11845200A3118993CC91FE947C26FB7AB1898091D
E6D08DE252AE17914303C77ED22FDBEC80C778E4BF9338808AC2892B31E02CFF
CDB9543B8B8ABC68DA0BE3E3EAE4AD7DDD32E1EA597E3D2F8F09C2CAC70727F2
4CB55CA18A170DCD7691E583C744F92B46C0968AE20589732A423322A0AE1278
665E7ED2B798CAFCD85996FD6E59DFC56553D70AFC1ED0A22DACDB2713F5EA5E
22C3913A3F43C621600CC7574E1C5338C9C53FB8DA861BE63530D049E65264E0
3AD10B38F2D695D3BD6FA8A5803537C5C6452075B88E9D60B0790D4CC29C01EC
DCD3393473537F4492F3114C3019A0F634050084990B3013E8FF5516B142E3FD
C58668395CF361A26162AF2E140EFC0058A82D3463ACAACC508B9D267CC5693C
5AB0F48B12EAA41C7F9AF48B13C43FFCD83071BBED5F359EC5BC40F703F14FA7
BE48BFF54C56E1D0D8EFB826B3304D57B9862A120162EE5A8564A0192FE85FC1
C5C24FB0C193EACC6DC17DC0C683661FE8E8FD331645DDDE1B6EC0C391271601
B37B60CB65A201EA6B4D53B391DA0CD3DD97009794BDEFEC8BCA59EF7F912411
003896246A49923C0CA0C79EA1EAD85AA77415D47D46260152893DC7B789A8BA
CCA04458F13B127654E71800CA42612D434C7A14817DA0640D7D72FC4F74ACC1
922E8EEC568501CF0EA64995122FB54C8AA935575685D7CC51D1096CB4B73D26
2A7B8B8C9DBBC87F69B1D033A1C39637BEB0AB819B2642E71A7156118ABB93B9
B56E527A3A70AA5255E9E9D5120CC8C83830EF2CC11C5C548CEA047E9DAB1D3E
48C8D354CE05C8BA6318DFD495A37D30CCD4C7CEAF4BFF1273CF73F5DCA264BD
3C06F3945E5405EB5449AD8C1DA5B64D158F521A651F724F725C420BB4EFF429
0E329BA90A6860DC939EABF22A898F8EC755CD5841B677E873C510F173766460
BC08EEE13A7E17E79695DBF87EA82E82172031D2FF33EA168673C846018824A1
394FCE71DA5225A9D604FC64545309FF9871459436F8A314FDE1487F472EAAAA
DD78A4DC6CDC167DC81133B6334BD397F49762557DABA4DEBD5431F08FED999B
63F16BEE5FC4050B5A4CA733DDEA6A1357AE8F926B845F3F2D5F0BF6F74E612E
6D838E0895F01358413F5D138216448045D655FE7DD181607D21F18F1C66CFED
91CDBEFCE3DB0470CC195787B54B2F0EB32EFA5D87F318A1865650874CEEC02A
4ED2140C26072AC4A615E2AF0EF256DC6CA80E74C92379C003C65E6ADFA37503
859FEE62E34AA6F054E107D3275636916BFBDE2B55A8B0031D44EAAAD266AAE9
588C89CF17332BBDC04980ED2A6556350676B2C4890EF421C638C1896EADF0C5
5B601294DE095531FA1EEEA12FED37B4105AE855297511576B1F1625194BC753
C49A484AFA103AC1249847873FF17704C4D36875F0572BD1B831E65683BD73FF
ACA17EFB59657F7C75BA5052C8058D8349A3F3AB8FF9BEB66442E02B572C816E
2E91551A7B875B7531CD1BC1163F680FBC23597ED94839B2DA5834FC5D97A6B6
49780B4F991AD87DBC085DE11EEE4A887AAD90ACBA9AFF191284C6F35EC89868
C653CA98AB0588B302FB465E5BB1B8745412B0C1B3797DE47BE8F0FAD8BFD15B
26043C6560264BC66141355AE6FE123C444C0370DACBEF154AFEFCD6DA55C61E
1B18490E49A7D1A229E7CB2550E195EEE3A403D84993F2F2A1B0D13FDD3A2A28
5C8CECAD69F34B4AF6F19788C08EFC8064DF09FB229C9EAC3589A041511E5A11
37C600B56B6B466916E821E3F8CBB61D3025A13A69713D6EDC754EA45257FAA4
B9090CC600F2A40FEEB4A8B1ECB6B7D1D459B6CFF8B7C3A99753CA3437E84720
8287B1910C892B38B527BCEFD8876BA691F65E73155EEC450FFCE8BD2260B31D
B803626A38FE48C0F00AC1920853346594F0D3A14C814942B2258FD210C5D09D
E3055CA85AC1BAF29462BE3D409D7DBD22F300B2AC61A2B8872F572DCDAE9182
ADF9F05C4FEDE1966C41E28D9E333B51CA20BBB676BE7685ECB055DA68014AC2
EC675A0B01F231FC9CAC3CC9E0B625F9FA5B5E66C5D33F2D7AF87244DD7EB29C
9C5F3FB4140500A17866E5168B2369318BFFB030936E3E0D5EB1C8F8727D1C42
EBD39A94F4D0FA6F5F0DA846498178B9369D7F90080AB112BBE400563139F666
8BC87B3BF3AE168C1B63A99BE3284DF27909AC0F31ED091B32F6A1E62C2C734C
0F8E6659D8DB97778E7009525B0FFE840959AEF3E34203B36DC0F63975BD1459
937C88A09649D9D72F953409AACF9B874E1C11B6939E6377F318CC540C274A32
948C59D5C903D7C4DC1E3A7907F302A36EC17F348BBF76ADFE80802B34C297EF
DBD95B1FA9C41400DC7C725DCEA7A6D9C62C19CE5B57C5BCAE4771E4A99A81F8
FABC7C8431A12536B464CEF7E653F3361CA143A53CC41F62AC4DA443E8A8667E
FF05766E9640AD1A451EAFA995CAA18F6C56354C4DA4F764AC703B4A0134E213
BCD4A2FC290A7E2AFD2A052D4BB400B075E2D5D4691894708AB4B56A5E6F537A
3838C07283461114B4556F48B215A34C59E5DD523FB31F8B4485BFC908DE13BC
615FF61404CA17C247D9D2078A3C4E9B510CFCF49D463BEDD2F4CC08488AEF0E
38918707A98B6B71B496CCCC23C8B35A47232C95FCF284A6914DF3E56D335825
7C3533EA18EF2C77DF170A46CFF1D655680E3705A7E8467481D16E8AF6F09E2A
75F20403640750671990BB37F1BE2B7E09714DC76BD9C1ED9DB78B644514FFD9
A72C5339424407A81F48577562E9830AB8EE9629DFA844C6B2085DA4281F5CE6
0CDC425F5C6F489CF2F63F5A738CD913E77CC816B983258040459A8BC5E7E446
3475F36996A68447B3C5C16E80FDF89CA82E5DB6337A300CA3A1E9B5F10BD37E
13CC9E200526AAB191CA03764E71C2793B0282B21E7859B70CAF9D959E20FE31
EA7F65CEA9E9031809103ECCCC027D52E7B2E40CCDB1A0081FEA7D27F667AE98
79070662D6AB2EB3F6F618FF6DF8B93290B09ABB0B2373140D125DD5ED858CDA
8C9373A6D56879552484DDBFFCE9E014F4A115E44E78AB2ECB88ADFF004A7008
503169C76CFCB2E9AB859E10AF656FA5F9CA6675CBB2E2C45C8EB92FA6B2168D
96428CE4618F6DBBE069F77ABF2C4F9BE9BD77A7FE851B01CA0F825ED1BC7A73
5071E6C126697C9DA54F22279744AF0C034E1A1C627CFA0C5D57C8F5FDF63C62
952A56525E899F5F5EA3E295A181EEE993C9877FB2EC1F6FAAA8F7CA45BEE36A
87510FFEBAC3CB692E2BF1F9E3AB07CA8156664A64293B6BB54BB593590B311D
0021D7B45D8BB8EDA529A7DBDEF4946C59DAF92ABAC5F792CE1F281274F08864
45A156E1989D6A361F1C4CDE3F82D555337321D82B49DE3206DFB5F25952C0C9
99494B313BFC022B51B17D774398630C1C3F84FFC10FF81C9B722DC21AEEF8C9
B3B6F20CFF49B8F139111DD6911BBB9BAB02EC8F56B16AEA1388131928FF0562
8C09D017757E1BF63B481BB8C9F53B99E7E2E2446A7F88AC92B794CC793DF1EB
7A165D7A17EC51D3C2E1FE4A41F0C8F3D0D8EBD506681E4D0DFB07F6E5FF01DE
B3DD6A7459561F6D420DC9E08AAE26FFB619CA433CD0FF2A5471496AC3FF0169
5210D7739EF346A7B7E402EB7ED23E493CDF3042BF6D647315CD894D93D592C8
3B510EB03882FA6F9F2C9C5D1E733E552C555517CBD95C0AB4025D756C40A76A
54E6923861893B2F6CE6CA317A1987CA49012C7602518CCDBCF91C56EC455CE3
4FBB5A936EE00C0DA0BA79D43FA7A8CCF723DC232348E16A3D2FE6722E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD55B374C5BBB8D22109095DB0ADE965882E0F489D72EF601835DB4
AECF58B4784AE9902CB9A7940908D65F143B14DFD9C56658965231C1CA800ABD
E12A4DDBA73D4AD9130305CB4E8623072F98042B5014E2DBDDD8DB22470CC42F
D2B999DE15BB9EC58DEAAC857443E951A144609F5C338211623CB5D6A533B4B6
293A0324F9513C7C1DB5FCB991D9298ACFD8C6C575339DE5863D867D31637BC0
CD4D6001D24231C504104FF01A8CCD0D473215EB8FD7B8648E3AFEB827696821
23380A3492F87E461AD967488CF9027A5F84AE65B6C376B0A8C76AA6C998C92E
61C51AACD6F017E27D1FB5B467DEDED13A24AFAC841E58237C5B0A79A271ED64
7517EF630AF76CD60F318F47281BD2737A9813769852740A3F2192C8C46F5BCF
DDC77F2187005533BA7227799C7A970B191A3D41633C66BDBBEF3178C1FE14AC
C5479F05F862E0E177AE49DFEA107BF2BCEAD916D1A6C83A9A870A6BE84793C0
B1D2D6DDD495B3DCF0D7E2C9650BFA02743A5DAEDA1BD6AE6C35E514F220D754
2AFD87E98EBA95A9A9697B3E4FAF20896EE9DC89ED642A457E3ABDE211FA7923
C7856384EE96ADFA31D9C087340E5B25A74338BD08C428FCE711882EFEBB8E27
8432D6E9D53ADADC31F529B5CCE7E07337D8C589AD71BD8F24699F209814DF8F
5DA10E7729AEFF7D3CF49ADA55F1F20E770B2A4982A66063942F6E01E70B9C6C
42162729D744BDEDD7382241D8087A946368F8147A7C3F74FBCA0743E3EF30AF
C0D06BD5518758D36F783EC76D0124CBB330B348205C8CC08AF2F65D9209F9D5
849EBD6FC2932A7F5A8E1ECA63FC9A5ED285837271FAF6CC611FB7D8A81F05BF
CB0D4DC15F48F3C8B811F01130BCD1AE8351CA80AB4E920481716E9E5301A9C4
83A41C4599A702BAAEAA4853054622B71E68E8EB85702B4466808E0034288E97
C143576D2AD37F46E21F017D2EE4FA78BF91230BFE3F36B8A0F98A0CC800A501
580CA906B2B36057E00EEBBCF206EF6A7B729380BEF8AAE6920073157E6D94CC
34A4E8E3B5F88C0B93EA51E953933ED5F6099187724B093DC5BF74D860252ACF
C5659C3619255BCBF1E2F0E95A6708E1CB7A448A7A32D42D232090E7EDE9A74D
CA0AFE911ABD726FD8F0FF22A5822F854B36DCDC15168B94219B05D48B47ACF6
DE16BFBDCD10A791B5F9EA7D6A829E5048C01AC406C891D9C928544114DB7068
24327790BC6548427F7E1247C8419214AB037971D5581298655D79EE67D722E5
4118203A42366D4FD29E01B87417CDE937FC52E2DAA22FE3F70A777E892F5B7B
509932025AC081300C97FBE174E7328295596E2D0B3F9F53BCA131420A41CF95
8B1DDEE9B810E08AEEB92EC7AEBCFED9366B5A94E01D453EAD7B2EC3FEEA48C6
B4DFBD34D774610A4DA620BDB082A7410E1791DCDA1170FE1A17FE7FA2A53A6C
0E4A2AE7B93035E243DD99FFD117051DA0358DA7CEE96E17AD82C65D792D39CB
A82506AE36278A89B090A0C5DD1A52C5980BA67E9DB8A90A375894F1BFF6646C
238AF0A8FB4E66820379A6A44218CA25B0775F18F823B7A9F4CD0682C4CCB3DC
D512FF0186184E282A8F0A5336BCA53247ED9ACF09137311A4720CC058B084F4
252AD0745C24E20582493F4C8019A56ADE4E3FED22FA7269708EB5047785E5BA
114BA7A33F1F493DD8274039C623E0C3D24F65A4C138C3F707B23E1A32AF1F60
C134E9F2F51A1EF429D18A8C36D5EBBD7A0AD2D377BB2BB2003243BCA4C0566B
40D01F725870E1EDE211D664D5E875136FFD709A15ABD13DC3D764E44D551355
B5956F42146F9744EA7EBA6410DC88840B711A7715C8B705D63CDFD67A904636
79A22F07BA325BD2AAC616784D91B39A5BEC61C5ED9F9C7034BF3C69D2737ECC
00399411C9F6AA26EDA30233AD0B66662581FF32A7984902A63CAF3F54201AF8
F72103F1A741DC75B5B0F68352EC80874C092611E6E7587CC217F9F56A0F2310
0438BA7DF2E210640A0ED2F7BE52094A048008E366649A7710ACF709E097775B
2DF1F871924C52379E6E095FBD4420FE6B14F36E8972E8C261042586639A04F7
0B8D78247AEDA15FC5FCCD216274200E2C7B2FDA0D5F725ED365EA21580269FC
E26CF07FCA10F0A6CAC67DB3DCC5E21708069F5B6449E6DA7BB874C458B8EF36
C34A0B5F652085E8CC5C0CFCED8F10CA2AD2E2F7943C58A9EAAFF89657CB8AE4
887DEFB33AC3630947615A9E9A43D0DD4298078B5AEEEA19DBBDFD140774F1AB
D6E56ECBFA49988621934EEE76C00FE381722BBDCDE0A48F9FA0C200FC6097B3
22F381824D7CEC1A09616294FFD01B227D2EBE5C3BE9001474FBBF3FF51B32B3
301575EE12C5CA53C17FFE0FB034F0A3F38A0BE9DD6FEF02F61836E9A743C881
22AA1B6958821B5294BFCF060F7D05AEC38EE03A5CBC771564C8066BC7060833
78C788577C1A3423FFC79D106F3BC09ED496BD9A79025A9683ABE4C7E6D2D61A
AEBA4E0C1139E3F29A74CCF7D97749A925E0B0A97D7BA88D58E2EDD30493564B
38F53F50A4B25DC1B793CB49E0D957FC2B4F6DAFA0499BA0E4E45E027F2636B4
16E386DEFEC58AF2BD0F4E40547ABAF82AFE24EB580E55BD90A3B48CB569CB9C
7B692EFD31F39109C951E7C2C1A563E46B4612ED29F39AD2F89F404D73352FAF
1BB10B6A7091473E313C5A0F43742A7DF838383113DC78C513D00C2D9FABB76B
EFADB4F77E7DE6030B66A55BC67EDCE16C1FEA8E5FA4A4F1711D84F168E46229
BBBFD387F4BC88519FD41E371E049E717668780DD315A2BD0BF78CBE216C27AC
2EDE587851899DB35053A23038A0071083A38A0F478AE6465F7F11D948FB905A
29621D144F98AD750DD893E306CE5698A8FAD2D9BA1B570BBD1ED753F933D6CE
FD146C842A550FB3B31BFDC4C4E9E6FE1CC175AA223ED57A848B9700DD7B0A0F
8D3ECD9BF33D934DE0B1F82B1B5D1D8C53822F16ACD675BF88D7E1F8FF37BD0F
0F2F75111C254FE680E5344B92AC45EA0145E99CDDEA8DA5B4E596298826C3F6
9A26993079DDB74B629F62BDFFCAEF3942CCB26014B885A11928A6BD24B45950
7BCF62F81B5C586FE373A390A25A202AC9E22D4EF4BD4BFA12646A0D6FAAC0B9
835ACBCD2E24C2F50968760D00C59AA344AEEF5816A29084FFE407ADED44359A
90D3BBE87D8E64D01390E9E92FB6FA21943BA9C3AA45E954E03F170E712ED46D
21B92CAEDA580F555C164BB3A814961DE6141FECE531A950C0208972E6AD5534
1B1B9540CCEAD202AABA714F9E08873F35B63BFA95636839F9FA570A8719BD71
9981AF8EE6A593EE82561922F8B0C1D09E7A652D0A7DA41787EBE3FEDF65E84A
150E34F4590C7D8EE5CBB80AB30370E09534339813968E6F1750A237997431D2
20D40DCE139744B3A47DBA119FBE8ADCB2C6B4D93DA10FE16A6027B5128DCB33
FDFF4A0DE0F6D3DEFD398C4B88E6B613690C233FDC5E78E74A03EAE2475085C6
2ADD6740D31616F7F6C0D35ADAF9FC8F69C48EF062BADFB078CE8B0B2EE6880A
4F74D6434FBB62E5B31F802236E41E44C9BD5163EEE442E6322A4528D62644BA
E26910FFE1D3B015FC332BA6B8C697B4A18E93487C3A1259211EECCEEA19797E
31CA404A9C2F3981CDD07363BE4D70DC6BD22ABCD043224B3CD5900ACA86FE78
8754E00DF0759C4A699D1DABC7DF67F8841585FAA37FEB127855B8849431593E
AC6144D73C67D5C628E3E10846FBDEAED491A64634DADCFF1A78FBCD55AFD5FB
3014972D2C3EF3D15017A8E116F574AC8B12D71421C789E0DEA5EBC9DE866B03
DCFE2800B9C25978AF9399FB1674BDFBF245D7B5398120F64F0C3ED1ED544D78
E6FE09003E704881D6B2865DDBA93279A69D58524C764C33F84629B7B09BFF3A
FCB5C942AC9B0D5DCE27859DDBDF21976857A9437CBEF2CA4A4A2570551AF496
B5660FB3EFBC6E1D5470EF2F5103C467024535C2D62A644A289B633CCD857C4E
9C15AF750DB4B3CFCB67DF80D62D420B4100BBB69E525A2D9FEEE155ED67432D
FAD8D5BEA613603CC636FCF3177C6D1753B99A4CF7621D47C16B1CDD5EE9F9A9
A995514021B465CDA0A15DCD491B2BA475472C498590D9CC441AF108F5DE24E0
2F15E45F1353E3FAFAACE13455048FC451BCDBB8D4B7DB14E990BE4485397F7C
47294B5A218CF62C288FA6E1A86CD04B1B1FB2145BD79A1E30557FFF20BA4408
14F278F264CAD8EF8981E47D02EC3DF767C6B2AFC902E12DE9510FCB1199223E
D8525202C6A116FC934705542C841542BC1FDB26DBE389CED1972839AFD16C08
BC6905521FBB4C344FDDFD7227F192F22B3DAA7A0333431902E82B66A0157C57
B8CB0250E88073D2DC3A543466F9681F17A75F90725260F4476B1FB7A7FBC721
CF8C5B352FD4124E035D2ADF0010DC396E1388496DEF3B240CD8069D8039DF3F
F8B29C3B06A5700A7FA1CBF97A2CB26BFA4DE1E60D8514179AA6FAD278711320
9C4917A7519A49A381C62843B4E061C4A8B2D0D3C90E1E90486EF1099DA1BF5D
65308303AA1508AB6249D79C686C60CBB8FDA44EC51772FE4573587799524585
6ABFB7BBBD9F8964D358AA76DEB7574B8B3876B0403C3AE90B3CFB11F09CAF03
720F336A3E90402494D572D3E0216E61605D8E2255E6B4898EA41F0FEA4B3158
C4A8E9189749D9762F3C3E8B4F31EB5E387EB2E562D59792A725CC88936A957D
699E941FDCABFD8F44D622055C20359F6C355AC3684982D8D3C23835EC99C543
35A42FDC4CE46153C2633D93ABFD8C454CC6C189D1D385573107C1C9223B770A
FA76B7EEF8DCCEA5644184159D7D056ABB180634AE1211D96A4210AB6364E5A0
B44411FB1CB36B1BD4B9A377EE65685F0115BD1C612A42A75DD57BC7F68283F2
4E4F96CB849E22D3F95421EF77341BF5205536723D2B758C8CF098F26C8AF4F7
11E51DE7601BF08D0C058456B83CD5989FFF2B0CCAEC60CE01B4E7B39CCF40BA
D8C7ECB1FA0E2882DE2A679AE2CB83EBB317057D54395F129493690D72ECE74C
C0DD0ABFC2620A418487C22A4DAF6E754D1D93EC568A9145DFCE5A682487A716
E81DD0A7BC6D7752B3AC9BC7F8F9B54F3AD9DD00896D875DE8F9B03131926029
D2F29E873950F157A5B163929AA2B8A67B5955780A7732136DF82CBD8D286191
D3237E22C96BD54243FE0E70897C987A89B6F48EA462E9C8ADE50C64989F4E4B
D0B8F9C6B3C678D29F1980CDD86431D65C2292C319E84AD943782192F302CD31
AC2704D9CB29F8F9F306F79E0CBD59F4A3CFC8C97FBDFA51F088E28A41E82436
09A905F458EE28C7E62257469B4281B713F3738BC8F216EF77F5A1A9D4B70DC5
21B2E004B075D19A8F20032DD31EE14548C35ACF457A01ADAFE8D8460FC48F41
BA06A65D1CADA23820B0E2DE883DEC32136F881AC470A32CFCF7AC317EFD1D50
00A51812848483F808522BEC5FFF44E0B07AF788FDFF37ACDE5458FB678199F6
98DE6686096308F77826025D409B3C49311B03D8BACE0187385C1475AFBBA176
1A670B14FC5542F542A92FA01CC0AB7A4E654064418267FADD033E6A97357CE6
281BE89FDE494AADD31B89E5F4D1582E9A67CFA244C9A63D1BE0BD8B378024B0
66CE5BC4C6EBC375B015358C3B680786CE83527DB5C25196DEE2D6512DADB2D6
430EFAC5BA6F8D6FD3B5B2D946FC9E5D44F72D92BE0BD2007D9D7BFB59D6337F
90B3EFBA2B30A776E28F7FE7BC0785D66E413DB3269F971F195A480C746571FF
2E80E780B5EBA25E782C9B7DB455174C1EB881D533DC0E8D85F9DA80969BFF01
09A4527551589F022BFAFFC05484B0011D875C19399E722A8B7FDB687D7D2DCF
370540027FBE6EAA34DEAB07C7C1AD6216247A7D6A2EDD5528DD6848308E4211
4FFCC9003963AC01521A530041B13F8B362465CAB24FD92962A2E8AD9951D638
941DB86BBE48611BA91AF2DAFC8FBE59CE9514A3FBCDDDF01FCD4A69F63D3500
E329CDBAAC3796F3A6FF728C7356623551573916C95A4A53A4AE636F2FC699DA
E27C3400643778069C6B09382F42300CBA463409FAF54B1337F390254EA5AC12
E289CF2D9C3F244942631CA225811B1749D9B95D284DF118E42ECA4C3EF29948
ABB2608424A582968548D1C5640F85E8E30016BA796FF156F5CCBC2CEB4D2B53
11DCA1504C8168DF1CCA64E069D168481DE4C9D5F584C68C06F50B0D91E0CAB2
D2B264B894B978467C362255C4F3E42E890C335A7D3C391ACE802BBDFD84C16B
B936E9497C4DCEC9746DBB3DE042ED9650D7A0DAF778C753B2F562426C84C099
0AE99BEA9F869F54092AE1DB45AA244770B3D2AD043C4E17A31EC5346BCB49B7
0C4B3B1869F69F59FE82535996A60D9C2308E519860916037DB040BCEB5C5941
D6326BFD00F8E2C46B4C975ACACB7A8A5A2DC33C0F5C5724AE3C9E2B8CA4C389
C7CE8AAE26FC9F7BA5A517D1522E930BAC7F0C316E428E93741A4C110A815E3E
BB14C6AD0EA3E77DEADCB28F65FD2288EBFE36D4E7369C37B8761341D2763A1F
F764ED045DE60363EA909F25CA31C33A6A466CB9B777366802EF29CDA097C1FE
B8776D7F800C040270B499862D6716D60328C360D187286D4769A0166ACA47C3
614F7E4C8CDEA4676E334934D97ABEBD25542746ADFAE256888C966056292B8D
B08399673F0DC75F1BDBE806E51B2941988C865CB602D83CD2DC870E1AA53E37
12C683F56B2C527B4831E9033E6406E6904C934DDF1025D0C7DC125415D125D4
00528D5160C7E9F656D93EB214E1FA04F01B66B97E39C19BF2C5D0A0310A77FA
AE497904F8FA7219C748E77188271A42DE0CD89406E432FD56FEF121AFDD10A4
11731CF74C45C985E6F911B7A4B917DBDAD738DF599991D07DCC80A9D40FABB2
F79CA39D61350DA636B6F5D4E97518D9573497D3911DE7007F806FF9E4B2E310
D484036028B4E0B28E4F2ED0E6DDA90B9B3B2437BF1F311DBAC188252F0C80EB
C0102FA1DF80CC1D5DE6759631D8A0E1DB0D21646F4A0ECE882054E0EB17011A
1B145EDEFF63026EFD3B57466FF2BF3311F292723167002ACA1C42FD8B3C6479
1F43E4649C71E3307D98BD7ADB0F18F6A5565D6A6646AE387357165A3F380A0A
743F441E66DEF14204073AE8460BAA941C51D8F3F175C5645D3301EA841DE1E2
33453EDE484B0A225744F931AEC99ABFC191DC53E3CD8E4E5F6EBCA36F5DEEB3
EC6484270CAB5BBF9898EF85239D0BF9C97E7C30E639E7EC97DAB7CE262F1457
E2FFE523E4B2BDF0FFC6C6F4FE11452679DD61F3B9C1D48CBCE1F4140EDF0D77
E58BB8FAF363E7AD501CBDB754DC1E0653EA5E815BBB41D0E27DE64EE9E25506
7F42FBD3105DB895373E39D2ABEFEE8DA86EF93755B8EC83AEDE8A774F6A3BB3
A267B9AB671F7FE37C79DEF7342F83CF1E2984677F396E04C5397A98A746417F
8C592E0D12E25873C7357DF3C02C1D7BC1E14DF8FDDD9069BEA6501186B9EFC2
D67352962DB057D2E784A4420C6A12D63EE1C0DB3F74B6BF3103A69A69CDC3FD
485A296F7F1BC32BE2D2A729E25042B9F624630AF865C700179E1F6A47F14E57
CFA8A404C83DEB592C8E394964F8A215BAEF94B4128C1DD4441AC35E79C4060E
4785F335941F04FC150C9664FBD9500AE545435DC23ED09D10CF26B146239603
6CE74D4E935D67D44343D4686596EC71F7233C81BC1D3CA5E3C6CBD2F8C50A1D
1E6FC1762BCD185FC5E2724B1007210E6CE22F6E133062F30673FBC600DC7B3F
96A237125A6A8FAB73F65BFC37A089DA8FF6B79172810ABF7A2D110F257890A6
B6D9CDBF54AFB657E9905C54C9B6935D9A6DD1FE21A151698B8298100BB582A0
22944E02CB6DFD5D5D5A748C350ADBD7CAC700300E4C81D9D739DF88C655165C
148CA55C7A1E244F2B8626B86EDDB355D66FC9A90DADFDC11833C9315FC9F129
5FF2EC1D6F82BC0428A071213C63F9E6981B7F57B789665470ADBFED8C929ED0
8CC0B325BA32CFC5DF19529B6477A04A0A7893B2E7D3B5EA0E324E24E9297D62
99EF4332B8606F8473AABE20673348F59F48E7191692A25519FB96600D087933
CCE5EBBDFD2E68B4ECB2759B67F3B6901294A6FA251F64B7353A6EBFF04C43B3
9E1467C61136ECEFC056F812112CA2E5DB900DC43E618C091083A38A0F478AE6
465F7F11D948FB905A296218296369020CA5542A08A0F20CF0D414B21E921D34
2892C948D625056509BC9BDE9DEE1E8951142A28319378A1D97A28644C3FBC75
583A7943ED882DC2C6ABDAF38CAF29BA745485880E6AE8A4F4C694BB6BAA955D
9EFFBBE88AAB0130CC9BCDB0162BDAEE9C4E87BE5BF26BA1B94BAA011C9B1655
E83CAD3407D7A54844BCBFA2C222B3D112470751DE4E5D822EB65196352F271A
92A1451E2F292C336C7BCAF668476A3D824E4C09F5A826DD6D078BC052B10AC1
12839207BD1B0C9179524946FDC56B40D0974CDDF1EEBB881B0E00C4165A4E10
3F300344F32EFC6266966A8C93E809536E9087CCA809106A42A594173597A73A
508E2681E6A8368780A2E8615AFBBDBEDD108C252E65ACDAE69455543275D8C7
5FFF353E1F172C5BB4ADD96BA9E45705EEE54CD0E8D7424C6EE964E89BB59C4A
DF0426454158744D7F48C9E39E6A992D3E19A243EE41A595A7E1B4A1A3A66A05
004EDA1DFFD94C02E1F9C93AE270A5C71A045EC658BC0137B0E30399E200761F
6202C8F616160163DDE3740886171B636101B20C210D253FBE02B34796C2D763
FCFC95483BB6F84407BF1A5694437C3A7B477AC227B25025B9D684B9E3A52910
EFA265AAA63408AAC7A14D4227B60445EB9A3F1B9A11418F5BC7E8DE66E3398F
FEE6805BB9CAD952AF100C9A172C9565B9DA3C942D677EAA2A5D59AF98FA55DE
2F5F002D7BB2539A504AFA3A90CCFF6B7FD973372007EC40795D1B754E8F96A8
9EF5145F84834E67D635A6793175C427A49003E7B6ECA496310691357F36D855
01DCB2FB885E95A4DC1AE22C3230218D463230F678AE613CE2EFB6D954F68F66
3FA3376BC2647990BBE76B57EA769AB111D299F74EFCF2FD128E0BF338FB71E7
ABE6EFEB2A6172CBB0FB50132566D97F216B65EDD4A8E707FDD5EC6789E645A4
E68A3171A8501AEFD12C7A7F6ED118C8BA336D1C018EE89E0A16BF638A41D5E5
89D5D476CF14429131B26468E3AD5091D0B347655A4BF65D2E5992A4C986074B
7C4911E4BF6384B12A39778D33C02D0208ACFDB42FA13C8CB77E7ED8CD6A1FCE
7B0C308D58D072E93CC1B1DEAD905E867BF04BC38BDE9852319577759B573A0F
46966BB981FCE954C2A33B1012F3D43AFA8C7EAC7A6DA0731A19C21155284660
0C7247FAFEC08162BF0F113F70A98FAF141D2B0CDAE87B801C0C536C101AA0D7
7A3B65651CDF77ECD4799FE88ECA30D88785FD16ABB57B5628D62A2D66C34932
C678A52A0660417E7DBE5416FE8C7BFA09305F34ECBD060A0E76AC6AFB704EAB
65EEA4F49690A882BAE5DA1DFA32010591C551285D60CCE2FA10D86AB5C6B4B2
2CEEB11C7B19D83F738F4D30AC05650C13D5EDDD9647C06923471EC19E8D378C
E16E97EEAD11886F604C820898D8CA17372129C973CFACD5C542D2E88D5F2CD3
50AA4018E7FAD53DCCC4978DA08BC5DFD9C47963EA1B38F7F08087F4E387C70D
49FCAD44B8EE06039C9BC87B6E3584181E5C17BCA0F16E16926A14F7C9F523BC
AC31A7229BF61063D4BF70719F9C206330747E1ADB54580A15238A4D01C51B3E
008B1517BE5B2510AFC29E9AE3DB170037E5F5DDF15307975E423137365C5A68
3C515089948A15F0B9559B5CA53972C479BCAF9F80B94E9123439DD289E65657
6F14FBE685B8A33054A312C9C45A573226238AB4EB9DCDD7A19201364A39B679
27065A970129E8FDD1EDC5F14C97BCAE88E8F598EC5138A44DBA66F26FC44F83
36AFF0C8E1C36609C020BEE23E5CCB6080F7A84A81D5414DEC43C814CD3BE6C4
4FFF638C9DB5F9E35D48E28807FA1928BBB2E6C2F219AAD63568B6B2F3D0E0D2
0489EB3F2DD2E97E97BEB6C5A1E7B2B36E46818C9EA0E9E6E6CDDBA5161B6520
ECC043475A0FD680DDA60342D5C3C6C486658937E811DEC0282EE3D0E3C1A319
3DBE96CF880E9892434B9CED332AE162EEC85770D85817717160EE6EA3E6E8FB
3190B7E1BF4C2BD3DC8A87714595C911C42005B99D58516FA232E661C7AC6613
4A730C108E57F207A7A6C9DD70F59D5BB1DA08B0E1418730B5B44BF5EA1CFECA
85E778204F6BAFE3AACC1AB6377F6F5BB8E622B6373ACBA6F0387CA03AAF347F
7EF05FF02DF25F1A3F637F19FFB7511DE2A01CC3A9C05193744DAE82DB7EC78A
B92A401F7697AB17B4D2307FA20326C5163F511F8F361B497A5239C96EEB0063
73C2A05B4D68FFA01088F70E1965DCE9C09D05C3D897C3AB280AD50FD716B282
8606C553F9E483E581C18B534352061B08E2CCF117F86777E9373FB6FA73FA17
9464DCD5A668DB3D4F4D635A6791B4B9E42FE4D22AE90AFD95195CE125ED1932
BF9A344B2ECD963CF762688FFABF7098C6FF792C238ADE58642CB032622E0F19
51A044151AC74059F36938122E3B72DB61AA041B73A5E538FBD81B239C4DF20A
B845D24B672F4AE01822A960FE8B3316BC9531DAF2151A66276ED33A96BE1208
74791B5E66EC9D1E989955E1352CA2B8CA5A0B2E0EC75DD7BC4F23C273B594B2
F8890643C3FDD64BB0C1257FE26C5ADCD89DB2FB214506E50940F0DB15B71450
E00BB9D0279C9C39538597CF36780916C17E8652CD5E9A86420A0B7B1BEEBC9E
413D1DC2AC8A2BF5A4AC899DEE2E0336DF3CE86C0A9E99DECCF763FD04255B80
82B2F32AFA9DB2C058F2C643F7B92D8A4A55409F16111EAC7726FD9F123F619A
85958D5C0FB22CBFD60A75EABFC1DEACDD54E568016E7B0AA7825F0B5B2CEE80
20DEC682A8C05067EB50343A4C57FE67E7C53F998BDA48619722F2F4D929EF24
7B7DB8A53A097F5C46CD0E4594A2B4B1F75CCEAE38EB2B5137EE3B09B4D8B886
75630F6BA58E82C0BE2BCD34B6C5113466C90A46F9D8048BA79A97BF944A6258
FFF2A22103ACD41A48FFDFCA40397A245E962D066826ED894173C3A6097FF71B
CC89C048FEC738F1FC2DD1F5ED76E25C4799D60C2CBB184CB50CB87F4E60DD15
7B935D42DDAED388DB7A0B4ABCA6F1CD6C830558CD47D3C66826D8F2EBB4070C
FACF503EA63D56A310834AEF79310729D8D9CFE24F61DEE9E56EFD7C3412384D
B4A9E5EA140552FEC290E7ED6367D7BC1ED2D1CED1C76A574B199F1777158DAD
40060FB0B603D3A2552DD6C2D09B48D1CD1C267B501B02D306390158C9185906
05B9F822D2B02981937937B0E43F46CDCFE8034064AA534A2AF5124133C5192D
98A4F99C5C3DB2A40A60DFFAA19B2B24D0AE624CB648EF8921CF34A7ACA7B8D0
17F4CD65296DABA92B16E0DBB92B4789F04CEE35C0B418B433BF3F7DDCE8DCE5
B69DF9551D56E47CA3E85466CC6F56A0476B5B0CF68DB3B860265E142127982D
B6AA9E558B2233C9CB295787C70CD0EA7E0663E9FC1AE2513FD06FF24E9F9BF2
54DEC25937053508CFEEC8B07AB0721A3215F14998885B529B52FE3D95679E96
9EB73D2CFC772142450D231B450726B68B283C89229F9E4C53DB6618E8735CAD
57083F2E4B7A1BFB96BCC5D4847D6CCE552ECD6B02414FCCA4D5C10FF06BA04C
EB2A7C0C4BBA87AA3EC76A904DE2374FAE35337A03A9041E1A5201FBD6463F31
D3714FED0788D0D40991A5C7C5B028685BC1B59A44EF8954094F405D2B3F4812
4432A2D2469E681187756FD690E185B1F67B8E85B09BC8C74EF0D9E43E1A51E7
12783BF1258FE90BAFD59E30BF27F857FFFC90BB9F46A19CBA30914962EC4762
1D5784661CDD3F17938F948813A615B1FD4252DB7DF126FAEB08C33132A49AC7
7E73ADDA9FC2CBA15C50B2C8D35CC328B60FADC0A1FE0529823687F0DDA6ACC7
84FF64F12C16EBDE386CA384AB4761614CE2631BB51E393E34F763078CAECA4B
A9271787D776C21C1E4079B7FCD80B038915933E3CD0987CD1BD0C42B24D95BE
E4F1EACFA35710037EA0B943D56B713C3E70FA0E269FF234BB42EB2084D754D6
47D45435289343551EB45ABB32D64FFBE3475AC402B3DEC385C5933B630DC7FF
1544C7F8E92600D0BADD6EED66143EFA46E2E3A78173A542EDB824C72EDF2C3F
52D34947E066EDC67C92B47FE540838D8706165EE4C6420875F8955F323AE66D
5AF17C31E98EE6DC4A677248245A1475257294A6C6F56E4317B36D322E480101
A26F59D779536468B8964F066C4EA0D261556C236DF0C0E671E657EDD876CEB3
5DD6A6C24515355F9825C837DA8CED49DEA46CEF4D6943B1532C07E771E6A1D2
18C93763BD61D0A0C5489848C5FCEEE67836639C3CD5B9459696A6FBAFE03DA1
90129E006AC1C7CE429D9BF87A771828818EBC417DCE5F09BBAFF9BF8DCCC033
23FD9FDCD55E50875D73AC81C68EBCA82F4BB6971B6CFD1DC42B2400959A62CA
CF5C08A8E9B1A589B6445A99DE978B0D08521762DAD6EE54C81492EA7F5F1ED8
E67D6CBAB0CF1831EAFF4DFE0B8672853FBFA6542B7FFDB3A368D5FD68FF881B
CACD1FC18C89EE36C748B0F4D0148FE94E823BF9E3C5387A23270AFF3D56249E
3F842FDFFB20023F68EF45B40785292381C860BFC71848AF25BAFF3E85F3F954
E0E7EB4B4533C8AEA9889621A1D3E37801F07B4B920191CC4BE2DA1A1EFD1D38
16D0217239DFC6B8F6253089FE8A1EFE09DB06F9C8BEB8E1585A12D6A3240C09
6EA124FDA54842FE9B618BB29CE0999C0812EAF623C2BBBC1C0F6EE88AC48623
52E1AAD626E0210DE8087C0B842ECA068844B4F66164CC6A00FAA495F8903700
7222355443E9F2E1B8CF700955B7D0F7EFE5659D64225B481B626D0AB39FA7C4
298CB46FC8A177AD7A51BD51EF1D88D59270DEAF555A4B4BA456615246AF5FC4
5BF32036BF3C02D1589EB3E4D3471157D15BFC592C2ECB676C7A2006970E2C87
6081AB783005723B409D116B25C017E96DF2AA8F3A3047B27781BF664E1A56A3
CC07A5C1588A1C5C7B34D7640F5016E9E87DC4D3FB6AEBF70870236751D9EF22
1257B04E8A3368D785FBB2758D51C41541BC8C3F90ECE5DAE05F194C804E27E5
EDFBCEC1264E8BC64BEC76DE3BCEAD7FC1C4574E6457B10F325D4EB35F9DC073
6353B5A106F63E9DAA0148DB08E6E9435D893568C27CCF8F7562CE1F2C40BD06
7637041D596B95944FB7671619E6527DB519B52F46318196DC3F4EC57E7B53B3
A1CCDC72713539C67248F3138A4D10D622BE7F9453D558FCB828179704678987
783AE628E26F89E1E23521ECDEA1197B0A04DDF2EF8D4629DFB925A1DDDB7A26
4FE04DC62BCAB818539423B46204F43455B5BEDCF9AF7F440FFB4A3AE384BE3D
9ABA647142B2B8815F321407ED2E385445F89776F20005556CEDC68FC47660EC
9C8A4F0EEE9BEC3E50C07073C5F650547746D39693734B16AB45A42C1EE10939
525FA2CD9E35988FD5B8584B58D2A96BA703A483591C1B4C66B50A643D86770B
B311D56F3EF3B1C6FC0878C362FF7765422AAF7947EAAAB55B4537E095AD6C34
E8249ECE9FE8FCC56CCED0738693474241F59317F44AE3386CB0ECDA1EAB00C2
CC543AC02EA664AA221132B9E75E499A4499D14BD9B376758816BBA293C02937
B37773F68B8339F5665A9EB50B6303C9EA0F0E59F3FA851C382AE8A35371528F
D8BEAF09D9D283F1F70C66340A493A472F058EE282AFE15E213FE20E1003599A
CFD123D048157CBD1706B161836800AA2FFF596A9B97B94D604B987319C22A42
7BA6AEAC9288B64D5B29448E4F45559F1FF141D342C9B568972D30FDEA0FA603
4BA0D2E96F4D1C956D1F40DAAE89661B5F39A6427BAB78C165DD4637FA520399
B9E9CEE85F7A35F8246390B6863C12856A1AA45C4CD84FE0E96BC0FF6BE13589
13B769ADD20A7DBEA685E12400706DB5ADE9F91C08CE0EF703AC2C71F002337E
8D937DC25E40F84CD33FAD8447E4B897C9761127F2236D6993269EDC2D5F8243
6DBC5B3F367B4DD87672765FDBC026E044AA92004E8D5B1F31E3CA7873DA6928
89A66771DA94EBB0ADB9C6FE5305CB7DBA63CD47F5B91A075F5BE42A3BF17038
D2ACCA782F2D16AA125501337D3D039AF45D8E99BBD874DD442926698390041E
A0EF9C658D9B0296884BA9BB4FD86BB6C79AE6BF351314503CFFFCE5CC7085F1
E97D1959507D1BC8AE769A5115F7BFDABCC46DFFCF0F8FEE5DFC7A7593227384
95A36C7291198621B437503B4171C1CBCF567DE010147C896C6C7A7611C1CB83
6DE73939A07D91B0FB829714A310DF8D4CE009C6EBBF9C97B65B8D8043EF0CCF
C2AEA3B4E4FC57468D9DC00041EFC20859201DB48FC57DA55EE659058620D20C
1DBDEE9E0AD5D40EA463CEF58B7620DBE608772AECDD8258AA74565334B66907
4E47393EB0E56CCFC841EF5C3B1C10287CB7047A7D3500800F6AD95E0FD7DF0D
CCFBDA67F5FC81094F26114AF8CE12BA8CBCADB48746A028AEF0414CB723B350
6AF9A2BE19F085AFF1AB405004CA8E8581CE103E8E9F517533F5EF81BF32FE62
9646E4A57BDB39F02F68ED546D5CC539E75A67AB769CE57642F42A032AA07E12
7119157F440987F493957ACE2D8A70506BE2E880B43D159DC5A5F366A1F492AC
D8D6C6254D26C4F6C0C010153AFFBAFFDE7D4EAA9BC9DA24D0D0543D6E9D4507
A02417B4291BEC8898F31AC67983B2E5C13C2989A5FBF7CB689D2B9E46233CF9
15501A6BE18C334DED4CA22528087BF78F14B0E819D6C36320685891753BA6A3
B79C054C95B27305BE88FDAB9737D9B3617334857EA9AFF89256CB01F7F8D6E4
7A9842F061002B4BDC4EB26DF1F21315B12160DA97D3209091D813AB0AFD5E4F
858BF0861F3BDDC55D898644B07369A5DB095C56B3D627839607039FF0991E57
623E4C6563F96C4B2E4338930FD3246C8FD965A99750A337D1FCC35EAB5FD1BD
3E6CA2112DCDA5E14FEDA66F6137A00619AF1FFB8A31AB6328AA4B772BA9167F
EAC55F071A9362FBE5FE751F19938EF20637E879CDB42E008204127AADED091D
51C944D85364443C84F2D623721D38E3F5C5470644DC42F2E66AAA8E40FBCCD2
848A269C9653AEB78A971D924EC2D0DC86C4AE406EE1BF08478982A5EF83A60E
A400D5FE70576EA420097F76420C307E4633954DE1FC0B1C4DAA0F9624D8678D
DEC7BBD295D9EC60165DE651ECE109948D00B856C14AC12D7507825E5F23D2E4
7DEDF3718C756848D42260FCFE119FD4604044DFC76AD0424D6077D5C415AEFE
E988A756A598AA67C78AD0D4F49F02C538FB890DA8254F3350F4C6708A4CF081
758DCF08BF3BDF8C4F3B76185AE27922D87145807F234FC2E34143D2C1D5EBFC
031D9DAA06ADBE7FA6179FB96840C512BF9AFB028AD7A598FB92FF2E8F498BA8
0F9A0B82D4C0E326AF1777FD532A369531C4F38A5533A4E82231873F15E4EA92
B37F9045EB711B4939EBC380FB750FA8D43911FAC80608EEE80E02797B148B89
451C26003B8B5A81CF08A783DA026A6192DE5B0C8E25D56D53F59DB81033F4F4
AEA1BF99F8070976D75485DC4B6A1DD75547F61F66F43106A015B4BECF94937C
E559EA6117A9D0ABFCC711F604B29E7601EF35FB6F71300BBACE206EC6FF852C
85996873C9CF8A1E6C29DC4365DC1D163DFCBABCA7D4C9D90F414418C714D6B0
A0FEE97A9C3FAE7489097EC382B0687A8D701D86BDA16B44FAC0BAA382191592
22779410AF291A8C4147F7E7E2EFF13DE5B9D1ADA392B820EFA34754C4EB6952
EAB0E1C9F7328E4CFBB87C645710C734A1927474873DD20C86A1B5EE88ABC0BC
2D08D64BDFC3240507494F7F10B401C9A26719B68F8EA6BE780723DCB5F2547C
3A7B9402BC07CB5E502DADB6688FDE4AB1158CB6A520C53B6A94B3667CEF0C4D
63ED16C6F8AA81B3C82D877D1A368F54911091A9482421E102125F1DFA12AE5B
99CA09170CFD804D2DA9CD67F3BF4F3FC34C281B47999D5E9FD505CB2D360E90
52AF007FC216C6F8690F1C4796ABBF09B4097283AF5811DD097EB0065B1E816E
BF120F92E659B7B3F99072DC0414187855763B59638FB7D17D92D6BDB5B055D8
6454F37361CC5700F755F821DA9D78602657410BED57701D6D9D4DAC9CD8A7A7
70CA28EE6D42498D3624CC56201EAABE44B4E65AC10E96EB21B012E2F6B422FD
F15D603311951B211D599CBEB5F3B7DA9D2FF993DDB9C8BFCBFD6FDD521D2D23
878E807AE0D5A3BF336FD6504D82BD519B639D87A4BFB4356F4AC8F19915055E
93B900275F2251C5D3A38729358F451FEACD30A472C61D6BEB7D3DFA5866AA12
5B2366CBED74570FEF25D121CEC939E716784B964679C6906D1E5C69BDC2EE94
3566F917B71362F21148D201A60B5DA9AD7F689C935C4A6AEC94CBD224C35525
BEE7DF5AD7731B980EF3C793382CC9CA4D5DC4833EB1AC8D2CBD5EB0EFD35544
4F1EF9B890EC4D669820A4CC22072E17FEE91C5B289486287B0185FF1264E6D0
3F297A7EB3C7D60A379135663C28D49995658AB429EEF535EF3C632ED789D456
20BFD9428480CCC3F2E101693C946441EB8709F629B6659B40BF3DD92EF237ED
37EF29D6D8DF9DD86043D6DA9E2E8A734059B1B136DFA16A76A056F92731B45F
2F856646691B7772F9FAB99D9F8480B9A43B20E7CF8E481AED2F41BB5F323496
3C3D3F360ABEFB00FE3CD9B1E2A5AEDC8999AE740753E9BC33A5C706F99B4CF1
A5FA7AFD68D2ACFAA1FEC88008BCFB51EB4BEF7895BC622CEA50D30FF4AF3A7F
EA6D094223A7DF261ADFF7813138844F5D1F36E2502F95875E182938E838491B
CAC422631D16D7B35981B85CFC694ABB5F5882369863CC03A580FDE682F0533A
ED6C26F32CF2E6D0D7304344C2F07C52501130367BE8E18BCB39195AFE619B94
7DDD84CB3AD5F0AA910B1E24487D5F51E4142EB9C98F3DCFE5FC28B15C075DA9
51F9A79EAE7CE9EFA7845A3A760AD004E488E96359EE9D23C7E547EAA6E559A0
14650DD9C5167C4D65A1A29F0CC8AD97D8532E97094CE06972A5261CD7F67278
E8F6249B2FCF932EDFDB21E710DAE6F7DD940F08764DE837286EBB53EFC8AF38
0412103D19667B4A9FB2E0CF52DB0AF9EA0ECEFA45FDC4891193419E3A48D571
DEE01E6C1591107758A825062DE7C2E237091723377A30F50EE2D9C8C41FCF68
538F3D09CA5AA04FEDEFDF24B58001909B7B03761FF2070A0162C234573DAA11
A489B87A3C6A208E9CB0B30F7AC7CA62B4F5C0C775C25AFF4F5099CD3A2FA59A
CA735713E9F5BD172958717963AFA5FCC1C753E473E21EB8BE0A882A6AD0F142
653DA546D27C470377E95C9B1336AE16FFEB4E1C481FF3F7E0CB583C8605FB1D
EE02FF872386CAD2E724B15646DD2FDEA523D863CBD4EE16455CEA2F9E0D67AE
D7B24F09528EC9648A398EF90078D11D6C02F03532D1B375B38AF2C8B806A072
850E729076811B5230267702A9A0194F0DA8D335635EE2174E2DB99DAE9C5605
BDA920F3D8C391A5FDDF2318F6D505E8FA521F1DC4EAEB43445E1B41B3CDC413
6AB0CB821555F902C0FB093133CB6D616C62D15511111EF15663F07283E49DBD
9F22B4DD7EAE8F2A3FB1BAA92A184B3955151BD98F870AC5F00FCEA743CA25A8
2E0D08B03A114275D27DB3F725B53875ECDFC0AAA341ACB628F3C6FFBB765237
D6F96891818B8D08E41531D7D9AF96A32905908C646F1E2D3B3D36F1FCA95352
33A09046925479D22020F251DB7C162F68E7B917E7FE75DCD48339DC71101133
2AAE28B05862B12864F6E2B0DBCD892E146924C758EB39B567FD9A5FEABB57F4
F771336D985C0C360B2F5A5877FD00B41D430F33AF7305F28FF3FF34DF7BD592
A865F81614B3CED90FB43E120BED34DB66E8D610F9A61C9B8F56EA12F6D81CFB
8F041A7DF0647C4175A9FB3D7E1F335DD113CB0D8C0036E35125E11CFB8F1E39
7508BCB97A2A87578FC11C4F80598937ECAAD0FE2A9EC2744C84C939845A7919
ED450627C39C2D01215CEDDAE51158AF491169D51647A4ED3EE42458BFF881F4
ED4F4D5B8152B9917A259EBE790D93B0A8092E176ACFC8C5A4031DBF1B7A9F86
E43DFDCBE020FCF55AEA0E7CBEA38ACAF29955B5FE82F02BBEC4293AE7C6D0AD
D208BAF867A29A8186E74CF7B42F37C138C9E5D236E4254297216425EE0F7E93
1286089702416274BEA71784E25AF2F33DB2B2520DDC0E2944A9C0F4AE804061
1B61ACD5AF2E7C6889C02A2502A424CAEAFB3F2B2CD8E6D7EAD84B49EFEC0E8B
EF13C297818BC0CF1AE8E48D1C7AD91B7886FD11A356A102FFB1B4D21F131F43
A283E6853B55B12E20239252CADD304A347F58EB9A953D33EB4E5A4F85551970
C0F0E81DBEF6451AB546DEC59C15DB93E45AB8E7E81149A068E623F74EECFA24
7153807FDE16BC23CD0F254CD8A11ED7FE7D66B82D804DE5970C661CC3C7B9E3
0855BC7372D1C0A2E86C3EB6A16E596FABF669E7BCAA66FB1646478075E259E9
13C745DF73E2E2A206FF4F7536A257DE2ADF0E44C2FB1682C057D1C690BE2230
B599EB0F4ED88FAAB42FEBF1B202FC7B5C541185A750114B383E01E61CED8637
FC9E90632687611E80F1096EA9B7201ABAE2CAE19F839434D1B651CCBCB13BEA
2876428AE62939A9370330D258EE2B9C11B62BAD95BB4F96ECC29086CF92FEF4
26E34E8956E9F0DD71E79016FE09D941EE4752DFFCB7711F73A184AD29B8E8A6
CCB242C5C80F43ACEA3A403464F193B35046C8D0F6DF38EB1E2947055B6F6B1E
A21E8693CEFCB53585B5747B7F9D27217AC8D3586631BB19E793104EDA978665
CF6B9AD6EA57A733ACAD07738B440601E06FDD92DCA9776D4E37CC3C4C7D098C
F1891862738E2461F09541582715D824F4A1BE43700462AD93C4AFEC7270FC26
905B9ACB1FFD805459BC1614532E0737252E01703608A8D7A36C5EC2B899D263
CC41B68A8BA711741CE21D1C338D255BFD85AE9E55175F08C074CC2338C11B03
7687B21781CBA8AD188BEC4A742712F00BBC15FB4072971285579138C5C00A7D
4CC556C4293F3B7A66620C252C5A69C21C86A00FB57FEAB25B87740B147D7C00
F387A5FCC35A8891C30066ED389F3218DF35DA48199A443A82D3F0433332AC4C
1A4F04267EFF030E5ECF26C04E823C4C1D5A8698B3F95053589B94CD9BCA1D2D
4C2C3B750DB1EAA2FF4F42D5076A65DD9CA03453A08D81B78CE7DAC4B1A390A4
F1A5BD4BC4FFD7D8BE8C64BC074C932BC9F9C90A53DA1067606EF402DB0B3CFB
B76D723F78E5C6085F3DDA8E5136D31BF0A0F510253CEAE39C06E0C2F5E161AC
C792BB3769B54524595C921B0502BDF500B93DF9CC3C4D17988B1AA619475F92
765FB84E73E983DDACD3F2DC2144C530C21D5B1AD495DD309A7780D2BA18DE04
6F0F7A85525579D440FED432B8395EF795042066D0299FBA63636FC39C0C0D92
ECAC5D9FF97AB24C323D3667D2C17E2F41CA1AE9D54F1E37BA9052398B2858E1
C6CA71FCEB8B2986EC03E8F2F04D144BF0DEF1E84FC08D464A2A53B109AE036E
934ECC317C18EDF95E58D35C7356081A49768C4999A18226E0BBC1067545A3F4
7E61A3E237FE04B465985194323CC2D515D5FA2B3267B729E8B167F403985928
C08B520CBFA7FF851695296255B357949C867B46989AFDD707BC61FBFA8F0D76
E31A0F77140C3023C16C03EB23A57412D2BB627B1D1470E5C40F425578EDABA7
692C8CC2795741BC89C163C11995771DDDD8BA525653BEA2901AE7F63BC010CE
B8ED7347726F35F2A2D9A5774DB74984CB56DD683DA63397BC243DC77D620EDC
AD0F25A44D0DC4A0CE0F34D83EF552319900D146403CF3C2804A9536C962F3CE
6072053460B4A75D4F1424193BD75B9FC7EEAC48DC83AB2B55C75B97C00690A8
6EA04776F70BDD9C6C81B56139BAD1160DEC8E82CAB56E55B691324A855AD2D9
C191CEB89A2AE472E8504315E6EF8C9732CC205376C21AC9C11D9A2B50E4BB5A
E8A6067CE85CE593BCD38D68EBFB2F31C8ABB9D98864F63260048CCDB532FDAA
F95D3C06ACFF4BF5E2323D660871C6FE729544B0D8121F713E8CB465A6B337E8
2772BD386A14E6036F23BCD277446F2A817885629549DCF1ADAF0BF7CCD4733E
10BB05D781886EF0D604E24427B2FC9534FFD31CF9B6413995934DF0953911DC
DB7B4685F3A6158ACC8BE9D5EDA387347C4FB918C6F43B3E523AA831ACE9C55B
A793CE68F2E4CEECEA72F0E862E23C31C72BCD0D9DD55D91D97E2868431CB205
DFA57BF12089580025DAA5705F67B93E1ECA2819A7385BA9D4C889D5D0A16D3E
0BD0FE9898FFDA3C29B8233AC57C87107490854885F79AE6E6A2CF98A2BDDD79
62ED3480400ACACA1FB1CD13DED49DCFABE42CACF00254F5CC8BEE709C19BAF5
4CA2BB333B0CE07022FCA512AB44DE5666F26289EF10C0A70C5F8BA2E2457577
F8DA4BD3094DFB8DE5F4D4F62E0A4F7BB83C9D5E20CB4D2D24A39598F6AB5D98
B06FB814AC4D91F39E1D77B68037C0050B0AA9FEE1527171D73BBBE77B6AADFF
595AB1A53F02D8A580937CDCE6FBD66A906C8304FB77504174B7210DFCE1D138
8FDA371ECC3951D1B862A181150638F7A74E64D6A9C4879CB0486E7CA4278579
ECB88E5CA80879DFE9A4DBA8A10D37C13F1E1BF636EA5E43C06B19887EB5247C
401E622671128D11865C6190040CEEA111C7617F5E1FF5480B0BBAAE496C5C7D
E8B1D967079AC7B70833E30C06F06C998D0D5DE08DE8AB8B0788C383A073383F
DBB9644DDE034303A840D65B009D72F421D07354D266BFAADBD4C09DF14F6FD0
555C3D2015B50A16765509A89DE7D27735B82A03D3594D220D80DA6F5CCCC53B
67290FFB011D1B2FD41AFCB529437CC4A4EEE4E488B28599EC047DD554DECE4B
E158018C08F0810D039E10E5B5A9A2BAB11C62A5E506B6A9E6A7D63C4EFCBB40
C8296D6E2C683E52052552C1BEA64D590775FCA5443F0DF9044517835CF2DE23
5CA4E1989ACD8231AFD92848A30F0F98CE6F2F9D892B1ECC5617D3749422FDDB
1A15ACEC2CA105A7A1ABA82D843EDCC2E6418BF5FC0965BF7BBB48EFE706D5F1
BBF53EE3D8CEDC1F4D7AB02F872A65764C21750D736597A69916B7ABFB5A59B1
B18D49526F8B0E264DAD2F84624CE5440B71DE8F143BCF96D274256668DE4C7D
66FB6C893541BD1B79866600ABDBA173143323D14FF9629835213275BC151486
04400308A579043F85161CF18EAB8DED02101EFF2FF92247F7BEF15927A66A05
58C29C6639EC06591741EF58A3AAFD343010B4D9184C37C7D8A56C83715284DA
567EF237DC524146A8866A7BD2282066D48F10E99A4D20FE29087F460245F2A6
DB21077B9E650063A6F7F78B31856F540B6B0DACAE29FDD5F13C8161969A9995
985BAEEF97B89F045B686C95B90885031288BBBFA659FB713455AA0BE341AC70
1A9DF61472657992B65D17B200B1F7D928A591122BB33B997722CAEF1B4C28D6
453F42A8FF2D5A3F36D423AFDE742CFF0B226921CB1C27D5524D34A8922DF0C7
F22CDA1C62A9095353F482286DABC3C8678FD600C8CF7351AF0F693A28EB53EB
1476F9F01D1F67C57DA896973A21F29BE1F30A49AE29BDF6CCBBF072AABD30E2
D4E86D943166450C32785858538FB9EB14E6F9A34095C8FDFB75F13A58BB2484
58F0C02ECABC8E576CF20C39F85A02A24AA55BB8512B21BDD2AB0070F9001AEB
D37D91DFC9CA96FA3D061E3A4EDD175EB14DC407E2C595EBDF4B1D9B41779720
917405689660133C442E0F5D8A45BBFFFC2FDA2E99DFD62F0AE7744E78E9A8AC
2017B027CEEA34E6FD16A81E4ED31DB4973CFAED2A3C75641FE5508D3B01142B
8CECBBC341C987B1875995EC1A1A2669F8CB2FABC788E676B50DEF95183CBE67
0747036ED89F8AA2D5A761C70A254F73D2436EAB8E6D45B153A4CAB659ADB600
6EF4662EDAA4551244C2C5E2748CA05F34D148FDDC87944E45911A2FA16D81A4
7416AD36B94640D2BE0C221787894951C0C67E32DCF0F83844078AEB61E010D0
FEAD8EB6A477901CC0AD1C2239C3F26B6E745EB60C8FFDBA2A41D3E2C29864BA
6D39F120FA750AA93046CA336377D2EF834C777873E0AE4152F85B9146FFFA8A
015441BC7174A502745DE5E2C5E06F75CE1566C8BAC945FB7BF31252CBF743D9
5B4BB0E7B17AF74B73C4025FD0BB4B183507B877EF1D7086A30E5543197EE766
492B52D981E18336C8C3EFCB0055AF1446D3C9A1CD42BF6DD50D4C096B58AF5E
E0E7BFC4A2A173CA694BA8B7E2990ECE96EF6D718E756C2587824D5A33505644
5DDAF2631BAB4CFECABA442ED820DD846E4D2302263E104AA84C3431FA791B10
DAA04526CE78EDF94A808D6A351FB5B0F41859ADC984DFBEEAA682C022121E0F
9C3A4AB108942EC30EAA7999EB0F25BD271808ED561AEBEF2E8EE81E07796929
37DD619C84CFEEC2572A548A071CDF7B8F578FB38ACA56CD11A057995ADA7CE6
96EF0CD7E96840462FA7C7B066DF0DA5AEBA378F4CBD5B1DCE105F9257224876
8343C025FE3291716BB0D686F0013A3F03DD06F87A15B474E9A2B2E5638525E7
EED4CD15B84D488C6A839ED5DF94B1438B4AEB72DD96933E392492D03B358BA2
5F00B7D1850C4F4632506ADAC69A0A6E1E7B4D9287CEEB3A16391D5C36E6D9D2
FAF7E3D77B33F2F53790760FF00CB9C2AFE6ADD3782619700F2A4E7CCCDD30C0
0B1084B549C6488D5E2E6E47FFA99962AD3E2848A139226063A01606CD5688D5
6B6551B30BFA6365B44EC4DC05BDD85B9BD0EAE019E240E1C77804D98258F9C4
5B341392A84499EE11661EA1246B5EA930B8DA6D9C06806C17422E902D621863
A82C0EDE2F5D6EEA6812E3CB786CD8A1E412E413A013E3824232BCA888E097E6
A215225CCBB430D7B72A2E6A0F56A9AED7D965FF7D35562BDD6D08ACF009C85A
93AB6CDC36A25E7A8489B89BB78440C09DB3F2B92193600869D339B0797D7C51
5B44C36E4A7CA04E4B182878BA9ED278575B0344C97B18799AF02944FD152304
91FB670DA6E0BE926B348B1C6279012A2D7F7A19455D62F56A59B40483CB29CB
1EB8102845BB22D8D7EF2E2839E87DE84D7D4D68D59C8264DC0A8DFE587776A0
FE704B97CE8AB84C6B2056997F2D35C3168A677EF29300C0D89826FE2EADAABC
ECC11FDBCB66BFB474FB84146C7B2B8FC74A920D20639D6A503522078C0BE6A6
93E51D0CA7F200FAA2AE7A1270D134858B97BDA90C754574DD642DF1384ACF98
263D07048EF16827426DDCABCFAB2F2EF6B784A194F592656480ED358EAB87AD
680289EDD092F051EC681C3EFC9CD356DD5C5C3562657CC9ECB2895BA80A2ACB
15FC8598CB82326A0BAA54BBF87CB4950FEE6A6F5DD566CD2AC95C17C606352F
A0B2474310B0ABF478413021D6AAD14A2E6BAC67DA45FAC0B1A3BDAFEEC87D6D
EA6292B3108CFFF99BCCA53AB376F75BFFC73C3A89B325E02685BF0544F421C7
30CBB6E9FE87E7BA622A0A00C70A88A97759F38E5E934272FDED37099F42802E
B47E193386FF6B0C45308609A4C4808CFE331DD6769809CB14EE0FA16CF323BA
72FD9DECF4AA3B3145343690168ED7723772DCD4AABF8FBC26E3CAEB118D959D
FD9B83F921793EDBBE24D37AF902EE0F1C3EB34BEBBE5322E815EE60CAF1E14F
82B3F4990DCB9BC920F8AF5D10770655818811A0B4EB672268B323FDC2FD3738
6B5F175C0078259E2DFF322843E533102350234B497BC96DAB9E1CE7E7F98AF7
D28764B9EF6E2A378993B3C52E851BD2024C198F6FC8568181BC0F2ECE2C9F7E
C4B81ED1310FC20EAADEC9293F45B9651FAFACB26692E705C681971C9CA6C5B5
B627AA40A35D0874ED6EFDC2A5E264EB9D8E15F43B22F67FCCE2BC52AB3CCE79
EB50EB6C12F1C85C050332C2333FFE95E3FFB72F0B0ECCA03A3BB26BB182AC66
165D8D5C166268C297B635F158391C0AF882D359D965FEDDBE3A653633A75BD2
D7210D301BE8318583456F6BCA32FFF9699CC656AABEFFF9FEF5C033A7E04AF8
FBCFA1DEFA97DE19C927ABBC2E1B265C33EA2BEBA39871207C972F809A7D95AA
AC06076F88939BE1490BAC5F5FCF330BB3BC1ED360DAAC6FA1B0DECCADCFEFB8
5DE55B80A87486F4DB6EE50097BE81DDBA54F9E40513494D93028B56187065A2
D308142743A2B6AE49BE324900811F2BAE370B073C841F9F1D4F890E4CA7A872
BC40914B4A18CBF2788133195FA53F36639A7CB0B795B5355C99E5C104C18F25
DC891A8293816D0C42BA53C8B6E5DCC78984C74C02926218A4389AD8907BCAFF
26C17D0220E7C431B546B23EFFCE048F59ECA296E88FB87DC40F1C7C49274ED0
88A6BC75C97170C34204D30CDA56EC1683E377F9B9C41903B7C9305640DC2C5B
E551EF21EEC1C5A306E425E179E10874AE7FE97297975750983C5DEE7B7738C9
91C9E4C9A77AF689C75DAF2AEC4695D7883E6DD6AACF3F8591A02C59FC1DFDAD
FFE04A7FB972491EEF794AD68C318EBE2196BDE4968A29528E45C47F096779D2
703425AFCC871E56C8E720550E4489D51B7B8421A31500445B3ECF6CCAF5082B
5FAA5F9622918977274DB8794D637395E9AE59EC917631CC377558757BAE1AA4
2B1C827C7DE5675DA49A68C6DF39E632FAF6FA53A34363BC35D052DA861DE1BC
B4CEEFDB2181A7A7A2A4A01A30C472D0BC55DE3A204DD3D233D3462D5E4F6803
DF8BC7AFB4A19B503B18A9338DC81EB0AAB6280B0C5BE60DEB71DCDC79ACDC9E
A7B049EF76DF0A97E0A1693E53B42C2C8DC7A70280D3F9BB8D77AB5702214C7B
C0327B02416CE6E464DB12C67AD9CCACF9EF6E92565A355F861DFEBC47F6A89C
E6AEC22CD495D17742CA730ABEC93E2F9F64023B8BD242CAA7C7A53498580387
282D62F3E0C1F1647F5176111C56C80CFDA06408421E10EF24EE96D77C53376F
A40227D65712E80682DFFEBC73E7A04CFB05259E2FAEA8348F7E5563C735C480
A274F97282B0EF04BA4621294FD954D5091AF159CB42AD81378006FFB209004E
A3F6EB128CAA9870A164052511691FB1DF0C8A3A95FBF27D4BD2A40CA1D5C81C
69DDC4F62094D5EEF6E1E634D11072E2B8B94C868921675E3964091BF9285EAE
B59265FAF306F793AF9D535B2B0ABEA86286E122BCC40D2CFA5735A0BE61BC4B
1F3FCB1FC8FD435AD5D6C1F1176D250FA3F181903BB0E5D04E76158A9853A4A5
838172A4D4C1C8991B6ED108B4B8803E7FA13936881A6BEE4A93B0719529B7E4
4FFB37302FE51DCBCCEC56DDFC1C6B559AF72A9DDACBDEB590356446DD8A503E
61E82C22DFC6ECB5681DF0ED89826DD7742779A973A8946984002DC0574AA611
287A4754BD80D003E00F9E29E4C9188998B01D4187780FBA1200647D96E291A5
9DE6AE6A51459383F8A091DECA6D28E32240F133C370174267F42EB33A156612
FA23E8847D01176DCB55A3573E88170E05C911131A598C65B40574B4AB35A924
3C363D5217766C3CAB41216FD6DD16A3F657C407EE3E04C304572958CE08550F
5B41D619F4D3EC1ED7F662894471A9AC2E8E50D23323398D0398E8FD6061263B
222F5A036309004AC4489E5591E32CB37662B0C3312508C0923E388D18C3D982
9205CF07B04345410D630363979A102691FBDD62C7417F07E095A2E168456711
FFB9F7D46078496F08EB25E71FA2A851D843CC8E6B0B39CC2FE8C53888F701BE
CE9ECDC5CFB4A6FA4355444A111F9C5A9C3CA342271E7D3325588BF6547285F7
9B6DC520E14F11FC4977C72C97C003B6F21DFD3CD1820A98118F12440142D52E
896B605C2CCB103026F192FDDDBBA6296BDD65A9CEA75C3928602210DFA844F4
AB3878FACBD5AC444C4FB32FD7AEECD22690CF521DF3BC2C402571D4F722AAA2
043E8DBB1008DDA540EFC53638462E2B1D1D2917B5690B7D33FB77D414D9AAD2
140BC118CE0D669842989C886CC4BF2E539CD690B41B63521A3AF0291F911117
5271F610E838972E992CA9AA953C51283218956260CB08AE977F29F2C8627197
055A9F0B096E2D5D258C8D31498E2A42BC131F40A7217BA61BFBB85B29734709
7F38568B497AC4FD7892D636AC16F2E52AFA5089E040A24A676DA9C6D9BC7D68
066AAE41E9683C2258A69AF3A68B5B28B2D4C99646585A4736B1045640106D43
57E5F657D1998AE9AC7A3F08D90DB346C1A78E0519250FAD7C2061019E21C0E9
6999ABAEC22C7795233763EBC76C4A64F77EC682FFFF12F880F94C5A7B09770E
F32D735A3F3250DDA0F0519BF135BA67988DCC196126B0682C45B9EF8B1C7DE2
7BD7E51344F599D771E7F6B9CB3F90E37F5EE08D665327A406C3894CD8FCE544
070A40943CDDA0498A957902DD513F69FDA0502D6645C1EF8B281EE03B764C66
44998ECACE8765EDA4B75C1FEDEC6F23175BFE0FE32D3F63AD58EEBC35011FBC
286918D70216B988A79552BEC266E4C5A47D999C9A53AB2A537A5F77E4A51563
4B89DB96098211807CE04EBD47E4421BE3915D3E5FFB65B286A9023371AEF5BC
CF8303F75013A6BE4F23EFE5E7B04E91B69529AC4CFC088D0E27D9B7F228441D
CD784353448BA25CDB02D4549B5E432BAE52F023D1A6BCAE51F7B39284BF57B6
3EFA66A9729AFAB1B0F797474BBACAD338A1445742A6C0884B7558A19850E939
A67F3A436DCD437076BD8726CD565F1405173D252121A2104A0C6625D2EEBB7E
1AC5CD29A6702F7984561F2CF31A7BF839DA1C4DA4E992C1559DCDF79DDEDCCE
AB14AAF58CA95D10607D0E4B1444D27ACA5245751750A211D32A28F821715E3C
9E8D3209D481F7A6E25A9AC7EE355C808D51EF9638CD2059D04ED4D60A3C599B
C0EC7B1110916F4E8C02FAEF29DF5CE872EDD37812497EF6A45BAD202C470D15
4EE65E0072CF4572FA1B7313C96C181FD4ECC94255EDC003A8589E803F38FC0D
2DE7B9836245E22E63CFF5E9000BD1F9A791B4192F772136B32BE93CD0EA92E5
54694228FFD14FAEF2719B1084D9CF37BCFA427C495C007155B21728328A0587
B0BE3900116369BED3E1C55DE20596F084511B011931705F1E7360DEC2718BCB
C70E7F8F20867F5CFE44555D25EA65A2E47A4B47D78F0E98E60E4168C7A16FF0
ABBA68DD367339FC42EE3624CA97F47291224A28FABEE0F891D346D791CCBE92
D92255086EDABD9321486C0B6419695497ED5C1002810CBD463FDE2CAA93DAC6
07C22E59BE199EDC8095CC16EB82EB67F4FA52DE5CB1F11931CEB9C1CE8908A8
4013A4B84E068B70C52DE528C93BDBBB92755D399BE5083B5CF5BABC71D4955D
E0C0BB3869E949FF6635DF0B79B38C5D58C7BD0DF04C37F0788A9167970E1D35
6361034C8E353367C029902288EDE3E39E14CE90F629013F531A2CE50AE1886E
D31226263BFF9FD27FF6A55AB6790F6EE16C59314E6DE801BBCC313E7E8CD0F7
566B60B348806F0F711AF5279EB91B8400684704D12A7641FA83E6AEE2ABE473
EF93EF84E4C6B6277DE08E3ECA70FC12DFEEB8A8E4C72AA0D2B0307830237599
248EF7F37CBC224FCC928EBA2B127D41A0671BCCB9BEA2E77F06635023032828
D3C2ED60EE751DF2CD3AC531342A13EDA5C0782079C5127ED1FA4CB73D4928EE
D2C39FFA1E6D4CC6D9E1CBAF094786B2EC50413BB6C73698A42A1BA702788282
915948284B7338F6D86E47E424BD249B34185A71706506E713157730E869EFE2
6AFAA659E193882D6E1DAC8B4B52DDC3F6980895D98552ED106E3EFF5B0B0B74
CC7707B59A294787386CCDA558F505909CC425D7732A1C8E18AAF678F993186F
8A82563A70C6264CE478945B2D0FBB713599F9C0E4A62A8A4E92376D5FED7F41
3003D706E7C845E821DE34A7C05AFECC8733DFAD6279856085CFF1E4A61DB2AA
89232B53E24D7E3306C046DFDCC86FF43EB3B8E0A654323C1DAB252C8B73017E
7C0CABCEAF258E2FA3E83DFD4435A29B3AFB934ED76710C51E81D4F565B0B603
34504B3636CE4A3FC60E77929262A20129AE3E4BA0E8FFE942D9D3FAA5D3A515
4EB3B0D34885F7387134B988DECA502E207CF987F309103F6AB5FC4ABE0EDF4C
4D058D7D54901FC5A185E453CD3DB43602F56B52FBD66C49FD4474779EE9990A
7511D5EC0C740BE8F95A8F9ED1AF30488219EF3C01D13860CA351FDF0E710D6A
35E4FF487BD3EF3FC301E04E8DA26ED5BBD91191EDBA6470C559CDC7FB1A6898
448FC6F23BF99550F7350257AF331CB5316872F16E1BCEF41DFD18CC9E3D35CD
E8EB77A80AFE822A26AEBCF38CC4A173A9AD9F6669E8ECBF41DBFEE632A44B7A
418FE15B88CF0F4675A247BCB37237F4ABDA464C2FF2FE6637906B5041C2AE08
280D43C23744306D22EE24B48AAD9B6C69D2F65D155CD1B0821535B8A24BFB0B
2976660B44B9048F7E51EB933E046E39B6FC8A72070609EB50399AE2AB54D720
CDC8227C1AA32075A889BDDF2A70E83EB96F5C23989734D8847DDDE18AECBBE8
4B4F6014E90E371377F1D2B7C8FB3E67F0C7F68860E397D88C807980A324F6AF
469C15A83312D455358E4C35240A0EA6CC011036B2DD83C5BB5C170EA156D7D9
F48D07A395FD22B95BB2201DAA1D077340C0F3D4EB80D9D1A75CEB3A5FBE2587
43B65E119C18CFF68731EA92379D4E95103D2DB4F2982BB6570812AAF598BB67
21325737AC9BCCB0DDEA9E088F362B28CE58E99A5DF2F91AC0A8184067D0FD40
82DE694FA616B86F247AA9358D8DE0BB3E3ECFA46BF9515742EB3414803F3457
C6005A53B074098948880E26FA61D96DACBA479EB69EC4C8AD212303C5ADA9F0
3AC7F2870A396454C0820173CB67B612375C58502F13C64C2B634C6C8DD7308C
5A0D0A8E5DF8014B2B1FFDF98005F12D017C8A57A07AF93C91C105FBA1C26C40
B5C09C8EBC3200E2C9E67A37F3A79DF8CAB29BF0539DE8D81B2E7F3FA3530B9A
79C2C8B5F2ECA36E6095F63CFF73B176F45E55109CF639F36A68CC5595397DE2
3EF1D9AB161F946C2F6C014A04DAAB4C1FCA7A52F1BE9B78DD93BF2B413F1817
F7EF53ADA930B6DCA87ED039301529267174E70BF339AE3E85E5C35F6938DD79
0499277C2685DCE0B0542F9075A50F581D9C6FC0BD678A893C54AEDD1EA70C54
1BBE8595B9F9840127319BB12C601A89B49FF305A3A1629EDA4996F3C7F54DE8
8F3BDF486E38B92A0C2C7EA90631359E9734C8670E76CC867754FF4241905ABA
1D0E8B373054FDBD0AD28830F5FB004EAD748E775B30455B044557416166F3CC
B436726B2B9C7B26B02FF031CD70731F65BF81172028715AA909EBE935020198
0C38FCBF96E07B437B3ABB93791E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FC7DF309CEAA
B7C79374C6ED59B683387237758B75F5ECCDF586AA7D9B6F5DC5D57AE3AF6937
F45C869DD22CBF20D876F5D5A2FDA8A63762932F4CD50CE835A135D14563C415
9E5848B3062ADB9E374E3A43781E2FAB047819D53A6266B49E540D79100A0E59
9A49AF94B6B56D166BF13E0CE6FF00F936211D0A901008A5F92C905F9EFE3617
171592865C8E1C9388867DA6FD1437C9820D05B81C78F8E580B1D1E6A8D59462
D7590018F976036FAE7E1CBAD7095BFE6125C409D42CBBEDE059D026A5226CA0
5E1D2A286E8FA222DD130F673A76223216CAC3FBF49EA5A6EF120F4A3F2C1B5C
38F173AE00D797B4E7A37299C66DA33CA8EBF0126C1CB47C6DF8D6174E4A8719
6CAF738F6E876E120688B1C94EE092DE61423FB884E8C232A272869933573A5E
6D11425F597322685C524FE51760E641740521DA6D26C5A4557B01EB5D6E32C0
B45CFE0792F62396267EB558053CC1522CCA218E15A942D8CD5171BB4E8B23C5
D7A89889FEC8199C1BFBF2E9C2B5A859D37B9477AC9344F102CEBA0918668AB3
C1AB139105EF0F98F0F39B52268F7905AA00D9C8857D728F53F195E1C608A8A3
653169F39638D9D9F421F4A3F808E890D1582BF08EA447E70EC4C7F0956A5909
692CF258F8A6D0BF53C26E96BB76E360801E608E05496BE7619B8C69F4248F44
CD9D5F5127D99FA2132E6C41628AC3150F9B644491CBF50E1AAB4DB1875D107D
8180396BA6046C2BA8F8E14A7959731A74DC4B215D7EC095EBE86A3FCF3E59AC
014D4FB55480AE371254368CDDB5880CB89D95A07DCCF0DE54B996C728BD3334
2978D99464D46BB5E26CAD7951FBF3D7B27121FF01DEA6F49C7A44936D8F4AEA
ACEBDE3D65EA4F36C4CCD5E728CA781CD9ACF89FABF737E42204D7CA411E72AA
4240AC015EA28CCFDC7A2ED1CC6EF05E7BE3767D68053B9A33CB768846E38E37
4DE01977C142E0ED10318333382EA1345D6AFED8EB3CDE280D8103C72CB4F311
1D1B8690DD33C3CB3F5BB87F30B80F15A0082D1D59D9E92F477FB54885C6489A
CCAE019742EE40CF5D7031A7D3D21CC50CB35B53E1B9BDC776BFCF8D8058FB7F
8F1BA4BEB2C75F7E13D6E20F68B00C105B49DE64887E6AA4AC90A011EAB0A70B
24AA3B455D30B21BFE4033113461F81C9A1F7319F7BFB76E360BBE84C67C3DBF
FC1AB608DA6794EBB5E11AB0723C34AF488BA3A411E8E31CDAE8245C2C313EC5
9BD6C5F625B21D088FD737663538EAD5C8185DB3513C364C054BBF7F35F0B627
DDC5FE2AA948AE738E0A6C4670C92D7236CD1D199C612555168BCFE359EB492A
0ECE784F633E3161FA6E6452ED50E04548108126D3AE5EF9C240EB792EB349A6
84547B6F5E170EBE8408565B1F8768FB56B3F2C98AEFBBC8914D0B4827F3980A
50D39360DC793D9C260F9A68379C031C3F37E0DA0EF472C5E80621E494870178
EF18AA9E830504C86F89D1E697FCEAF6DF385B4B58E7A2A0FE2D47166DC623E9
340B6012508B79112C0E8D91E533070AB9BFAD33B2561867A9E967295E45271D
85FAC12D39F88E87D4554BBD45FF7EF6EB96BB55BF51577D5DB10402948C59B5
D8C75ADA3F1A59CF89484ACFE000A0ABE41BABD286B681E3A88CE3B95FC3F93C
4D68370AA6671A5F1F78D005581EEEDD6C8F062EF60941AF81F91F7A741811A0
E6506B268858170E6AC275036811DB7A567FF505FF67FD240FC417C52C213694
5E34669A4E9E5EF4B84D81DDD1955D1E74C83B03CD1BE8FE2A3A3886527B5A24
8F2F9BB14D0A63C18A71DF9ABF6629458F4B681209FC6A7466F8890CE45D40B1
7A9FEB579AE8983BE16CA7DBACEB44F420BB75AEE13DDEC360ECEA0DB924F0B1
FEDAD31AD6931C635163D3A053653055D0EA5684437515E59E7232F2E0D32A90
550A85C163761B5AABABD0F1CFD790348BDCE1E46E58731E224754FD44B49675
8FDB35B090533C23918A47190434CB351DF139271F8903FB070B0BF7C049F576
638B2AF034C738EFD85CDB54556BC6C7FF68FBD042BBEA757EA7676D23FC0E90
F03456E1231CFB3CC4E2F9A94760FF7862337BB4A2C3A8C8803E49B60712632F
58A479B4A21449B2F252B70C4E6A2E6A34DC95A02346F46CA78C897700C09C21
50FF9F4296940872FB32BDB9A0598941E7DB8D7BD463F63A4C06680D808300C4
9A46FCEF1F7DECECCCFAEE2574665B3F320296399C24EE8AC85E4D7CEA17058F
4CD47D28F91E4442AA7C74A473EEFD5DA78B4F9FBC1A8A55E686B5D85DADC189
F63975298E39DDA8B503E77D5B89E048686ED38F0FA8F9921866133681A61A8A
C7F1F3F766A51DABEDE2DF6AC42219BADCB93BF3783CE603DFF905839DA4BC0A
A8BF128CD1E4C9137482228A2B91A3FE811284970E40C11E882C6FF9260E54AC
35157C4557984EBB5645D175505AFB1AC5CE8B31013891596813FA42C53DC7E3
9ED5DF5D5B049F09A5729640AEA87352E69E4370442D6CA86D083E18D9F88CF8
42BB594E6886ABEF80DED110C73353313F8B58C2D0BAF8BC4BE9FB8CB1F2B597
146838AC021AE1826675A5F7CCD596F31A6055A2E102D54822CCEF7FB704CD23
F12493B0CB7FEAFC9B2C43CDD80C28B47B47B6B134260078203CEEE5712B1434
B56B8EE3C13B4EA7E84D41500E49FBB18163611716154C793F88F4FFB62DEFDC
FE4FB4BA95261AC732DE36879601A3F651E57C3A6EF3743A3A8EC944AEDC806C
29D6E14DB451D15E07EBA402A10FCC02A8746D1A89457A15300C42F87E99BC97
3EF98A453428D2C381A7CF3315A44103BDF543934037781A7CFA7A9CB4335D68
7A58F61800FB46DF8BFE982C7C8890636CDEFDED3CA00B86C57DEF55FC15C69D
4382C1418C66C90D4A6B47B1BE056932F3E94F7B1829AD57AF9DCF94E70A6212
1A46982BC42D9DC234F963A21D117B2109F37383902B4E16617E57B8F15DF4EB
0148F58684686871ED111C0AF0352A8CA1EDC755E7BA3DE63C32C3C2864C63C7
68455B99DC99BB44A74A69B2D48512BA6B21E0272D443F5050DEA499563C06EF
0F64D00E0EDEF714B1C4FE78178D6B9A7B839C2F732427FFC12E379EFC93DD1B
A483A268F0A8FA15A157615893C161837EB98CF3E03F8F7A73729931F71ACD7A
85658536D95C17758EA05A109EFEEFAF689F1F49EFDB2010287E01B0F874BE56
0A1AAD848759AABE0765A712264B5285A06C988D99ABE4202CAEA2276C01CF98
D3F2F36EE30695E3DA16BBB215E47107A17454A4B4234536BFA1677F984E4B51
0BBD233F45464221CD83BB0FFC9D031B2306A19BFDB26B9E623761D24C0BFF7C
9A0F7EE4694A58E5607E195238F06E7E7F6D9B01FE983AD9DCFF798F2ABFC4F3
5313D374461FB5FF8F0AD3E316D1EE10374626F443B447154D25A87AD26E8B77
4C5124D4BE7EDD346C86033ED727B5BFC009F9334C363D74D9022512B07ACCBC
81EBE502D3A47C92AFA99621F49A2787814333C50AAC637307A4E6CDBC99204A
A6AD1374EA7E841F708B963EEBF77B500BCABFC6B32E1230BE38957F577FA071
9481B03E5C611A28CAC19D4B73A35457249326B61602DBA5423C3C1F16DC53AB
95762DFD8F513D6D1AA04E58A43A6591EB08A8F3E33426D988A8BA40DA3F4388
9A1157E15FF959EAF5114269985A8A0A7E8A501C75D4A2BBF4264B4861514CDA
EF78CECC9FC16F7974F498724D86415A03B3CA5D0577ADADEC9EA775DC9C7F8C
E1151E5EAB5DDB34579DADBB6CFCC6ED8239419EDC2CDBF50704CE39D819D28A
90E52AFB038CDAF0561AE24ED6E8D5D6E5D0AAC0858943DD35DF49C4D0829045
56162ACF0563A3933A7CE9D35CE1DB62FD672B2E715CDCAEA934D7233B7658BE
C296A316E93F6337772827989AFFA6856663E6EFFC5239708D5B18D1504855CB
07A04691AA633BD5995BBEE010B455CFAF8D9575608A408039237B1A8B24DE2F
E627E5582244482747726D722E3358A5163F4065B389BB6DFF6156B8DFF94DD2
B8CEC9BAC14F33BF9787B150B9E9CEDEF26D0D00DE39BEDEE391344E2B3EB75F
1E511EB39D7563E18B28804119AA4043CC2E4B5E8189C85E98339B2E9FD0B4AE
A10E8E04BE44489BF4A42AA27DA04D2DC9F36BAD1803E02B4CB67BD3D3E4BC61
F86791B443AD981ED397A0A080646636ABF7B0E03EB7CAF8461A2781F34A0D18
5443AEC997E939AAC716BA6CCA8E7D6653291395C141525CA338B1EEBC7A035B
B8E031E694F9AAD8241B5A21BBDC4B026809E9D28B9FC63F29F6BF484A398152
ABB89CF1C7EAC3587BDF985BD7557839683D5E2ADC89CF698C61B8A963D292B5
0A7B6FE6AF18CD6AAB49ACFF46283F10364F04C80641E48C7E1C1E7ED50C4B0C
EBC7EEC8CD8B0D819F280F9571EC39E647AEFF6B0324D77C75422C200B3BFE49
7538F456F2F40D78F0C47221623AED2354EAE6BC910442FD6CFF8E39369DFD75
1829BB6A4377A647A303C62D9136C896BF115A2F2B686AA227F8C54011AB3E98
8DDBB73E7050B758A3230E2D19A03CB2C7E6212255CA65D7497241A827CFE386
F53081E70188E0769720FEC5E573E4200C0724C8E376CC61C08586487F9033D1
9D19CB2F973549AE03CBB976C9151056EACA082DA887BC7F4E752AC206AE58AE
63FCB3DB48355B3D1870D8E7ED695CAC79C3E5F3CD8A5CEAC7AD25B14D58CFF4
39DB215B9998DC3331FE8B68830117B4ACA0DA4268CEE53B5DADBDD2D7B5BCB2
7BE6F23C92C3A047D7F14D199FBCDD510585509930BAAFB34C82D65703FF540C
8D75BBE57713F532166B6EC19CD9FDFCC69A28AAED8A2F9A3705369CCF74AAEE
07321C0BEA7DC2D8B4977746E623370C82E423A4FF7B1A6D94E090DEEA37CAAB
3DB613AF7E4F87EFE5D2BA42862BEFA1CB71BC1CF1E0273AAC4D03113B2FD8EB
13D2A2DCDBC2B3153127CB3C4D070B704B0558AD8C935BE9ED8D0F033FB40B4C
46804F239DD169CE279FB0B28D20FB881F2131DF3F8EA2A7E25B5868A99C150A
4610C930EECB4B1D4218D9E2C095F2817E10E5C90AF133F3D14AA92AA8E5A3DE
06800B3B5F4E69DF46313AAAE6A52D38EC4D259C7AF37E9AA5C10815F50255EE
81586CF32FE17C005C9A268F0759A15DE2899C7EA43E66721DCB3C2CABAE2E01
8B0F6750A51A35A4DC2C324EAF1A10AB60C06909C7724DDA720A5BF5EDB49DE1
E769059006CD5B6E0E9555876D3D28D04EFFF87BC43B7676E7E368248AA5674B
672B44E9C9D5ED3C6C16DCF63631E2C3ED6E9E5008BE40FA2CB3A107C8184351
4BE471B1543C68A9E69F99375B31592EC5F46033E0978F38B285DD74DC616EF4
5C4C0E678681F8E493B5BB23FC9955CB5906DCD5B48FE67948BFC720905FDA9C
1CCE153ABE404941D99DA572A438A8571686B74A53A5786484884BE23AE98E23
3343DEB101D39E5968BEDC266BF9CCFD672C97DC447B7C78B2EC55AB9FA5DB25
953B4B89397E9B87969D549529861FAEFDC91E015421D4BA9D4A0E5F40A09D9D
1840510271C3A7DBB2BEFF39E511B0E3121D976735BCECBE0ACC5BA7D2BEFF04
E2E86063139B61E2361A03015901FD3A2C541E558CED7557A1B4555B4D973E24
04004F9CD3E32C1302382872B3C31EAD4F0B12986C197850954141C86F555134
1DD0E1819AEB8C04B759C96BCC27446BB5934C2D8EB7C5175D7194F7B4454383
222EDA5A7A950AA6A27C2AC4460C96E245B0F4DE5A8BC373827025253AFD9800
FB1C340E43699B189E43BDAC05BF3DF0BB6FD5B62BC47B2B5A74C7379EB03A3B
8C2D406F5D9554C128487788E183809095E88840F703E9BF997E8A66669191B5
B9C2D22EC26F9B2761469B0EDEE8BA22F0299856B2F59F3C4DC2097CCF7B2FC2
F789BC49E4AB223FC4FDFF11188360AFC84BB2DCD919A160C7AD5BB562CE1ABF
4231141A70530E56A19F37938BC8FE2375FF0822C11D46982BC42D9DC23475C3
97D456E05B2BE7B63E40E49FA463B5D955A864FB6C5A78DC38B8B5007F790F67
F783F02E71203124A14BFC52E9210C8A692DD7C76FC6E52A9C25F8091C4930A6
3A3BDFF5CEE8F285484AE928F6A7F4454579ABD9055CC8CFB01373D9C9B53CF7
EA2CCE9B98E1386A4B21E08EE3469CB1610AB3B66DBB9F135BB2480E67D7AB86
535C7CB519B75D0EC626611795F807B89A0FDB65A794A20569BBC5DE72D9D571
073217387C6B3A6977ECE644A6D6F5BF332EA673D4D7C960873429AC429977FA
42CDB5ACAEF17A5A7A565D1BC82AEEA335B5BDE0712BEF7BB174E02030C1CED8
5B3E3E767526F20D29DCAED0AA9A795BE8861FA849752117650C8F7ED57607F4
8DF2281D782F9939B1432225CA47D4299F3C8EE964FAFD82E425B6DDFABE2DE8
B27ACCC6CBCF63B4FD224A467D8BF58F68DE7987BB55D05CCE29426B09B6A6B8
FEAC5AEC326EB1A2B4511426295EE864FD6544F4E38ADD0EDC24FAF96BF802EC
3337B6BE2E363EAC7C5CA9DDEFA54047FF694E7FA45CAC40D5CABEC2E09D4E77
3618C4D801ACBC15F7D5DE7A1DDE218EF96A6482C7945C26E09FEB93621374BC
FA813A441FFFA1804237EC95D0ABC4CE8ABA7AE79EEAA51106F3145A2755A5C0
240481AAA9AA7CC0A50AC36F1E6C5FF40707901F6FBA4EF70AD8E6897D013A45
784EF0E5FCADC7CD9E7443E3030A677BDC55FA622006CFE4FC8FB35C192A60F3
C3BB0D706A99C64952F30810583E4A0DECC6F92CC1448555773581533DD746A5
664D971FEE5A7F2FB0F5C365F1FE714F03F80D36BA4EB2F17EA48683EC5A9FE9
447EB37A3093F8BC044B71BF1B8450899E2A2B472FDCA669D921F23DE63F4D06
2E034387B064500C857F86A0CC87FCC6F9F43467A5F5C318166F27FBFA72EAE9
6B719C6C8490F6CEB331FA035918C773E2EBEDA6C67A3AD44CC4E8F4AF8FA20D
18544670EEA49E5CB383412461A5CB5799C86458F391AB635C946713DB1A9844
7BC024B5BE29757F8A3432E4D2FC8B6C4CACD47A91F6BF25BF70119F08C472EA
3D37C44D82F7BC0EEFE00925512285CB391F8B74A5D9980925F9E4D23899E26C
64FE79741CE830E93137B95BB1E514EA812E8682C9DFB872C98D7CBE300FA312
7344B03770D1DA540F9DA6926B29BC2A176ADA9BC06D328E5DF63D79EEBCCA89
145762A48379A056A9EE6A5A795927090FE9D838F6655B4857061703E4CF67D9
C25121D628F6E6826764DA3B1EDA5154FB19D6D0E7E49891AF6D79E754DE42D4
E3B8C70568BE5B2A0DF3A582582037BD487F7AD6D8294444F5E93A0D8A5AEF29
FBF9287B75346C3864B99A0C16F468BE1E3146E3DC3F2654AFC64543D4BC3208
43A4BF30E82A78D0E0ADDF369F3D9B1A1CA16D9D51FFEEF04B7AF5F38B219AC8
5754CBAEA46819A8980A28067452810D07BA9A666A041FDC5995DBCACFBF885F
CBA160DD6CE6A7A490C010EC95B4ECFCC3C7A7D26021EC57199E79CC100592B4
2C06C5B8BC73EBA052FAA5311407ADDD4BDB10613A860B136191644CB6F9CBD3
D6037A8683539060782AFAC56389CDE98893AC0F7BEDD9169DC9FCFB3BDE32F3
C81073D386099C1070D7CBAE9BBA72E82EF9914D3AED6D1A55395BDF503F0A0D
5FD35B09EDC1661A7C31BDC1C6F261121BB49D9FE70A9C4D0076715533B2F948
ADF90E8319EAFD40A5C5BBAEA96C1A1EB92AE681289413865BF0135D2FBB7124
45052550944E73B03D45C39AB7DFC251A781C3C2173126E3FDCF7D711DAC380E
4F048050E3FB3B7D2CCBF9A71394B4BFA8CED0C41664DF7B5BBB015C15EF3C6A
B081015A048EA8A5BD31E2FD4A3C65E04F45CFA6BF34F0684DB47B805E2F6077
9FF767AF2CFFAAA7F2FEAB19DA37A526CA38BAF2C8E92056ED8AE3BE873992E2
E32B24012D4D6F088082D695E481FB78B86BAA23A742B4903FF21CB7FCA5E3B9
A0C63F5E1EB4EA79D5318CED5867848F9B3286C3AFADCD0036B012882ABEE024
33AE43AF28A50F8DA7F096E1F86B6D20BA817AB499C1C9E358699DA46C51F1EF
B3D08ED92E1FBB5E49D2CBEF13A7322AF899E46B1154B9E2532DF2741D35F285
D6FA11E7573E1B67746D81233B2C3FADBF033DB25E83B2CE73A0CEE6070D655D
7B640E3DE711B38EDB04756C698991227EBE21BFFF1E4304D1FED3EC7E855EC6
1DDA6C89E780F266191E26638EDEAF429CFBA86FFC5C0E993FCF12ACC5F8CC58
D53D1A83C0538DF2F8252B6B963B85BB230DFA654E8CDA81F01E0CBB7EBEBF98
76CFC52EE5362FAE1C9500C8BE926D0CC551159531DD06E4D7E02762A656C0E6
EEA5F3B77757E92EA2F51BF00B25BF61303C63CA236101B6998D642085D34192
029E08E283462DDB1F1237A1863511927D4E8BCF6DC8AE90B1310AA65E098D67
2C889A8277594958908F5222C54A4974915B9928949EBE8250827161C79D00FD
E2047774D3780928C6208AC397B07355650A476F761BDD8D791C7156E79E92B1
E142879BD9C5AF9C192421E79A5C0C5C4F95B7D02C6FFAF8AA0B6CD12C4B8754
0CAE916296D40373ED646A26F0AF642694D17BC8E931D62A89B65009EBDC8373
B81B66CB20D2DCFBCCD71441E1DE6B1C6FAEB88D16C229D403D80762D56457C8
002F58619CADF95A4E00D17021D9050D76A2B0B11DB205FF310EAECECA9CB04F
B01419FBE81521D352983893DE8F83015AF9E56BEB40D63B5DA0828A5B130634
CF1A43E5DA5B45B5CAB3CB5FEE1661ED76600C9CC02B8AC934A0D8880CD07B79
41610C5A52985EAB36BB50EFF4AAC935E22A0648D1CC1B3F6A73459164D9B10F
022D345127157DCF3752D31C0992BCB768D35ED83C8D21B3ED60B4669E1EFA25
3FC082B0DF92B1175F139CCD692C12AFF153CB405F2243E1F13D801C55355826
1C19629B42E709F0E4A9BE7E3A46EAF7928ABBBEBD782B8D6934B3695DD40228
532A2E48A81A888B6ABAE0823730AB194EBE9ACDD1B98AC77BDB45BBA02FC3CE
FB62AF7CEA5CB249E350F41F047B47E2F2D67EA405BF935E70CAEC62C98783E6
A1E4490B08F522A16A2E8CB5AF593EEB51EF21F61FBB3A4A6C52598E1B29B19F
02E5B3C91A1EF9D7DB01BD8276B73CE5E9924418E5025F9F79BC1AAD0208ACB0
CE04316685304F54925F4947EB6025C566824C8AE99CCFFE78A0635529C2C69D
86690DEBB9EDE1E4088BE476A879CE94608E68033BB9B32722AF9E5DEDF038F2
0D68216024DEB920EED3F823F8BF19D049ACBA95B8C1C947629E03895C5B9462
C73BC50740AD4A6BE24650D569F8F682DD4923059AB6958B62F5729F84364564
7AE43433D678DBC419EFE2BDAA0C27F0F0C389EF2F7E4D217C5252D6A44F303D
A015D2F50ACAF830011878B49E0675CE0DBDE4EC11AFD13D92CD7D8A07B2E78F
EA52B51C319F277F0F4CFB9D165A3F26AFB6ADBA2C03670547B0C4BBE4A91A96
B18501148C6711B234FCE31BC13CF295A0300EAA8850BF83BEF3261FD947E92D
BCDD04BA81C30C076F4699774FCAC8063DEE8CC7442D98DF23B83EAF2ED694B8
7E0ADDF6228F9656B372A89B9D89588F0B3B294D9F776828FC60644CA6555052
689422944E307C673D3EF575DF2B9AE50D71F291A03D39E6A7D2655181154ED0
4869B426048A6D007CE67DFFF561E4BAD09DFDB60820937CA206A716F313182C
04C6847A66EBD4620BD7C051E0704B813CD7E76DE3C67E886EB01B97431CBA32
8526CA6F080176ACB005C5966C6C2C4248C626E6474B902CB5CBA1AC1BA45DCF
4EEA6EBDCD1206243547DBB0C54FCFAD6C3C935E56C071FA9EA5EDF607C61435
992DEA3541A8C0D10C0B97B503F0677601A35722C36EB216A8F4A83F608FF379
88C7DE6AC2AEF4415F98A9888B091B70C0F8D4A12FE68966340EE2C9C7F0AF8D
53B79FF544E8D8DE8F6FD083E3DF1A0208E61CA90B52CC9BD087ADF0F4C64F9E
94CBFAC6F1712083771B3094BF6354F6F246CE81B5AA3BF2C9B2DE7AB2BDE08C
06CA972D5FD8C415526A257154FE1123148D68DC1A80619F155C665F36642574
CEA8C52BA37D1C38296C733FC7489A0FEAFFFE66F57A40E2302CA4D3862451B0
63F1D659AF85A1AD97AE37424DC59853EDF25EDF2BB2FF2587943DFDB4C686CF
3C20B058D9545D612DDE080BBC5B05741B9AF54300B6E76CCFD3E20D65B73012
B130536BDA411916664937FF1A40FECB3FAC3C34CF9EF4889F6AFE5EBB1AEE11
59468BBAC06BACAE0BF00E7312198400B6F7D9B51E305332EB4AD89289FA3EDC
17B48A282F81EB809E2182465999B453178C7BFACB97B9CDB116C32EB9D88187
D7352311454E899742CA29C674A2D9E604A08DAEFEDB5742824D5ABB3DB2F21C
3AE0ECD2F9A0E74436A60D95C46B3D67DB3790FD42685214065096F9A56ACDA4
D837974BC56CF64FBF0DD4B5CF8A350B595CBF3C6DDBA24C173698C4CFBCECC0
18BC646B893954D102C311672ACCED5D7A735EADCE759045D070FA1848148CEF
6B9E9FAD973FD4F542602AD1A408310A5B366A1FDB1B72A5C10512806F31AD3F
177621F4A214845AADE10FEEDB71B00638BEE27B213DF7B93AB60122C5F1823E
BD46661FBCBA022552BB61AE4C4FAE632762C6E7846A73146ABD0E22054852E3
BC25A360CC14C723262A3846A894BCD9FF00938B787CD363A398058A2431646C
B78105201E9F8608C1A150C135E69566775AE568E3CE117168171D9B23361D6B
493BD9DF382B77DB725E98A8DCD66B467C8A233DF874911F74366983E8EBB2BD
2F2C03FE2C63B1708B7866DD9E8FD9C6F90676BDCA4036588A4234FC70CC583D
630C563D9C33FCE5BF7549CAB47F04B1EA08868E70382C4A93009F3FC2CFB4E4
92037775B4043610A948A5470915C7BA8839E8A1B2A48291F051DB2AF666D787
FE0BA3287D2C3E36F76D0DCE3B3E502A462DDB5B46610E9F323CD7F2E7B031A3
50A52D188FE32A78DF9D93DB01FA223DC56F44C956277D4FA178ACB8D6588176
8D33B513611DBE08132F2244AB88350B2F1269F24E381FC474D6BDEF61DACE9B
BAA98B29F35B751205610D875B242656F2443D0BBF74CCB0D7016D25BACFCC95
E5D643B1C5330AE7F73FC05DF2032660685070D6D5F0619150EDA68E408A503A
AA098D1D02211FFF8A53E4804BD044AA72026D1C427FC2343D58E1E72A6F2DBC
A9E50EB56E29C78C973B0BCA7C41CE9548EEF4587F8466E893895DBFFFB06068
463EA6FDC907AC443B847C41FA8C62794CFE4A21774E6CFA2883F0A403FD4435
E9AE3C299EA01EAED0053F0604F4654B7A07EBD7AA1C39739AF3A2DCB38D0E04
28E67D593433EA127FF5A3A2EA38C4C87B5870BFAEC9B1FA5421B6DE423A1EF2
2B2D0A83C48263F887FD33B797CC36741BA4EF832E7D6DF3E991F1FEBCA577F7
8D0F0740A078BD25B8C2FC0B87259362BF1999B6EB8154108DF99A9728E18C9A
A94A9D61BFFFED434C8FA5CCA820A1DF65EA77D9E9002856D92FC448A32CCC0C
0A6953C048A496CEA4849D1390864C4D9DAC8261FC146891B1631866623B42AE
DC3321E95D9D76C8A12E7009F4D2616392FF2184082A6ABBC6F62F1EE0DD4802
B0B09C98A463E241380B1E461C5432AAC498FC2F795EC78742FEFCE44B763DB7
9E2F64394166D3A6287121AA60543F3470B8291FB6D081C7140CC128F24D36ED
DE6407E8DA6DD2FA0561A8547D486BABB2883B365638B4ADF0401086037D81FB
86BA77EC41DBACE2821A7A9D742BD774F9E5E43080815FA690E05E0B29B3B092
C99FEB3435C323F1DEAE6AA0DFF8B239874FFE20FF29B19C23EC2CE199CFA553
8D3D119B2621FDD96C56AD4770EB7BAB0A16230EABCE8E82371452C0FBC19325
3F7B0AD09342E891FA62D435F3797E518536C612D394645CC2D2ED8AFC49C2EE
3F655233CFBECD276D2F4866FC0A52692050652104D023FA7B3293C73FB1665E
7869D6C8D142BACF39944FB22E22086C2D977A78085D736F96CEF72C40156EDD
32B53938454B6C50A80664F4BF13E2B80643A7E2F02732CE58012FD29FE236E7
1AECD6A1C355108B2FEFA930C25B6C0A7DEA262569416202C10F532327B19741
419DAEE69D70D010C78604D6323E82688ACFE4B44B110CBE3E1966C80787F35E
ABBA457C69DE0EB1187C1B15A8156A6823A89D0C478B7D82C2DE792B24CCF12E
488A3F223E66E95F0799B545704A546A9A1AEA597C5B9BC384B514CCC95BD7FF
259986D7914CC221130B3D921C53B64476996DE2BB6DBA58B1F6E340B6F9B0D8
C23C55071C6FD91724CC1CE68A1ED02E6E6A3C6A48941DA919530B3ADC5C4A95
11AF2EFB585FFDB4761525CB3C28CAD4349BEA7B0E3FD7BA9C14313FA76F60F6
C057F86990D94315BCFE197921AE3383BB89F311F38E8043FA363DCA07A10518
889100E693C1BC5904C3D7311225F94FB7236008E70387C61E5641320F1BC615
E42A93319A173EF7382400B29E881B1FBAA93E7378C05B62DC00622A9A0750AC
8D901BB47DE5D3C0831E425C77C80AA98075D2DBBDCC18A1648DEE6330161E99
676695FEC4E3F95BCAFAA38306624957B776AB473603D7E90B8A1E4D0A0BAE98
4A640395D2132A1E8B67B2BA815EC19B93364532CE3EE33561D8F1ED24AEAB2F
8234455ED4B8B31D8318CD130575F808F867FE19EFB28C87E74C94EA2A0CFE89
406F4012A3A6028ED2B8E7D34339EFDA4DF5B3FDF838565E0767B8F9BD9F4C10
B1CA1196BC062E04A4E5BDC05847516E84F1F1088A69A2B74058822221B090CC
B46C0A897DC1B478AF69608C3DFDF5EC927C6E79972AD10D4E89969D911E78F9
90231066888CC3CA21D9B855B94193063087D834EE24B62FFAB0707D077B760C
CBBAA33C6B6D09F21770D3FF36D19AB569AD0865E26C9F0048B1100AD5B23B94
2847FDE355DB3C39956F9F914DBE112C8395F7BEC3134C59FAE8DB8EFA707B43
D3EBA7D9183C5C6D7A02FE121C6CF638019FA59777873D64A78C27A3B3FEC6DB
1C4DE6DB087505FCEF1F9B02140BE8ABEB6F65EA1BC5C76FAE3F63451E590D57
0C4114F3764154D32D5724ADB889F83B3CAD0059962537F54A141B32A07C73C9
2F7E2C77088084DBC9AABCC72CAFAED1EB81A0B8C89D6E8615BCD0E6CFFE07F5
2CA73D9223465F271065C2143614C0F134583016DC93548B508AF129D49414AE
0CBC2D312B443B447D775ABCB37D5B2E484CD7AE194681AA60A30C73039D9285
DAEB0115E4AE5D03C35114C2BD09A1C184648E2B87BD3D86732452214E700551
0DDF5F456F6AA7054ACB75A439268479552A5D4F821DCD1DF5EB38518CEC7794
1EE8A8C56168E40CF97FC1DFB199C117A437AD68154D881861C6FB7890EAD1F1
FB02B3052D57E0A196D739DE6FD5CD54121584E05CA924D79AF21C45FB12D945
A10E071416F35CF4FAB7E943ECEFA53F6F3A646742494D138F44746CDE55D86E
AAF1B4EDAF836012F1BA77AE85A0B9EECAC1D8EE63F77FF6700D341E85D440B5
3887FC5DCEB3FF2C06EE776A4C649AC839E290927DF994271B1F39BBAA365689
21C5DF387D76FC4151B1990BB8EAF18B3537C1B1EF54E133B6DB0B461061063F
9908D726BD19F2DCCA5D246BD5018D23871A0C36E0E9313F4B618D53AF749498
DB5F75ED2150488D83FF03290B53159E437A6808F28E4F0FDB78E372B0D40204
D0E646156C50A6FC4CBB71982EFDE1D60E9A3012F7CBDCBC1491ACFF55BFFB7C
4E8E74A754DAEEC62F0FA660C7B4FF38D540372CD58A32CEFE8C5CE797A32768
5993329C59DE286236367D3FD620EE98E4164E841F99C82D3C19EAB7BD49EEFB
EB6ECB9C6CACC7FB38AECDEA91251673C386FC720453C672C6B76E27BA903093
EB2498B8E171E89727AB5FF346430D605B4360A218584C22ECDD4DE17AC4FB78
9C7531FB0384BEA0B3D464644727B8F998C282868642E9F40797906D68724768
33B252DE23B1A21703E7389A1FDB3F30FFDFAB8173B6160F9F7B3736683393F5
5E3880C1D4A55F1DCA50D8EFDB354F6605B75B5F8273824DF04749B43EC18594
414482BD684B190468BFB7B9D0639AC754EECB028F93FC3751293B00E600570C
DE753241C425874A8CC6004D041C5E0BD1F869D2C9016445144AC2E281C80866
C6CE45BD558ABBE867581C1193EF02526ABB9062310BE7749C8944219CEDC015
445893B5B5EF837DA58F1C79145B21EBADB32257428D0E9DA501524CD28C0030
3A6879F7154DA64CF709ED8BA8CE852E3CAE46D3F482355E947D18B66312AD31
9E78839E3C2111A05DF18DDEC2EA771A3852812F638909E34F824317E8766999
D17EAC8B28132D2BCC0482666F77BCE8BCBE2D8EA485D5BCEF24DBBFD388AB27
E6B251FD4CF4FD2543B7E6F394D3D262DDCE224ADAFE8EE2EEAFEC10ECA86DBC
D675244FA279980B91B1C0EB78660C06E7682033B4376512D85F65AD30E430DC
A35240277F5C32166AB539082917BFF7EF652D589681C73E5F180966B29031A7
9FE3A1CCDAE03EE8CF0E20E7D11DB879BE1079D76A018F871EF6F8CF3DB923D5
49EA484AE6C211161F1E96FAF30510796F922E69F5EA83BF84FB1639C0C1ED72
8808427CE96611D1F832FA6DB2B87B41031FBF89A8CFE1BD96B21D6EAD9E432F
761AE694105917B168927E4925532684A429F690536B79F694C12AEDDFA88B02
82F50FD1EB2568CC35D8A54FFA0388348CF6CC6DE5C7AD5A8F0F05210CD908AA
7B6F582F60F9AFD434E5D617A93CDA0960657CC231C6F1D98278F2222F80E1C8
22E7774D2E36B7DC679E91F344E2181C9631F693E7932A5E64E2E417C6B64D84
B19F7C2D7C143E287DCFEEECBA619FA6C38D9D27307FAC14429AB8FA9A5FA228
A2B681F0C590D7FB9E51E09C85C5BCDE30D15CD9ABEE1D19AF3C96D8B886441B
1B129C103CE971961454C2167F979DC0DF7EE8E51C4BF6C70BC794C6BBE8A2AF
2331603DF05B3CC7E5AB7C0429084ECFCEBD777E6FB6059BB3B380BD963108B9
32CAFAE6923E976F786DEDB9CDE0AD5767D18142144D77BAB2ED0A4447580C3A
67A909F55A15ADC71206D284543B6B22F3D56B15719B27BFBBA6DDA3D3B50E94
D207123A5B05FCAB7FD90E2A9A4EB7F369292ED9D9954D71AF0B943E3C6B83B8
2EC62BBD305B6E98453B144FDC93E5DD2F33705FA9D7CFB97ECCA0DE5ADF73CC
036BA1DC8D789B86226E38B0DB3AFD189212A8F22577348A88CC361FF06E1899
D56166D4ACDC756B28E4DDD09FE551F142955865C56235E3E96DDAD9059A3D7F
B88CD35AD0DD4D5C448A64ED5B178CDEBD3FF06B9FBF62FB12E2AE42B9DA7337
8141C0D5E654A70AAA337DAD48304087B74E5EEF8C648298FD3614AE6E22889D
40FFB6EE0B0A7D7021193669ACD75FBC7A329420540B09C0205E1643E30046E8
77FDF1153F9744EEB176A33F61906C36C88138CBDFE286E1376DDCF1334C2EEA
484A3362E9F3775CAEDAD951B0E0A09CC858785F2D7FA0BAB86CB37A5DAC995C
0C83A5101460A56E8A64CBC393D9FC760927D9460E7953FBF47D58FC0C3959CC
E41620E83C8ED3A0D56172F9DACF2D7FA77AE29F55EDC36EA1209C8BD4C56773
E310C56ACEE39DC54D61D6DEF2B38AD587898961F18F7C2B8810D01FF403AD61
29A6B566CFC73005671178E79B19306AF4B343BB10D66490603F32CF841E1C5D
EA29F7429EACD15291C1DF777D15794C0383816056FA7384BB45DC7B165DEB42
C5ACE7ABEA5FC37D43B5D4CABD25CC517028E25537DCE2528E83EC4773BBA800
92B2A70D4A4D1F92E4582AA955CFF7718F18820AACBDB2BF4E977595BB29DD23
1BA240D43864442754089BD49AF82EDF8C8EA73FE41BC9A94C7C4AE6CBCD9414
E45E92C76B68EF1C4688DAE073EEB636927885DF1D3AFF4BF6EE7EE1FF68AC9F
653E1C13882FB2B1E9F454C2F504EA4E8F638C8C9E180AE76CE04F72FD23A3C2
36080ACC735BEFEA736F159B035A561C376465F9331E5C7BDD1DA502EB9AC144
074C3B78058725777666DE7703EAC3383DC1074B6A86AC10868D2FC5921E730C
933978FD31061251AD3551F260D47645B8A718653D7665C79B220005CBEDC0AD
76F5DBA665F885113CD2E239B65D0E985B783590ADF0BAAD4121F47D4750A550
1018DB4BDD5B64DF6A6F8C0A78F352DE28FB8FEA0015CC28BA9335A593116461
960798C241E6295881A5A2660D5D253DF6AA998ED75545224A93C81AF1E108AA
75CBB741E74C47F8B20547A2A7CB343F00B281D1B8F9938DC2FD8EB501E49618
2B15C3BC6F0B76A496FE37B34D462E79BDFB28B4401DD4CF50A0F4B56018B3A4
97CA632CE61475D3419B22BA82B6E4A48F905FDBD99500B569F8254D556F1DB8
11384DE04E7AB5E7C4F285F9BD614A00DE6825572189A19315AD3F2E16A20FBB
4489E38DD4A5C259786822401AB64F51D8FFE3E207B003F88D68139F4B520559
8DBDAAFDFF5A778CB1F59EBBC14ED7BC71D669091521BF6739131AAC938E185D
F0BE682193E60B2B5FED8BF8541250B992E39AEA7F9A7F928108402DF39C62DA
2EAE8BCAF81DBFDDD3C8F094B55540E870497A23620FE7F21F1CA698A994BE07
3FA0799897DC22385D1C16EB13D1F7C524C89B8DEA2FA2CC23650C429AF024EF
5EC2592A32E90CF70EF4A1C2FF0C19E72FC8AE9D835BE39DF765ADAAA523C72A
6539CF1D7732019B86C11D799B79F33BB09CB6771F637CAC938D44CE6AA5B6D9
2365D2EBD0B357D962770F37D5543F94A929D3FC55C12E99857D1CE11333FF9E
C1DAE439E445D7F9EC6044F952A4EF7793A93392B155AC7333E15A574DE45CCD
5696B9064B6EA091232BBA1C539DC51A6CC466740CB6558CFB4AC98BD8AEA021
2258A4E8855732DD7DC86ADDA196DF635C026BF08CFCCFEE48E79225D2B31794
C54A4521715605F2249996358036FEA4F29B2D380E5D2E4AA98A5781F2DA445F
3C7A48514F4A6E7EFCB1F3265C15D2476E269019155C6B23EAA0374AF59FF5CD
140415A81BD80DAA2167BC2938EDB6F4F929C884BB08AF67A8FB40452BDF2419
D6F7A557A16A3FC968F93D6E03DA4AE6273DA112AD94A0FE79E0E03461C073EA
895F196B6CE67D092A699F1B16C86E87457D68EF84DB141BC12E245CC91EF41B
8178DE4DE4671C24B2F2CE430F725009112816CA0F1BFCF3E0AABD6E28F91A54
F29EB0FE77777DBFFEF862CC94CE8047169DB0C939EB45253B4022AB3359D2EB
B743BEA31D6FB00CF4AFE5BDA993616660D1BC6A8E77C180BB5751DEF6778B7E
4FB07ECE69B6C047DEBE3E904FF1F6CAB5AE05F9647AC6056E17BF974CE08960
470F56DAD42A79925273A4D397105BB491AC49E08AD9DF0272752554A64B1115
D5205891AF008F869D7AF5E4EF1989FD377E972211E9311848F1B064872B7589
99AF2F243705101C7A064E87FF168A700D04A7303BBC67E6A2F4D86D0A6908B6
AA59B22403C1F1B08901EBE7607A0A86C523C36EE37B065EB8D4B130E3CCCEA5
DE4B9343E6A8C7E2A66F93C92760B9006982512AD84206EC6AE649FBB76F5554
4DBE22C7E738D32AF7DCA935D432C0A75D7C5FB8D1CE77EA33AC3C8D15D4C5B1
BB64AEAB28275C745AF1AE9BF51BC067C3C0370A396DCC8D6565A29B18C26AE7
DBDE4B95661BF5608D312067F7670E187814A2A8A21766857DE5B2B016A40D77
E2CD94934754BECB5F9DEE243E6B7604C03B50EBFE855287BF4FBB58767ECA3A
E7C19A355144ED12C1A6BAAE2A91C6569361FE56BABC4DE08C2707A202523362
A7CC09D59674B43D3859F22E0BD443A84376CF5E4B4EEF77AADDF29B05F5146A
CB02125CA047751CF9792A48883B1D4EEE04C33A821183C5829047451963A72D
7D6259F6C38CD5D5589D89FA7858934B93C54D5097A6EA4C22535F2DDB07AA4C
ADAB0C51B6B38A3DD734B782B4EF3ACD08428D73EADCB9AED08048633D26E6EB
E44E0FBCCA2507545BCC2C8A137FC8CEC6F49386478279D6DD456A4351297FF3
2AD141B5A50A3F5E9A8CF0D1FE126F691712CF45519975DF16306154B2EAB769
96E1D85CB9B692CE1A48687742F2BC8D3EF9E5E5FEFF2DB5DEAA1D6BFE49AB79
55B7A0C977A4A3B2ECC1388304F88CDBB61984DB891EF530655DA57D77361AA0
001087A69E7264AA86711BFE9E0D57113D36B38EB34EC490FA521A36177F9BCB
70F57BE91C36F9059109F8A459E09B1244D5DCB7628E2C6B5425F03AD864D91E
7ABCE6EE8EFFCD9367FD9599EE82D9D404D0FB481F7C6D4EF01FBAD249C4C28B
8F2C0E2A6A30FA9B54D97E9CC773A3E4B0297C06B3069C83FCADE33775C1E315
F4C378F328576A14754EAE6142F4DFBDC0FD206AC7EB8D89346CDF7965F794F2
413A879597AFAA4F5E3AE4C9037EA7E7968893EE459305CCDF2E0306964FB00A
041CC7E1EB73071EF8E258EEE282D6BA17D756270B0B6FB1984A91645324ACA1
9E4F5378B00283F498C1F81385E68AFE715DE985E9BCF10458683408A274C7AA
25BBEFBAA1811F0F3E90C3AFBCCD8907434A6A841945BCD15E0C909B2CAD19E9
E3489F5639CDFDEE75CAA1A694411FA66603ADE8ACD18FEAC4C1B605E4418511
EC8678C2EA6EF23955F720CC2A7DB3636CE826CB2F28CD1F38230A826AC42C46
0A6F3FB44A98F33F3926744F012E093040F0AADBFF05FAE465539487A6E32429
3C1649D86274607B090591A714B51F6CF3DBC70E209D260ECE129D061F469F3C
112E256174AD96F20B262576F1378439DA05AD4AD417D3E8379D76341C8CA518
95C0BE55AE06EC17E541DFA11D6B7E3F65D45C3FE82C36ABA645502FB0E1BB9B
B66581F4EE64D98DF97EE2923BEE1010D5387709E721E591E17F92FFBF66F2D9
9CE071C3737E44B95993DBAB42998AB569506E836F0DF8C7262A4948AAF93548
45CB093C082B66173BA1227DB2965C78D92CA3B7C65476DE92DD9978F8A06342
869329971D0B6E360E59C09E60DE34760533156244205FC262DBBD41039D6C2D
64ABED5250E447B439A09CA14306F0B09EC56F53E02CCE58C02D8B028A94E057
AD676D563ABB173E6BFC12FD44B5ED710334EDACE1C49C0657DB674614E7F00F
F31523EBB91F1AB1F17295B545D423641A0A1BA20BCCACDC3E8DDF13A2B8722D
AFED297763E9767FDFAE80A65D2686C205A83287A72227AE7A35C5003C4B6487
6A5991788559160D276FB8B2F4A2FD3604045B576E5784BCA0686D5999F9DF5E
D061B8AB78396FA7FD490A75887D02620CD0AB8A9646BD86ECEE1870927ECA7E
325C4D0060D8279ACD0F0EB23DA56B26CF8B51A6A88FD2686BC1260DABD41075
48AFEF694644C58FDF7047B66FCB3F3FA5D4E28E328913E22602128924B04DCB
015D521DC3D1E38242EA2C2D29D5B2221E00E3825DA7B1B58CB4DE5BF95D9A0F
DF01DC5A65ACF553F6B03D2F2FA7E32FFFB0580D75F5873A6F37A70112F38FC6
7A3DFB7EFAAFE3692C7D402384543F91647AC14E7625D8FFD53F2B4CB408E1D3
EB4868F909497BC11DC5AF98CB545C05F98041C13A2A988C4347624591F4CC54
864EA1F36FF31A3D233F57BCBE9E8E5B9D525C1A64F4481CCB0E8DABE2E4E9AA
FFF2559F3C97B76E68CC2F63A2F566B2C96B1115CAB4D4C38D1D313919918F01
5709454590504DFA71CED4C5F4FBADDA13A2BA355A5F7101785028C86D1A3F09
A9FD2CC596B6A7E2BC5BBEB8E870D8B017145E3718501536B2A279D18DA0AE82
BD8FEFEAF1FAC737138309A83AAF27B480BF76207B54B973C1C38CD576AEB8E7
DDB5FF836B6E06492EF352E946A9C63B0FA85A62018421239F6E77BA8553D38F
5DDC3BBA41CEB487802B41D0895A9D488C9664D7E4C90017EAF6EC4E1413A81A
1763E4217B80B56E774758831029900B0168E0C1494E210003F0282B79BC3FA1
308A7373CC592780D5E7AF091DDAAB83120CE1DDFA25E02A41BA163EF16835BF
D81C315B68B367152E4E859AD5517ABB74A6B815413C880979A0392D5BB3A2E4
1E0BF09C743DB41E01ACAF48D60822A02433605000F978F95CE8C8E053E3230F
2BF34B8C7EFB7B0F4B93195C448FBEC2C92B7F811B207C664A2E7864212AA8AE
C303949FED58C4146F245D178DDA752CCE6508E7951101AE110C388DDA056EDA
5C37FC48E9083EFB8D9460DD33E725D4A89FAD669400855665D3D07EBF7EC629
6811AB386ECB60BCD79082D6663E0688DF3FCD7BC5F9931BC89747671EBB57A1
40C0BB7736F071A8491EF820E0E400838F71878505A5122522DD70B71E558CFD
F9D8437F51F72CB41C3921AB839C4CB1145EF623B8B4C08BFB5B842E820311C5
56D00EC00DF875AC8C3EC736F40A5517813ED4409A689EFEA26ECB145E7E6C7D
4027A2CADAEE643F08F405CCEE0D2176428E45DD0700E722B5D27663E48BD3E7
B8CAD64BE485D1F92ACF82797AC221ED2CD78663EE0AC4E5CC764FE479CE1F7F
1E097A3C09F40396FE7EFD14C9B2929A9957AA6EF1BFAE702BF81BCEB47A88F4
E78736EFAF6A833E441E196A13C85403A396C5E0F0AAC22E8CCE88961C9320C7
CA5CB273A8B178027E3D23B3B15DBB309F94B8EE0BCE8F7AC4A4FCB279C03732
F465EE50C34C2F23C7F889F0B53FB07AB5935C09D15A21E138D2104A19643CE0
215D31F9D1527D305A4C116A09BB7F320F0C76BEAD0F7FF3FFB704F3F5C356E9
9347DFD4C23B3511E7AAD2048CEC24861DDB0654B4BD671BD202DF9BCBC766E9
8C5D614EDC8BF41C6B143B7C6C104735889661770DA0C7922DDBDE951ECB705C
5F377A4E8C688552A1170BD216209890529F157C09164B83D6A9C7A7B81FDCD8
41EC5F3C58F776FE2F74E295F42A411D26C485CAD3C962A3949CC302F2A05428
A75310316B38E6AE1D4EFA9561CF1B959B0B08D3E161C8A0467688BCE218E364
B6F0DCF3E8E3FE95C1C4B48A7F0319CAEBA952B435DA3D143C7EB6E1E8FA275E
28277F065C1BD38A96A1E2466FE1F8FA1CEE4D60534483C835F95F1FB8226755
ABED1EC30550DAF017223EDCC83CF9BCCDB6C5D97EE254FE210351729A563437
FCDA6645F8C8C75F8D4CD42D01AF2BA86BDFC77AA12A3988106FBD721019ED21
0FB8908144D10F368462386AB4F0EA1A10F4163E595A6B86C20ABE5A9C16F391
C2BF89672C4F9637E39C967F120A410C2A845E97F946C8DDD45659AB5313738B
C9EE6B8E3B0C6A7F344E8B4BE9663633EF1CEB6294298584F84884C85DA8FCA0
549F3C6DD062A5112CE130F81031C80741BCFC905279685AB1CAA83BAA3E755A
1FCEFC75E8A76D1DF58869D4FB893803D61BD9D1B672171E64817EE269FC2E0E
6CB71D6DAC87C4E66DC9FD2310C09DE3B41A0C8F0B172518F8DEE14A3BB7419E
AA7EFDC2A10F0F9F83608E04041833E930B64A8DA76404D76978B921AAF14D69
ED7AED91050D1AAA0DC0B86873FC3EFD3D124EAD66234D1A99321FB6498F58C3
C8FCD62D63853DC39F7BC72E157BA9756C129065550D0B73979DB3E5CBE30562
A45355157344EAB552F69D2E35612DF209B14738BAE6CAD8B25E017741C1FDEC
0FDD36E815F3DDF017C753FE70A3F8A1159740AB72FDE199DAB9A7E6A850E5BB
F05D12ACD2C90A5DBC537E0B719923B88D876881F9A8E618ABBF97E0E4076939
F7F826FE88A17816608780E15E04CCA63BEEC7EFBF106C6963DA70666CE03603
B85A495A3451F911023327BE843E3306BA230DF0AC10CCC462335D2B2D336F82
6DA7A92BC8ADE6AAF71D3A1D1FB206A0E871A88D89F8FF592D01D0CC0C1AEB2D
812382790C166149BFFF265FE18712C06F9DEFCD426580EF934C7B394FE23E6C
46D30C84259F65ED04C729EE0ED47A0E486B090F5A01C7B35DC82D51902775F3
36E54DECA6666F623A65FCF4D18EDFF2A1283F9CE523D03C84C9F7BD0B731BF8
72EB78A4B1F77F34AD0E83ECF46B0E44D4F27F9BD39E7AE32EFC6B1524DB2F05
5F5DE9739A89E43D3FC8F4F0BA030E0800EA9F2C66500DD969AF01F6A28A1D5F
1FD9BDA46D469596DE55709D9BB2DAD306B8206D97E4C59DD6C2E7E5BA4D3D90
AF601FCF3C3D29491E60BDC6654311E3F572CA73E4E558E21F45D921E332503C
48D06F0DE005BB5680EBA27DC1FB82F0FC707E8C95768AA8502861671C973C57
84148F7282766A951D28318642848D33F74830310171C4407467035430F9252C
6A8B65E5C5355309C013709325733256CB81759EEDA1AE508E7D682BA75D9EE9
E907795E6A3E2746A092BBE60678068F95DE0B85C93F1A1CA8D0629B6DFA9726
6FA198C5C650383E4F95738CB4147CF0706E3864E9B697DC3AB8697D2DB29A40
D4C796EB56E979F4FC8EB904F28F82AB46DEF47955B1395D8CC1A690EBE8DA35
E5126A0D1195F618C50CB4C03DB4B79618AD563CCB59D6AA3E61A759C707BD7D
B96A5003B16F018A49AF9683A76C8530EF82475323484999A214FF9BA3280D9F
3320A3FA5E1BA9FAD7B760F1C2CAB6FEBEB0B986FCD88B70B5DF84BC668EFE84
55E7A22A1C2D079082B4CF650FFBB494696519CBC7330A7988DD1BEF298D7237
8B9785B016940A3AC904C172F31A5F450F43C69048D0C7E85724A2DD971321DC
10D9357C427457BDD5F02C552EB6E876639FAF5ABA5D960C14A39C56A6F797F1
44F37643FBA69980718C283B9639F2141E13421037FBB4EE1FCD23F86072421F
28C365F2FA4A674267A9495DD17AAABE8E99368955788EA485AC4BB3147C0732
2F9720C994187E003180D3BF67CADB40B5FCA1F446A3B5C87F1C0EC55C97DEBA
3713FB27731EB2D56BD8D0F93752D1BB6B92262B529E834A7C9147AFB6736BEA
067D87A4286FCA16F96E415B8028ADBDD73447320FFB4C022E37BA6DAB89F2F2
8224CF8FBF8AB0F5402EA4987922E0CFAC1D88A89A47EE6D61AEB7E6A9C33F66
107E03DE5F5DEA81A7DA74F1D25C5C531A91D98E5228D62F2601084901DECBCC
B56160A78CDBCCCB1F1740422B47A1CAC4CF26E4BC3AF7DE3B00C5C72414691F
AD6661763CCB1CD897B4F8A6EDB65368E489F5D4DED9725B4BBEE829DEC0390E
A31A19C80B729534A7C43A1C1E1025C74C9F1E6004F3F4E23D12C7026CC8FAFA
BF090D7271363083E9B880E308AF4152FA5E91AE73C35E840782E59481DEF6C1
17C0FC3EB345B5B355D4341B6E1E7217425498FDD344416CA6411F552E9F69CF
7A6D4C533B1EC8E53AFC8FD9C85B10D8DC24AF8AB783CD988312912853625433
F510DCB22F85FA6B227D418EB8A9D86A8CB242174EDB7D78A703FB087A5009B1
8BE47DFD4C70693A5E030BA1651A65A2DCF556326DEE7842D08AF1A038D24FF9
7CE81BB8297231F84536ACDB8BFC40993EA572CF1B50C3F3E550C694A47CD061
2CAE99DBE3C986D75F34BD9DD6D1B4AD587AB4AC0B56D81C120A651978F3E3A0
5F05F21E123C52C4B8220B58A17C4BB88B2E644F68BFCA2389B4A08874308F26
AA96B917F2E89E5FEDDBEA67C57EE0CC9DB6D8C978F06B11E1661F5A85CB68E1
A46FC0A5F2C3BFA803EE15DC266F1AABDBCBA5ADFDC724477941AC37002BA10C
C9CB343D240ACF70ED57286378D36024FF2C4AB489D3633177E1D2C7553B64ED
9F26B62DF1B10CDDDEFDB56566E9919CACE7A8CAD7EAFD0746960B4660BF1D3C
0326300765E36DA44DE0154738DE06439AD85B2A72C5AB2789A33A4353C66D93
C5A267AC75C0445831AC0F31CD4D402473FAB09E3352F385C43F8F0955297909
F0ECA39A143C66D5F9BD34BD195096C9A611B98DE4C12105B4FDB62097D2223C
8808767F3D017FAF2DB4C53472A64311C461B524408AEA3A9E77412D212A52D3
3A1515DE15D08C193CCC629703771CB2AE1E5B5D160569148CB2C9A768596A4F
29DDC79C2175040DB1A812D4B909BACE05CE4A8BDD99946EE0A753B116DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D5051181
315AEF884EABB76C5B134E7E0185E7D59A2DA456CEDC82C054F197229990E895
ABB45C025940C558D4C98C6764B00D6917766CABAAEE890025CF7C0B1A6BD5BF
1F8E62D380C7849CDF06492BEC78C972A98021D66F223A6ED2EAE1534A139466
F7F62EFEBAF59A172E7C399C813547B1174FD1466D192A347B619FE60CDF648F
9677A2701944FEE0E51FD5BEB50150988EBDD1C6675850CA8195A4F9FA9C539B
62C9F3019C78B37BCD3ABDE1B6311841D1AE49B25DC4E08F2A682C242228AFA6
1AF0CD189032F366A8DCB1D7AD693800291BCB34E32BCC992E344325F1757BA5
312E5193CAEA8F49830D02D190D9DF976A61A562F9404F57C0C4C88BD64C4E27
19B656775EDB72638D3F81F7C273201A866536E455994F1CF33D6E9A491BDE96
E9C52149EB408963A405CAD6534045E522B942AEAF82C8980B58AEEA6438FDFB
F844D3F3DAEE8993C4BBFF2A38AAD0B9883B4F934921208A8E3BB6AB8E46CC64
67E39C0E07DD9D43B97980B06BBC57317F747D285E167F2312DA7F2B295D6888
2DD8426855E172DE269EEA7C226DBD273E948BEC01D41F85EEFE7F70FCABFB8A
49B81F882216DC13BBE956F2AA445D381257D2860D53F7EF2B2761689179F56B
FD37897D8542A37C38154A30290176B3A407F798FDFCA99114160AFA65C41591
8E38C7687BB5AB5A7B64FB9DB341259AE8360CD75E9763A4FE7D782502CF1785
9EADF98F93C6D3E02E763B16D297EC0EF689DDCB6281B4932A4DFB0BDDFC4421
64A9C2C34416C3E10DD4A10AD1941B5126E0DC86B790B23DF75782AF6603E7BE
FE4A26BDF0B1D764E57ABBCD79E61E60698242C7566FBFF98510EC6F1A44EF78
B9B7E406CB75B3105C75D53DA021FF8E3FB5B4C7E86616C303181A9F3221F95D
6D71D741A086664042811515896D10CC8A000085910CF5CC9590B7D68964B149
B6AC7F417CAEC447BDC40D7C2578E98F57B682FA38D405BC9AE7F55536B5718E
007BAE00E114BF24A21F8303E52D6EEF2AED87FDFFEFE7DC12E3C12987B6815D
63F8D1A0204F8E20FD7C4CD46FDDD4D7A6DF949E3964ACC11DABA46F28060B71
9DB3E03AE05E87C975A273771D1F1AE773380F04AF69BF8C1D0E1926364D03AE
3ED094CA7A5349FE68E1BE504B24112F4D303E42654A6988E0B1DEE5DB593D60
26768653EF4BEC713CBFB8D8D035FA484F3E1769C0E263B267C4796DEC807C60
923D0DAED5C9C206BA5F2E78DFC2EF0B60FCF40BD9C5D2BD66733EF0C73D6641
6D97E67564CAF126114EB192FF8ADE968E349A2964FDDFCC9D249F31246BED01
E5EACEEC8D6F6991515596073D4BC9355C52404A566AC79D2E0B4A7FF109FD3C
CF2EDFFD36305B8446677F36E52018C8EEE7924ACD4154E2D47C4D4EB6A794BE
981CDA2C9A64DB76ACF9C422E611432B2C7E9AB7642C208B1BAEB1AE7E747192
CE55CDEB70640C903B1A970D6CC7B70FDC7963AFC828592F3D2F00C58CEF8DA5
598618A36CAE3C555A9348813110D6775292B627A1E5D5D3DCDBFA951E17321B
8CD1CD8722BEF7A995CAC5A5F3F024F32C9730D7E32952D7502FA2071B1952A9
F9A63CA32729A6C2913F8E6E4C10E36215B7FB3DE780D9008BE875A58D0274A8
91CB3D6F979C15FE16917827E4C3EFB5DD97415D7FCFC5330736C8F38B19BF65
2D686FDAF45E6046F72A39342D42380642B91B15510292DB0EA0600820F7A680
9854273BE75F2E0B34888EFA2CDA22FCF1A88C660474CCAFE613CD462D100151
CE7DE236D4CDD4A8651A7507DF2243163221AF54C3631EFF856F4FDF3A346862
56E43BCBA66393488FCD19AC9A91EBA638E623667C5D4C54D36BB75DCB3450A1
EC9A541413E3C231657115D321075A491C18B2940B2FA118CFEE285F0945A7DE
6387BAF6BC6FE224B8CFF3799A85CA23EF15788BE623B5F47D604A942C912220
68502D39FC020AAC0D1A3E46C38BF1217956072B40F44A2EE6FD313A8176F2B0
01675A7FDBADD4AB3D8C53B3F443644A95FDC091E0052B07ECF55FF7B9F1B141
C53A87114C691CF6B078A12F1C169BE7180A867F69AB4976C7387211BFFB7C5D
2A214E493124FF668FDECAD04AAA8A0A0595E6A58DC4496001B646C0C0489F08
4ABBD8D32EC20428954D4CEC62F56D0FA2398E12D018AF80DC3D64CE49B871A2
B390AA0043C058D3117DC029B2661BF80B6913CAC30314C6928A0714ADA98369
DD9C23055A29CADCBB1CECE454F283F1ECDCA00D22D0B0032418EB0788576D1C
52D72188702A60B3ED3C611417946D8422326ADD065F97FFF666A010E711A8A5
81652EA070148AE24CFE671728EBC22BDBA6653FAA189FEEEB2B6DABE155E0D8
7AF380E7A016087D215921DE486449C6AFCD2E24926B41C026A629AB57121B30
919DA38540C8398E0E5F81BF9D481864E7C2D463C3350A521B3E08E731F5EE8C
3425308505C8B5F9A3F3FEBB7A4274909CEFF16E7EFD5FC16D825057ECD0E4A8
D8468BB881065574B7B7DE869A630B108D57E7DA505557134ED4A9D2345525E8
CCE30AB0F079249A694AEE1DA75ED974349F69F5A8244788CB7313F63603A1D5
6F01A0281CEE007628FBCDB8FD108695E65B3830AA7228EBFBB284BFFF2B2C03
86735BECD7E7ACF6FBD80A7BB86A904665853DD3092027997C8440CBF07345FE
BFEE125316CAF9DC909EA0DCD4468739A3FF15534A84F3DDB543C063A26E280E
FADCA3BC20324F325D42D1A8386614D6DD2F1EF4C02C0034231F6DD39FC820F5
ECC742E7408C3FF2953A0037B16F142D0B4F398F2DC74B5D66CB854E8F36CC6B
F75C4C8FE631B18F24DE552E89D21E57DFCA4B8F4695558AE46DEF026247AA0A
8D5EE344499E74D550EAC39417977907BAAF4D8B0A5B2EB03A0391DE064A47EB
2A85CAD6C7C89CFFA544CE9A5732066104A1A34B73A2793BAD0C2D5C795021D7
61A89D67AB22C75354A612F2B41937A47CF74E6152C65C4F3EFA8709BC0FAFC1
83AB9065FD7B1DF67F9414E874F2885D1BB0F28C5CE035CCE9B3A85FF362563F
458FC519F2C5C11A24DAE6231A99D6B37E250A712AA74CDFA5CB0922B2E6E283
51F3C4C1D2EDD4CAB6EF01F0D5226791CD40E5C73A94C8C557827BE676266A93
ED449B7264EAD829FE16D12847F0482CB1D726B9D60AFD872E010A5388D2F730
F3FD1C326C6F4FDA8603791CEAD184EE77D0134777E86DDAF3F89CDC801DD5CE
E75B9198FD16BDF3678047B1A8A656AFEAE6E9A6EDD0F666EFD67EC026324221
DDABC80CCFD1CC9FF2E74078C8572902AC00A36972687B5B31E8BCE14665CB84
FF97BAB1072E001574B7923243BD49B4CDB98789A48F28010E6CF782DC8D3A2A
1C8ECD913FD193C0EE81B574C25872511BEE91417A39E287DEE4631360757BB8
8C0971E21EF2D318892D71235990F61FB5E20C16CF6ED0E85976B33363530994
CA126E7EDBB2A1AA685A814BE689B9428C34CE6D05B680A436DDA57F477CEED4
48A28C8548740956ABB5D2B8F25D9A664C4288D9C4559681FBF9EE0435F86775
7AFBAFFD18CF0325C2D88240AC0CDB9799F2557A611901108749FD1C2D4EC74C
2CD70F26E27175C8EA157BFFAEEC7E5994C9551B5D4A5E86159CE57702777DDC
D9A9564CAA6208173179B5CABD7875B08AE8ED648C75B08123B54BC5B8242885
7CE61404B81EE4E853D1DCC12CDF237AA16BE83D7611EDB22D476C48C7FE4DB4
6233482F3D95472DF30A490ED2262AE08250E4C3E84D7D1C0D77D75962C9870F
0DD1FAD03E59AAEE8447BAE0CAD58C34C1D01BC32C1BCD726610AD53C1FCBED7
F24C856B9B2C1851F5D6639BC6A727C2A601FB5FA85F110CD24FDF9AE3603C6C
EDCFB72E53E2D88C894A1436DB48F003AFD56B5672028E7D90D1950986A6ECCD
7C6195692945F28F6808F99654193C8AF460B628967F4FCC58106D4A655C1C78
0267F04773C0886CC857277A3272FE58C1B9D65495EEBBD0562308097858639D
0289543284C2586393B2C75B0666956C7C0B81A240A1B1CD8E6D470E2C08949E
E7CCA9EFDA70002E2947FDDD55EACCB316AF32374B72CD66A87ACFFAA061B4D4
060EE5D9F9E52B142010C5ECD77C709729212D5D1421B4D6CDDFEB384E9FD2C7
3F8EC59C84BA99B54208D298DC642B0955A0BDF32214C307A7DAA80E187528CC
A8851B48FC48587687B6FABED5C7BA9A1CE5112A81FDDF1A7D20BD756DCE9FB6
7C37F052C17EC800B77BB89C7E14AFA86304AE8F4B52AF34420CC0AB87836E08
340A9FD97812ED554C29E38E541F377E9D4F641E38A13384196D3A33046C1617
E61EC57117682BC7D2ECEC12707B32023CCBB8E1095ACC6AC7738675B65BC4F7
7FC794B922183B3D54BB3315F73EEE20F7A7AECCD775D1CA44756741D0007AEA
4A18DADA0BD2E41A764147A57D67440AAE2AE3C147347F73C1E37E8E0BB606CD
3DCB3F9C2DA8A0E89FF3661FDF8E8FE7D913F6C9ABC0F36C0CFE00D28A24D114
24C0DDD147D6051845AE057A524F7270284683E30F22894C810EA7582ACCBBF3
5A46A466238471DF72A9265B943FEC4B44B31AE54BB71036F728DC4AA372E7F1
39ACA6C1C4CA8E55E0C26CE3C0C60D79D4EC9E13A43CC8AE3243B6BC74F84F6E
8E92256096DE903B82BB1D240775047DB6DA6AA55D23ACB9C1AAE2741B3A2EB1
FDC26746B72DD0735F93094BA214730E845992F99C4BFF9A518EC8DF1EBFDADE
88BD13A3305F1B1A909CB1EA1F4DAFD0C7A29AC181777CE3828862E9092115ED
CF98A1A6FA984F55B3DD8D743A8A19B486640828FB567DD721241641CDD44915
D9544A8A41B75726A7444410236EF340238643BFD344D8BC3A1FBB830F0AB02E
86DAAB06943B73FAB02AF36C15E333066EF17BDC36C51AA3ED5B7825E8715479
AB6241E35092A381CBEB75BBE3EE85E2A699E9AEB8C2023F673EFA8DE5E9FAA0
C6D689FEAD35BCC035F17E1BC44EC07D1A79CD19E55B7B20DF814D824F161A2B
66F8C12A0633FF9821ECB2BA7ABDD403E1264C57777A474835117F5742AE555B
98DCC4ED964C4F9BB89DC5B6DB7BDCD0328DE2FD3E6CF07163E10A6B38550577
DF0139C0D894A02582FADA6A237D3D38BD72858915CAF5B0B9F533B62248D766
B5546C072FD74511C7916D19F6B8B205BA5CDB046698777776C095B15B1717C5
6EBEAD5732EF47FCA2F4457C9A1D63559CF18597E04595B2B5692DA03FF83072
D121192465DAEECA9845F13F6D2D26417CAD54D82372F7ADE835B15941729A91
DDD58A5E6EF4E2C88A4754F995D79581DCAD64044C4F411A47BB4ABA908A91D5
3A0842941877CAAAFABC20AF38EFDA44DCDB381D8EEFA8BF7E4801A8A5BAA68B
6D17AF1E99B91D847ED299669B4946A6D0B3736B06FD61DF4F0B59D7B8979210
DDCD4B03EBC9206128E32858AF2C1B38C243DC0F08AF81DFA9957948EC937E47
F10D0C9131A852A11CA61706025E60D2469E30E80275BC776CCF7CE1C5D3EE39
CA3807559DBE30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (TechnologyReview.dvi)
@start /Fa 240[34 15[{}1 58.1154 /CMSY7 rf /Fb 134[40
3[44 26 31 31 1[40 35 44 62 3[22 3[31 2[37 15[53 14[53
8[20 40 1[40 40 40 40 40 40 40 40 3[20 44[{
 TeXBase1Encoding ReEncodeFont }25 79.1666 /URWPalladioL-Ital
rf /Fc 134[44 3[48 26 44 31 1[48 48 48 1[22 1[22 22 48
2[44 48 44 1[44 10[53 2[53 2[53 4[57 4[48 1[57 57 57
13[44 44 44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }29
79.1666 /NimbusSanL-Bold rf /Fd 107[40 40 24[40 44 41
66 45 48 26 34 31 44 48 43 46 70 23 44 19 23 46 44 26
38 48 35 44 40 3[26 1[26 1[53 53 79 57 62 49 42 53 1[48
62 66 75 48 57 26 27 66 60 44 48 61 56 48 62 10[40 40
40 40 40 40 1[48 20 26 20 2[26 26 22 36[48 2[{
 TeXBase1Encoding ReEncodeFont }68 79.1666 /URWPalladioL-Roma
rf /Fe 133[40 2[66 1[48 26 35 31 2[44 48 70 26 48 1[26
48 44 1[40 48 35 1[40 10[62 5[48 6[31 66 1[44 2[57 1[62
1[35 10[40 40 40 40 3[26 45[{ TeXBase1Encoding ReEncodeFont }31
79.1666 /URWPalladioL-Bold rf /Ff 169[61 5[61 6[25 66
1[56 2[66 1[66 12[51 51 51 51 3[31 45[{ TeXBase1Encoding ReEncodeFont }
12 91.6666 /NimbusSanL-Bold rf /Fg 165[45 2[69 1[53 45
49 53 2[57 53 61 45 53 1[20 53 57 1[49 53 53 1[53 65[{
 TeXBase1Encoding ReEncodeFont }18 73.3333 /NimbusSanL-Bold
rf /Fh 201[32 32 32 32 32 32 49[{ TeXBase1Encoding ReEncodeFont }6
58.3333 /NimbusSanL-Regu rf /Fi 134[33 1[48 33 37 19
33 22 1[37 37 37 56 15 1[15 15 37 37 19 37 37 33 37 37
12[41 37[19 6[15 39[{ TeXBase1Encoding ReEncodeFont }25
66.6667 /NimbusSanL-Regu rf /Fj 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fk 138[23 14 1[16 3[23 4[12 1[21
1[16 3[18 13[23 14[32 68[{ TeXBase1Encoding ReEncodeFont }10
41.6666 /URWPalladioL-Ital rf /Fl 168[117 2[72 61 2[70
5[39 5[90 1[71 91 65[{ TeXBase1Encoding ReEncodeFont }8
116.667 /URWPalladioL-Roma rf /Fm 166[62 3[73 1[49 62
2[73 78 1[57 68 1[31 78 2[57 72 66 57 73 65[{
 TeXBase1Encoding ReEncodeFont }15 93.3332 /URWPalladioL-Roma
rf /Fn 171[123 105 3[157 7[153 2[155 12[100 1[100 53[{
 TeXBase1Encoding ReEncodeFont }7 200 /URWPalladioL-Roma
rf /Fo 166[107 3[124 98 84 107 1[97 126 133 151 98 2[54
133 122 89 98 1[113 98 124 65[{ TeXBase1Encoding ReEncodeFont }18
160 /URWPalladioL-Roma rf /Fp 168[200 1[156 1[122 5[200
6[111 122 1[144 1[156 65[{ TeXBase1Encoding ReEncodeFont }8
200 /URWPalladioL-Bold rf /Fq 166[107 1[160 1[124 107
98 116 1[98 133 133 160 98 124 1[62 1[133 89 98 1[116
107 124 65[{ TeXBase1Encoding ReEncodeFont }19 160 /URWPalladioL-Bold
rf /Fr 175[60 1[83 22[50 2[50 1[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }8 100 /URWPalladioL-Roma
rf /Fs 166[53 2[58 3[53 1[48 63 1[76 6[44 49 62 1[49
62 65[{ TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Ft 171[102 87 111 14[118 67[{ TeXBase1Encoding ReEncodeFont }4
166.667 /URWPalladioL-Roma rf /Fu 166[89 1[133 96 1[82
70 2[81 105 111 1[81 2[45 111 102 1[81 1[95 1[104 65[{
 TeXBase1Encoding ReEncodeFont }15 133.333 /URWPalladioL-Roma
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314
a
SDict begin H.S end
 -158 -314 a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.) cvn /DEST pdfmark end
 -158
-314 a -150 -150 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -4/Dest (section.2) cvn/Title (Visualization Frameworks)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (subsection.2.1) cvn/Title (D3.js) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.2.2) cvn/Title (Vis.js) /OUT
pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsection.2.3) cvn/Title (Chart.js) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.2.4) cvn/Title (Conclusion)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -4/Dest (section.3) cvn/Title (Password Hashing Algorithms)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.3.1) cvn/Title (PBKDF2) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.3.2) cvn/Title (Bcrypt) /OUT
pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.3.3) cvn/Title (Scrypt) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.3.4) cvn/Title (Conclusion)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -4/Dest (section.4) cvn/Title (Front-end Framework)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.4.1) cvn/Title (CSS Bootstrap)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsection.4.2) cvn/Title (Pure CSS) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.4.3) cvn/Title (Foundation)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsection.4.4) cvn/Title (Conclusion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 -150 a -150 -150 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 17.3749 H.A end
 -150 -150
a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150 -150 a -150 -150 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P()>>1<</S/D>>]>>>>
/PUT pdfmark end
 -150 -150 a -31
795 a @beginspecial 0 @llx 0 @lly 345 @urx 435 @ury 1133
@rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 521 1115 a Ft(C)8 b(S)51 b(C)8 b Fu(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Ft(T)8 b Fu(E)g(C)g(H)g(N)g(O)g(L)g(O)g(G)g(Y)52
b Ft(R)8 b Fu(E)g(V)g(I)g(E)g(W)1488 1315 y Fr(N)t Fs(O)t(V)t(E)t(M)t
(B)t(E)t(R)35 b Fr(1)t(4)t(,)d(2)t(0)t(1)t(7)482 1815
y Fp(A)59 b(S)10 b Fq(C)g(A)g(L)g(A)g(B)g(L)g(E)59 b
Fp(W)10 b Fq(E)g(B)59 b Fp(A)10 b Fq(P)g(P)g(L)g(I)g(C)g(A)-5
b(T)10 b(I)g(O)g(N)40 2015 y Fp(F)g Fq(R)g(A)g(M)g(E)g(W)g(O)g(R)g(K)60
b(F)10 b(O)g(R)59 b Fp(M)10 b Fq(O)g(N)g(I)g(T)g(O)g(R)g(I)g(N)g(G)61
b Fp(E)10 b Fq(N)g(E)g(R)g(G)g(Y)1028 2215 y Fp(U)g Fq(S)g(A)g(G)g(E)60
b(O)10 b(N)60 b Fp(C)10 b Fq(A)g(M)g(P)g(U)g(S)1617 3185
y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5 b(E)g(D)36 b(F)t(O)t(R)1
3418 y Fn(O)10 b Fo(R)g(E)g(G)g(O)g(N)59 b Fn(S)10 b
Fo(T)n(A)n(T)g(E)61 b Fn(O)10 b Fo(FFI)g(C)g(E)59 b(O)10
b(F)59 b Fn(S)10 b Fo(U)g(S)g(T)n(A)g(I)g(N)g(A)g(B)g(I)g(L)g(I)g(T)g
(Y)982 3601 y Fl(J)c Fm(A)g(C)g(K)34 b Fl(W)6 b Fm(O)g(O)g(D)g(S)p
1910 3601 1350 4 v 3410 3601 450 4 v 3088 3643 a Fk(Signatur)o(e)520
b(Date)1649 3877 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5 b(E)g(D)35
b(B)t(Y)1492 4110 y Fn(G)10 b Fo(R)g(O)g(U)g(P)59 b Fn(5)10
b(7)1103 4343 y(T)g Fo(H)g(E)59 b Fn(D)10 b Fo(R)g(E)g(A)g(M)60
b Fn(T)10 b Fo(E)g(A)g(M)602 4527 y Fl(D)c Fm(A)g(N)g(I)g(E)g(L)34
b Fl(S)6 b Fm(C)g(H)g(R)g(O)g(E)g(D)g(E)g(R)p 1910 4527
1350 4 v 3410 4527 450 4 v 3088 4569 a Fk(Signatur)o(e)520
b(Date)732 4710 y Fl(A)6 b Fm(U)g(B)g(R)g(E)g(Y)34 b
Fl(T)6 b Fm(H)g(E)g(N)g(E)g(L)g(L)p 1910 4710 1350 4
v 3410 4710 450 4 v 3088 4752 a Fk(Signatur)o(e)520 b(Date)902
4894 y Fl(P)l Fm(A)6 b(R)g(K)g(E)g(R)35 b Fl(B)6 b Fm(R)g(U)g(N)g(I)p
1910 4894 1350 4 v 3410 4894 450 4 v 3088 4936 a Fk(Signatur)o(e)520
b(Date)1815 5170 y Fj(Abstract)127 5299 y Fi(This)28
b(document)g(pro)o(vides)g(an)g(analysis)h(of)f(diff)n(erent)e
(technologies)i(that)g(could)g(be)g(used)g(to)g(satisfy)g(diff)n(erent)
e(components)i(of)g(our)g(w)o(eb)8 5386 y(application.)23
b(The)h(pur)r(pose)h(of)e(this)h(document)f(is)h(to)g(compare)g(and)g
(contr)o(ast)g(diff)n(erent)f(technologies)h(in)f(respect)i(to)e(our)h
(project')m(s)g(needs)g(and)8 5472 y(goals)19 b(and)g(choose)g(the)g
(best)f(choice)h(f)n(or)g(implementation.)p eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314 a
SDict begin H.S end
 -158 -314
a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -158 -314 a 4018
-206 a Fh(1)-150 -54 y
SDict begin H.S end
 -150 -54 a -150 -54 a
SDict begin 20.32591 H.A end
 -150 -54
a -150 -54 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -150 -54 a 2 w Ff(C)t Fg(O)t(N)t(T)t(E)t(N)t(T)t(S)-150
170 y
SDict begin H.S end
 -150 170 a Fe(1)178 b(Introduction)523 170 y
SDict begin 17.3749 H.L end
 523
170 a 523 170 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 523 170 a 3487 w Fd(2)-150 393 y
SDict begin H.S end
 -150
393 a Fe(2)g(V)l(isualization)25 b(Frameworks)1025 393
y
SDict begin 17.3749 H.L end
 1025 393 a 1025 393 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1025 393 a 2985 w Fd(2)68 537
y
SDict begin H.S end
 68 537 a Fd(2.1)197 b(D3.js)539 537 y
SDict begin 17.3749 H.L end
 539 537 a 539
537 a
SDict begin [/Subtype /Link/Dest (subsection.2.1) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 539 537 a 67 w Fd(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 681 y
SDict begin H.S end
 68 681
a Fd(2.2)197 b(V)l(is.js)548 681 y
SDict begin 17.3749 H.L end
 548 681 a 548 681
a
SDict begin [/Subtype /Link/Dest (subsection.2.2) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 548 681 a 58 w Fd(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 826 y
SDict begin H.S end
 68 826 a
Fd(2.3)197 b(Chart.js)637 826 y
SDict begin 17.3749 H.L end
 637 826 a 637 826 a
SDict begin [/Subtype /Link/Dest (subsection.2.3) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 637
826 a 31 w Fd(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)135 b(3)68 970 y
SDict begin H.S end
 68 970 a Fd(2.4)197
b(Conclusion)762 970 y
SDict begin 17.3749 H.L end
 762 970 a 762 970 a
SDict begin [/Subtype /Link/Dest (subsection.2.4) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 762 970 a
28 w Fd(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)135 b(3)-150 1193 y
SDict begin H.S end
 -150 1193 a Fe(3)178 b(Password)24
b(Hashing)h(Algorithms)1183 1193 y
SDict begin 17.3749 H.L end
 1183 1193 a 1183 1193
a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1183 1193 a 2827 w Fd(3)68 1338 y
SDict begin H.S end
 68 1338 a Fd(3.1)197
b(PBKDF2)663 1338 y
SDict begin 17.3749 H.L end
 663 1338 a 663 1338 a
SDict begin [/Subtype /Link/Dest (subsection.3.1) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 663 1338 a
66 w Fd(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)135 b(3)68 1482 y
SDict begin H.S end
 68 1482 a Fd(3.2)197 b(Bcrypt)597
1482 y
SDict begin 17.3749 H.L end
 597 1482 a 597 1482 a
SDict begin [/Subtype /Link/Dest (subsection.3.2) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 597 1482 a 71 w Fd(.)41
b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)68 1626 y
SDict begin H.S end
 68 1626 a Fd(3.3)197 b(Scrypt)591 1626
y
SDict begin 17.3749 H.L end
 591 1626 a 591 1626 a
SDict begin [/Subtype /Link/Dest (subsection.3.3) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 591 1626 a 77 w Fd(.)41 b(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(4)68
1770 y
SDict begin H.S end
 68 1770 a Fd(3.4)197 b(Conclusion)762 1770 y
SDict begin 17.3749 H.L end
 762
1770 a 762 1770 a
SDict begin [/Subtype /Link/Dest (subsection.3.4) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 762 1770 a 28 w Fd(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)-150 1994 y
SDict begin H.S end
 -150
1994 a Fe(4)178 b(Front-end)25 b(Framework)862 1994 y
SDict begin 17.3749 H.L end

862 1994 a 862 1994 a
SDict begin [/Subtype /Link/Dest (section.4) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 862 1994 a 3148 w Fd(5)68 2138
y
SDict begin H.S end
 68 2138 a Fd(4.1)197 b(CSS)21 b(Bootstrap)865 2138
y
SDict begin 17.3749 H.L end
 865 2138 a 865 2138 a
SDict begin [/Subtype /Link/Dest (subsection.4.1) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 865 2138 a 48 w Fd(.)41 b(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68 2282 y
SDict begin H.S end
 68 2282
a Fd(4.2)197 b(Pur)o(e)21 b(CSS)690 2282 y
SDict begin 17.3749 H.L end
 690 2282 a
690 2282 a
SDict begin [/Subtype /Link/Dest (subsection.4.2) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 690 2282 a 39 w Fd(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68 2427 y
SDict begin H.S end
 68 2427
a Fd(4.3)197 b(Foundation)772 2427 y
SDict begin 17.3749 H.L end
 772 2427 a 772 2427
a
SDict begin [/Subtype /Link/Dest (subsection.4.3) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 772 2427 a 80 w Fd(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)135 b(6)68 2571 y
SDict begin H.S end
 68 2571 a Fd(4.4)197 b(Conclusion)762
2571 y
SDict begin 17.3749 H.L end
 762 2571 a 762 2571 a
SDict begin [/Subtype /Link/Dest (subsection.4.4) cvn/H /I/Border [0
0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 762 2571 a 28 w Fd(.)42
b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(6)p eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314 a
SDict begin H.S end
 -158 -314
a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -158 -314 a 4018
-206 a Fh(2)-150 -150 y
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 17.3749 H.A end
 -150
-150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 -150 a -148 -54 a Ff(1)96 b(I)t
Fg(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)-150 -26
y
SDict begin H.S end
 -150 -26 a -150 -26 a
SDict begin 17.3749 H.A end
 -150 -26 a -150 -26 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -150 -26
a -148 140 a Ff(2)g(V)t Fg(I)t(S)t(UA)t(L)t(I)t(Z)t(A)m(T)5
b(I)g(O)t(N)36 b Ff(F)t Fg(R)t(A)t(M)t(E)t(W)s(O)t(R)t(K)t(S)-150
310 y Fd(Our)22 b(web)g(application)f(will)i(pr)o(ovide)f(near)o(-r)o
(eal)f(time)h(data)f(visualizations)f(for)j(ener)o(gy)f(consumption)g
(on)g(campus)f(buildings.)h(This)-150 454 y(application)17
b(will)g(need)i(to)e(dynamically)h(cr)o(eate)f(charts)g(and)h(graphs)f
(based)g(on)h(ener)o(gy)g(data)f(fr)o(om)h(the)g(database.)e(A)h(key)h
(to)g(choosing)-150 599 y(a)j(visualization)e(library)j(will)f(be)g(to)
h(\002nd)f(one)h(that)e(can)i(be)f(dynmaically)g(cr)o(eated)g(and)g
(changed)h(as)e(new)i(data)e(is)h(r)o(eceived)h(fr)o(om)f(the)-150
743 y(data)27 b(acquisition)h(servers,)f(and)h(the)g(ability)g(to)g(cr)
o(eate)f(chart)h(templates)e(that)h(can)h(be)g(r)o(eused)f(on)i
(multiple)e(pages)g(with)h(dif)o(fer)o(ent)-150 887 y(input)21
b(parameters.)-150 1032 y
SDict begin H.S end
 -150 1032 a -150 1032 a
SDict begin 17.3749 H.A end
 -150
1032 a -150 1032 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 -150 1032 a 122 x Fc(2.1)79 b(D3.js)-150
1323 y Fb(Repository)21 b(Commits:)g(4,104)-150 1468
y(Contributors:)h(120)-150 1612 y Fd(D3.js)27 b(is)g(a)h(clunky)-9
b(,)28 b(massive)e(library)i(that)f(makes)g(use)g(of)i(SVG)f(elements)f
(in)h(webpages)f(to)h(append)f(charts)g(and)h(graphics)f(to)h(the)-150
1756 y(DOM.)e(It)g(is)g(extr)o(emely)f(well)h(documented)h(and)f
(widely)g(used.)g(D3)g(has)f(a)h(high)g(learning)g(curve)g(for)h
(beginners)f(to)g(take)g(head-on,)-150 1900 y(but)21
b(has)h(a)g(wide)g(array)g(of)h(dif)o(fer)o(ent)f(visualizations)e(and)
i(customization.)-150 2045 y Fe(Pros)-31 2235 y Fa(\017)95
b Fd(A)19 b(lightwight,)h(versatile)f(javascript)f(library)i(that)g(cr)
o(eates)f(SVG)h(elements)f(within)h(web)g(pages)f(and)h(appends)f(them)
g(to)i(DOM)98 2379 y(elements.)-31 2523 y Fa(\017)95
b Fd(Makes)25 b(use)h(of)i(javascript)c(functions)j(and)g(DOM)g(contr)o
(olling)g(functionality)g(to)g(dynamically)f(change)h(the)f(content)h
(of)g(the)98 2668 y(page.)-31 2812 y Fa(\017)95 b Fd(Pr)o(ovides)21
b(a)h(lot)g(of)h(variety)f(and)g(ability)f(to)i(customize)e(graphics.)
-31 2956 y Fa(\017)95 b Fd(W)l(idely)23 b(used)h(and)f(ther)o(e)g(is)g
(a)g(lot)h(of)g(documentation)f(and)h(r)o(esour)o(ces)e(available)g(to)
i(assist)d(the)i(learning)h(and)g(development)98 3100
y(pr)o(ocesses.)-150 3291 y Fe(Cons)-31 3481 y Fa(\017)95
b Fd(D3)22 b(is)g(essentially)e(an)i(API)f(to)i(to)f(manipulate)e(SVG,)
i(it)g(is)g(not)g(a)g(charting)g(library)g(in)h(of)f(itself.)-31
3625 y Fa(\017)95 b Fd(Y)-7 b(ou)21 b(cannot)h(easily)g(pass)e(a)i
(dataset)f(into)h(a)g(speci\002ed)f(chart)i(type)e(like)h(other)h
(libraries.)-31 3770 y Fa(\017)95 b Fd(Consider)o(ed)22
b(to)h(be)e(\223code-heavy\224)h(and)g(dif)o(\002cult)g(to)h(jump)e
(right)h(into)g(as)g(a)f(novice)i(user)-6 b(.)-31 3914
y Fa(\017)95 b Fd(Angular)21 b(and)g(D3)g(both)h(attempt)e(to)h(contr)o
(ol)h(the)f(DOM)h(and)g(so)f(you)g(have)g(to)h(\002nd)g(a)f(way)g(to)g
(make)g(the)g(two)h(work)g(together)98 4058 y(which)g(is)g
(counterintuitive)g(to)g(both)g(framework's)g(APIs.)-150
4182 y
SDict begin H.S end
 -150 4182 a -150 4182 a
SDict begin 17.3749 H.A end
 -150 4182 a -150 4182
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.2) cvn /DEST pdfmark
end
 -150 4182 a 142 x Fc(2.2)79 b(Vis.js)-150 4494 y Fb(Repository)21
b(Commits:)g(3,165)-150 4638 y(Contributors:)h(137)-150
4783 y Fd(V)l(is.js)k(is)i(a)g(lightweight)g(charting)g(library)g(that)
g(allows)f(users)g(to)h(cr)o(eate)g(clean)g(charts)f(fr)o(om)i(dynamic)
f(datasets.)e(It)i(is)g(r)o(esponsive)-150 4927 y(and)23
b(allows)f(for)i(interaction)f(with)g(the)g(data)f(on)h(the)g(page.)f
(V)l(is.js)f(is)i(praised)f(for)i(it's)e(network)h(chart)g
(capabilities)e(but)h(is)h(limited)g(in)-150 5071 y(the)f(number)g(of)h
(dif)o(fer)o(ent)f(modules)g(you)g(can)g(cr)o(eate.)-150
5215 y Fe(Pros)-31 5406 y Fa(\017)95 b Fd(Easy)21 b(to)i(use)e(and)h
(less)g(of)g(a)g(learning)g(curve)g(than)g(D3.)-31 5550
y Fa(\017)95 b Fd(Allows)21 b(for)i(interaction)g(and)f(minpulation)f
(of)i(data)e(on)i(the)f(chart.)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314 a
SDict begin H.S end
 -158 -314
a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -158 -314 a 4018
-206 a Fh(3)-31 -54 y Fa(\017)95 b Fd(Able)21 b(to)h(handle)h(lar)o(ge)
e(amounts)g(of)i(dynamic)f(data.)-31 90 y Fa(\017)95
b Fd(Really)21 b(clean)h(and)h(nice)f(looking)h(graphics.)-150
284 y Fe(Cons)-31 479 y Fa(\017)95 b Fd(Limited)22 b(amount)g(of)h
(possible)e(chart)h(types.)-31 623 y Fa(\017)95 b Fd(Does)22
b(not)g(have)g(built)f(in)i(heat)e(map.)-150 775 y
SDict begin H.S end
 -150
775 a -150 775 a
SDict begin 17.3749 H.A end
 -150 775 a -150 775 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.3) cvn /DEST pdfmark
end
 -150 775 a 122
x Fc(2.3)79 b(Char)r(t.js)-150 1067 y Fb(Repository)21
b(Commits:)g(2,465)-150 1211 y(Contributors:)h(236)-150
1356 y Fd(Chart)17 b(js)f(is)h(a)g(very)g(lightweight)g(library)g(that)
g(pr)o(ovides)f(6)h(chart)g(types)f(and)h(fully)g(r)o(esponsive)f
(designs.)h(ChartJS)g(is)f(well)i(documented)-150 1500
y(and)k(easy)f(to)i(use,)e(but)g(lacks)h(in)g(variety)-9
b(.)-150 1644 y Fe(Pros)-31 1838 y Fa(\017)95 b Fd(Uses)21
b(HTML5)g(canvas)g(element.)-31 1983 y Fa(\017)95 b Fd(Allows)21
b(for)i(easy)f(cr)o(eating)f(based)h(on)g(chart)g(type)g
(speci\002cation.)-31 2127 y Fa(\017)95 b Fd(Library)22
b(pr)o(ovides)g(Line)g(Charts,)g(Bar)g(Charts,)f(Radar)h(Charts,)g(Pie)
g(Charts,)f(Polar)h(Ar)o(ea)f(Charts,)h(and)g(Doughnut)g(Charts.)-31
2271 y Fa(\017)95 b Fd(V)-9 b(ery)23 b(r)o(esponsive)d(charts)i(based)f
(on)i(scr)o(een)e(width.)-31 2415 y Fa(\017)95 b Fd(Simple)21
b(API,)g(easy)g(to)h(use.)-150 2609 y Fe(Cons)-31 2803
y Fa(\017)95 b Fd(Limited)22 b(amount)g(of)h(possible)e(chart)h(types.)
-31 2948 y Fa(\017)95 b Fd(Does)22 b(not)g(have)g(built)f(in)i(heat)e
(map.)-150 3100 y
SDict begin H.S end
 -150 3100 a -150 3100 a
SDict begin 17.3749 H.A end
 -150 3100 a
-150 3100 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.4) cvn /DEST pdfmark
end
 -150 3100 a 122 x Fc(2.4)79 b(Conc)n(lusion)-150
3392 y Fd(In)39 b(conclusion,)g(despite)g(the)g(steep)f(learning)h
(curve)g(associated)f(with)h(D3.js)f(we)h(think)h(it)f(will)g(be)g(the)
g(best)f(option)i(for)g(our)-150 3536 y(web)32 b(application.)f(It)g
(has)h(the)g(widest)g(range)g(of)h(available)d(graphs)i(to)g
(accomodate)g(all)g(the)g(client's)g(r)o(equirments)g(and)g(desir)o(ed)
-150 3681 y(visualizations.)24 b(Ther)o(e)i(ar)o(e)h(also)f(a)g(number)
h(of)g(wrapper)f(libraries)h(available)e(for)i(D3.js)f(like)h(DC.js)f
(and)h(dimple.js)e(to)i(help)g(cr)o(eate)-150 3825 y(charts)22
b(fr)o(om)h(D3.)f(This)g(is)g(a)g(gr)o(eat)g(way)h(to)f(get)h(ar)o
(ound)f(the)g(clunkiness)g(and)h(downsides)g(to)f(D3.js)g(and)g(r)o
(eap)g(the)g(bene\002ts)g(of)h(all)f(the)-150 3969 y(other)e(charting)f
(libraries.)g(Another)g(bene\002t)g(to)g(using)g(D3)g(is)g(the)g
(extensive)f(amount)h(of)h(templates,)d(examples,)h(and)h
(documentation)-150 4113 y(that)i(exists)g(to)i(help)e(guide)i(the)f
(pr)o(ocess)f(and)h(implmentation)f(of)i(our)f(application.)-150
4266 y
SDict begin H.S end
 -150 4266 a -150 4266 a
SDict begin 17.3749 H.A end
 -150 4266 a -150 4266
a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -150 4266 a -148 4412 a Ff(3)96 b(P)l Fg(A)t(S)t(S)t(W)s(O)t(R)t(D)33
b Ff(H)t Fg(A)t(S)t(H)t(I)t(N)t(G)h Ff(A)t Fg(L)t(G)t(O)t(R)t(I)t(T)t
(H)t(M)t(S)-150 4582 y Fd(Our)21 b(web)g(application)f(will)i(have)e
(an)h(authentication)f(layer)h(which)g(will)h(allow)f(administrative)f
(users)g(to)h(have)g(access)f(to)h(exclusive)-150 4727
y(parts)i(of)i(the)f(application.)f(Anytime)g(user)h(information)h(is)f
(stor)o(ed)g(into)g(a)g(database,)e(it)i(is)g(important)g(to)g(hash)f
(the)h(passwor)o(ds)f(and)-150 4871 y(keep)f(user)f(cr)o(edentials)h
(encrypted.)-150 5023 y
SDict begin H.S end
 -150 5023 a -150 5023 a
SDict begin 17.3749 H.A end
 -150
5023 a -150 5023 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.1) cvn /DEST pdfmark
end
 -150 5023 a 122 x Fc(3.1)79 b(PBKDF2)-150
5315 y Fd(The)17 b(PBKDF2)h(algorithm)f(is)g(widely)g(accepted)g(as)g
(it)g(is)g(published)f(by)h(the)g(RSA)f(\(RSA)h(Security)g(LLC\).)h(It)
f(pr)o(ovides)f(a)h(pseudorandom)-150 5459 y(function)j(and)g(a)f(salt)
g(value)g(over)g(many)h(iteartion)f(to)h(cr)o(eate)f(a)g(derived)h(key)
g(which)g(is)f(used)h(in)g(conjunction)f(with)h(a)f(known)h(key)g(like)
p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314 a
SDict begin H.S end
 -158 -314
a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -158 -314 a 4018
-206 a Fh(4)-150 -54 y Fd(a)27 b(passwor)o(d)e(to)i(ef)o(fectively)g
(hash)f(that)g(value)g(into)h(the)g(database.)e(It's)h(many)h
(iterations)f(make)g(it)h(dif)o(\002cult)g(for)h(hackers)e(to)h(br)o
(eak.)-150 90 y Fe(Pros)-31 284 y Fa(\017)95 b Fd(PBKDF2)22
b(allows)g(for)h(multiple)e(iterations,)h(and)g(adding)g(salted)g
(random)g(input)g(on)g(any)g(number)g(of)h(iterations)e([)p
Fe(?)q Fd(].)-31 429 y Fa(\017)95 b Fd(RSA)21 b(standar)o(d.)-150
623 y Fe(Cons)-31 817 y Fa(\017)95 b Fd(Unsafe)21 b(because)g(PBKDF2)i
(can)f(be)f(thor)o(oughly)i(optimized)e(with)h(GPU)g([)p
Fe(?)q Fd(].)-31 961 y Fa(\017)95 b Fd(Complex)22 b(API)f(and)h(slow)g
(computationally)-9 b(.)-150 1113 y
SDict begin H.S end
 -150 1113 a -150
1113 a
SDict begin 17.3749 H.A end
 -150 1113 a -150 1113 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.2) cvn /DEST pdfmark
end
 -150 1113 a 122 x Fc(3.2)79
b(Bcr)q(ypt)-150 1406 y Fd(The)29 b(Bcrypt)g(algorithm)g(performs)g
(quite)g(the)f(same)g(way)h(as)f(PBKDF2)i(except)e(it)h(makes)f(use)g
(of)i(table)e(altering)h(in)g(its)f(algorithm)-150 1550
y(that)21 b(highlights)g(a)g(fault)g(in)h(PBKDF2)g(wher)o(e)g(GPU's)f
(can)g(br)o(eak)g(the)g(encryption.)h(Bcrypt)f(has)g(been)h(ar)o(ound)f
(for)h(a)g(long)g(time)f(and)g(is)-150 1694 y(widely)i(accepted)e(as)h
(an)f(\223unbr)o(eakable\224)f(hashing)i(method.)-150
1838 y Fe(Pros)-31 2032 y Fa(\017)95 b Fd(Can)22 b(pr)o(ovide)g
(multiple)f(hash)g(iterations)h(to)g(str)o(engthen)f(the)h(security)-9
b(.)-31 2177 y Fa(\017)95 b Fd(V)-9 b(ery)23 b(secur)o(e)e(hash)g(that)
h(can)g(hash)f(the)h(same)f(passwor)o(d)g(multiple)g(times.)-31
2321 y Fa(\017)95 b Fd(W)l(idely)22 b(used)g(today)g(and)g(r)o(emains)f
(unbr)o(oken.)-31 2465 y Fa(\017)95 b Fd(V)-9 b(etted)22
b(by)g(the)g(entir)o(e)g(crypto)g(community)g(as)f(its)h(now)g(15)g
(years)f(old)i([)p Fe(?)q Fd(].)-150 2659 y Fe(Cons)-31
2853 y Fa(\017)95 b Fd(Slow)22 b(and)g(computationally)f(expensive)g
(hashing.)-31 2997 y Fa(\017)95 b Fd(Only)22 b(used)g(for)h(passwor)o
(d)e(hashing,)g(not)i(a)e(key-derivation)i(function.)-150
3150 y
SDict begin H.S end
 -150 3150 a -150 3150 a
SDict begin 17.3749 H.A end
 -150 3150 a -150 3150
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.3) cvn /DEST pdfmark
end
 -150 3150 a 122 x Fc(3.3)79 b(Scr)q(ypt)-150 3442 y
Fd(Script)31 b(works)g(the)g(same)g(way)g(as)f(Bcrypt)i(and)f(PBKDF2)h
(by)f(iteratively)g(hashing)g(and)g(using)g(a)g(salt)f(value)g(to)i(cr)
o(eate)e(a)h(hashed)-150 3586 y(passwor)o(d.)d(Scrypt)h(is)g(unique)h
(in)f(that)g(it)h(take)f(exponential)f(memory)i(to)g(decypher)g(the)f
(hash)g(as)g(well)g(as)g(exponential)g(time)g(for)-150
3730 y(every)20 b(iteration)f(over)h(the)g(hashing)f(algorithm)h(which)
g(makes)e(attackers)h(even)g(mor)o(e)h(unlikely)g(to)f(decypher)i
(passwor)o(ds.)c(Although)-150 3875 y(Scrypt)22 b(has)f(been)h(pr)o
(oven)f(ef)o(fective,)h(it)g(is)g(still)g(fairly)g(new)g(to)g(the)g
(market)g(and)g(has)g(not)g(been)g(totally)f(vari\002ed.)-150
4019 y Fe(Pros)-31 4213 y Fa(\017)95 b Fd(Can)22 b(pr)o(ovide)g
(multiple)f(hash)g(iterations)h(to)g(str)o(engthen)f(the)h(security)-9
b(.)-31 4357 y Fa(\017)95 b Fd(Newly)22 b(developed)g(based)f(on)i
(focusing)f(on)h(the)f(issues)e(with)i(BCrypt)h(and)f(PBKDF2)g
(involving)h(constant)e(memory)-9 b(.)-150 4551 y Fe(Cons)-31
4745 y Fa(\017)95 b Fd(New)22 b(and)g(not)g(widely)h(accepted)e(by)h
(security/cryptographic)g(pr)o(ofessionals.)-31 4890
y Fa(\017)95 b Fd(Uses)21 b(exponential)g(time)h(AND)g(exponential)f
(memory)h(which)h(may)e(be)h(overkill)h(for)g(our)f(application.)p
eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314 a
SDict begin H.S end
 -158 -314
a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -158 -314 a 4018
-206 a Fh(5)-150 -150 y
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 17.3749 H.A end
 -150
-150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.4) cvn /DEST pdfmark
end
 -150 -150 a 96 x Fc(3.4)79 b(Conc)n(lusion)-150
116 y Fd(Ther)o(e)39 b(is)h(a)g(lot)g(of)h(discussion)e(and)i
(documentation)f(involving)g(passwor)o(d)f(hashing)g(algorithms)h(and)g
(which)h(ones)f(ar)o(e)f(the)-150 261 y(\223safest.\224)24
b(For)i(our)g(web)g(application,)e(we)i(will)g(not)g(be)f(handling)h
(sensitive)f(user)g(data)g(like)h(cr)o(edit)g(car)o(d)g(information)g
(or)h(personal)-150 405 y(information,)d(so)g(we)g(do)g(not)g(need)g
(the)g(most)f(compr)o(ehansive)g(and)g(computationally)g(heavy)g
(hashing)g(algorithm)h(to)g(encrypt)g(our)-150 549 y(user)e(passwor)o
(ds.)e(For)i(this,)g(it)g(would)g(be)g(best)f(to)h(use)g(BCrypt)g
(because)f(it)h(is)f(so)h(widely)h(used,)e(has)g(pr)o(oven)h(to)g(be)g
(secur)o(e,)f(and)h(easy)-150 693 y(to)30 b(implement.)f(BCrypt)h(has)f
(its)h(own)g(npm)f(library)h(and)g(can)g(be)g(easily)f(con\002gur)o(e)h
(to)g(r)o(un)g(on)g(a)g(Node.js)f(envir)o(onment.)g(It)h(also)-150
838 y(pr)o(ovides)21 b(secur)o(e,)h(salted)f(hashed)h(that)f(can)h(be)g
(iterated)g(over)g(a)g(con\002gurable)g(amount)f(to)i(incr)o(ease)e
(the)h(hashes)f(ef)o(fectiveness.)-150 990 y
SDict begin H.S end
 -150 990
a -150 990 a
SDict begin 17.3749 H.A end
 -150 990 a -150 990 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -150 990 a -148 1136
a Ff(4)96 b(F)t Fg(R)s(O)t(N)t(T)-6 b Ff(-)t Fg(E)t(N)t(D)33
b Ff(F)t Fg(R)t(A)t(M)t(E)t(W)s(O)t(R)t(K)-150 1307 y
Fd(Our)e(web)f(application)g(will)g(be)h(a)f(series)g(of)h(dashboar)o
(ds)f(to)g(display)g(ener)o(gy)g(data)g(based)g(on)h(dif)o(fer)o(ent)g
(buildings)f(and)h(subsets)-150 1451 y(of)26 b(buildings)f(on)g(Or)o
(egon)h(State)e(University's)g(campus.)g(A)h(key)g(part)f(to)i
(designing)f(a)g(clean)g(dashboar)o(d)g(is)g(having)g(a)f(well-spaced)
-150 1595 y(grid-like)30 b(layout)e(with)h(dif)o(fer)o(ent)g(charts)f
(and)h(graphs)f(to)g(display)g(a)h(multitude)f(of)h(dif)o(fer)o(ent)g
(datasets)e(and)i(tr)o(ends.)f(Rather)g(than)-150 1739
y(customizing)16 b(classic)g(html)h(elements)f(and)h(using)g(div)g
(containers)g(to)g(space)e(our)j(dashboar)o(d,)e(we)h(wanted)g(to)g
(look)g(into)g(bootstrapped)-150 1884 y(dashboar)o(d)22
b(templates)e(that)h(allow)h(easy)g(customization)f(and)h
(clean-looking)h(r)o(esults.)-150 2036 y
SDict begin H.S end
 -150 2036 a
-150 2036 a
SDict begin 17.3749 H.A end
 -150 2036 a -150 2036 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.4.1) cvn /DEST pdfmark
end
 -150 2036 a 122 x
Fc(4.1)79 b(CSS)22 b(Bootstrap)-150 2328 y Fb(Repository)f(Commits:)g
(17,255)-150 2472 y(Contributors:)h(953)-150 2617 y Fd(CSS)39
b(Bootstrap)g(is)g(the)g(most)g(widely)h(used)f(CSS)f(framework)j
(available.)c(It)i(has)g(the)g(most)g(expansive)f(component)h(list)g
(and)-150 2761 y(helps)28 b(developers)h(cr)o(eate)f(clean)h(and)h
(beautiful)e(UX/UI)f(in)j(minimal)e(time)h(frames.)g(Bootstrap)f
(allows)h(developers)g(to)g(get)g(their)-150 2905 y(paplications)22
b(up)h(and)h(r)o(unning)h(quickly)f(without)g(having)f(to)h(worry)h
(about)e(fr)o(ont-end)i(styling.)e(A)h(major)f(issue)g(with)h
(Bootstrap)f(is)-150 3049 y(that)e(it)h(tends)g(to)h(look)f(very)g
(similar)g(acr)o(oss)f(applications)f(and)j(leaves)e(little)g(r)o(oom)i
(for)g(simple)e(customization.)-150 3194 y Fe(Pros)-31
3388 y Fa(\017)95 b Fd(Extensive)21 b(component)h(list,)g(r)o
(esponsive)e(design,)i(and)g(built-in)h(Javascript)d(functions.[)p
Fe(?)q Fd(])-31 3532 y Fa(\017)95 b Fd(EFully)22 b(r)o(esponsive)f
(design.)-31 3676 y Fa(\017)95 b Fd(Huge)21 b(developer)i(contrbution)f
(and)g(maintainence.)-31 3820 y Fa(\017)95 b Fd(Used)21
b(by)h(major)g(companies)f(like)h(L)l(yft.com,)h(V)-9
b(ogue.com,)22 b(V)-9 b(evo.com,)22 b(and)g(Newsweek.com.)g([)p
Fe(?)p Fd(])-150 4014 y Fe(Cons)-31 4208 y Fa(\017)95
b Fd(Unsuitable)20 b(for)j(small)e(scale)h(pr)o(ojects.)e([)p
Fe(?)q Fd(])-31 4353 y Fa(\017)95 b Fd(Not)22 b(good)h(if)f(you)g(want)
g(to)g(have)g(lar)o(ge)f(contr)o(ol)i(over)f(UI.)-150
4505 y
SDict begin H.S end
 -150 4505 a -150 4505 a
SDict begin 17.3749 H.A end
 -150 4505 a -150 4505
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.4.2) cvn /DEST pdfmark
end
 -150 4505 a 122 x Fc(4.2)79 b(Pure)22 b(CSS)-150 4797
y Fb(Repository)f(Commits:)g(541)-150 4941 y(Contributors:)h(51)-150
5086 y Fd(Pur)o(e)f(CSS)g(is)g(known)h(for)g(its)f(lightness)g(and)g
(simplicity)-9 b(.)21 b(Because)g(it's)g(small,)f(it)h(is)g(very)h
(fast)f(loading)h(and)f(makes)g(for)h(a)f(lightweight)-150
5230 y(web)28 b(application.)e(It)h(is)h(also)f(unique)g(in)h(that)f
(it)h(allows)f(modules/components)g(to)h(be)g(downloaded)h
(individually)-9 b(,)28 b(r)o(educing)g(its)-150 5374
y(size)21 b(even)h(mor)o(e.)g(Pur)o(e)f(CSS)h(is)g(good)h(for)g(small)e
(pr)o(ojects)g(that)g(need)i(to)f(get)g(up)f(and)h(r)o(unning)h
(quickly)g(and)f(easily)-9 b(.)-150 5518 y Fe(Pros)p
eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -314 a
SDict begin H.S end
 -158 -314
a -158 -314 a
SDict begin H.R end
 -158 -314 a -158 -314 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -158 -314 a 4018
-206 a Fh(6)-31 -54 y Fa(\017)95 b Fd(Meant)21 b(for)i(small)f(pr)o
(oject)f(to)h(get)g(up)f(and)i(r)o(unning)f(quickly)-9
b(.)-31 90 y Fa(\017)95 b Fd(Responsive)20 b(design)j(by)f(default.)-31
235 y Fa(\017)95 b Fd(Pur)o(e)21 b(CSS)h(is)f(modular)i(so)f(you)g(can)
g(download)h(only)f(the)g(components)g(you)g(need.)-31
379 y Fa(\017)95 b Fd(The)21 b(complete)h(module)h(is)e(very)h(small)g
(so)g(it)g(is)f(quick)i(loading.)-31 523 y Fa(\017)95
b Fd(Able)21 b(to)h(be)g(used)g(complimentary)g(with)g(other)g
(frameworks.)-150 717 y Fe(Cons)-31 911 y Fa(\017)95
b Fd(Not)22 b(as)f(extensive)g(component)h(list)g(as)f(Bootstrap.)-150
1064 y
SDict begin H.S end
 -150 1064 a -150 1064 a
SDict begin 17.3749 H.A end
 -150 1064 a -150 1064
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.4.3) cvn /DEST pdfmark
end
 -150 1064 a 121 x Fc(4.3)79 b(Foundation)-150 1356
y Fb(Repository)21 b(Commits:)g(15,094)-150 1500 y(Contributors:)h(959)
-150 1644 y Fd(Framework)30 b(is)f(the)g(second)h(most)f(popular)f(css)
h(framework)h(on)g(the)f(market)g(behind)g(bootstrap)g(and)g(tends)g
(to)h(perform)g(just)e(as)-150 1788 y(well.)h(Unlike)h(bootstrap's)e
(very)h(pr)o(ominent)g(theme,)g(Foundation)h(allows)f(for)i(mor)o(e)e
(customization)g(with)g(the)h(look)g(and)g(feel)f(of)-150
1933 y(web)21 b(pages)e([)p Fe(?)p Fd(].)i(Foundation)g(also)g(has)f(a)
g(very)h(good)g(grid)h(system)d(to)i(make)f(the)h(layout)f(of)h
(components)g(clean)f(and)h(r)o(esponsive)e([)p Fe(?)q
Fd(].)-150 2077 y Fe(Pros)-31 2271 y Fa(\017)95 b Fd(Responsive)20
b(design)j(by)f(default.)-31 2415 y Fa(\017)95 b Fd(Easier)22
b(to)g(customize)f(than)h(bootstrap.)-31 2560 y Fa(\017)95
b Fd(CSS)21 b(classes)g(ar)o(e)g(built)h(in.)g([)p Fe(?)p
Fd(])-31 2704 y Fa(\017)95 b Fd(Mor)o(e)22 b(unique)g(look)g(than)g
(the)g(mor)o(e-popular)g(bootstrap.)-31 2848 y Fa(\017)95
b Fd(Good)23 b(grid)g(implementaions)e(with)h(customizable)e(grid)j
(layouts.)-150 3042 y Fe(Cons)-31 3236 y Fa(\017)95 b
Fd(Less)21 b(maintained)h(than)g(bootstrap.)-31 3380
y Fa(\017)95 b Fd(Lack)22 b(of)h(support.)-31 3525 y
Fa(\017)95 b Fd(Higher)22 b(learning)g(curve)g(than)g(bootstrap.)-150
3677 y
SDict begin H.S end
 -150 3677 a -150 3677 a
SDict begin 17.3749 H.A end
 -150 3677 a -150 3677
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.4.4) cvn /DEST pdfmark
end
 -150 3677 a 122 x Fc(4.4)79 b(Conc)n(lusion)-150 3969
y Fd(A)27 b(lot)h(of)g(online)h(r)o(esour)o(ces)d(acknowledged)j(the)e
(fact)h(that)f(it)g(is)h(har)o(d)f(to)h(make)f(a)h(website)e(not)i
(look)g(like)g(bootstrap)f(when)h(using)-150 4113 y(bootstrap)f(css.)f
(Despite)h(this,)g(similar)g(to)h(our)g(r)o(easoning)f(behind)h
(choosing)g(D3.js,)f(we)g(would)h(like)g(to)g(use)f(a)g(framework)h
(that)f(is)-150 4258 y(heavily)21 b(supported)f(and)h(well-documented)i
(as)d(it)h(will)h(be)f(easier)f(to)i(answer)e(questions)h(during)h
(development.)e(W)-7 b(e)21 b(think)h(that)e(the)-150
4402 y(time)f(spent)f(r)o(estyling)g(Bootstrap)h(to)g(make)g(it)g(look)
h(unique)f(will)g(not)g(compar)o(e)g(to)g(the)g(time)g(saved)f(by)h
(utilizing)f(a)h(well-documented)-150 4546 y(framework.)30
b(Ther)o(e)e(is)i(also)e(a)h(pr)o(oject)g(called)1346
4568 y
SDict begin H.S end
 1346 4568 a -22 x Fd(UI)22 b(Bootstrap)1795 4491
y
SDict begin H.R end
 1795 4491 a 1795 4546 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://angular-ui.github.io/bootstrap/)>>/Subtype
/Link H.B /ANN pdfmark end
 1795 4546 a 30 w Fd(that)28
b(works)i(with)f(AngularJS)g(to)g(cr)o(eate)g(dir)o(ectives)g(for)h
(each)f(of)h(the)-150 4690 y(bootstrap)21 b(components.)g([)p
Fe(?)q Fd(])p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
